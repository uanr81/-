IP(8)                                                         Linux                                                         IP(8)

NAME
       ip - показ/манипулирование маршрутизацией, устройствами, политика маршрутизации и туннели

SYNOPSIS
       ip [ OPTIONS ] OBJECT { COMMAND | help }

       ip [ -force ] -batch filename

       OBJECT := { link | address | addrlabel | route | rule | neigh | ntable | tunnel | tuntap | maddress | mroute | mrule |
               monitor | xfrm | netns | l2tp | tcp_metrics }

       OPTIONS := { -V[ersion] | -h[uman-readable] | -s[tatistics] | -r[esolve] | -f[amily] { inet | inet6 | ipx | dnet | link }
               | -o[neline] | -n[etns] name | -a[ll] | -c[olor] }

OPTIONS
       -V, -Version
              Распечатайте версию утилиты ip и выйдите из нее.

       -h, -human, -human-readable
              выводить статистику с удобочитаемыми значениями, за которыми следует суффикс.

       -b, -batch <FILENAME>
              Прочитайте команды из предоставленного файла или стандартного ввода и вызовите их. Первый отказ приведет к завершению ip.

       -force
		Не прерывайте ip на ошибках в пакетном режиме. Если во время выполнения команд были ошибки, код возврата приложения будет равен
		нулю.

       -s, -stats, -statistics
              Выведите дополнительную информацию. Если опция появляется дважды и более, количество информации увеличивается. Как правило,
	      информация представляет собой статистику или некоторые значения времени.

       -d, -details
              Выведите более подробную информацию.

       -l, -loops <COUNT>
              Укажите максимальное количество циклов, которые логика «ip address flush» попытается выполнить, прежде чем сдаться. Значение по
	      умолчанию равно 10. Zero (0) означает цикл до тех пор, пока все адреса не будут удалены.

       -f, -family <FAMILY>
              Указывает семейство протоколов. Идентификатор семейства протоколов может быть одним из inet, inet6, bridge, ipx, dnet, mpls или link.
	      Если этого параметра нет, семейство протоколов угадывается из других аргументов. Если остальная часть командной строки не дает
	      достаточной информации для угадывания семейства, ip возвращается к установленному по умолчанию, обычно inet или any. ссылка - это
	      специальный идентификатор семьи, означающий, что сетевой протокол не задействован.

       -4     ярлык для -family inet.

       -6     ярлык для -family inet6.

       -B     ярлык для -семейства bridge.

       -D     ярлык для -family decnet.

       -I     ярлык для -family ipx.

       -M     ярлык для -family mpls.

       -0     ярлык для -family link.

       -o, -oneline
              выводить каждую запись на одной строке, заменяя строки на символ «\». Это удобно, когда вы хотите подсчитывать записи с помощью wc
	      (1) или grep (1) вывода.

       -r, -resolve
              используйте системное имя для преобразования имен DNS вместо адресов хоста.

       -n, -netns <NETNS>
              переключает ip в указанное сетевое пространство имен NETNS. На самом деле это просто упрощает выполнение:

              ip netns exec NETNS ip [ OPTIONS ] OBJECT { COMMAND | help }

              to

              ip -n[etns] NETNS [ OPTIONS ] OBJECT { COMMAND | help }

       -a, -all
              выполняет указанную команду над всеми объектами, зависит от того, поддерживает ли команда этот параметр.

       -c, -color
              Используйте цветной выход.

       -t, -timestamp
              отображать текущее время при использовании опции монитора.

IP - COMMAND SYNTAX
   OBJECT
       address
              - протокола (IP или IPv6) на устройстве.

       addrlabel
              - для настройки адреса протокола.

       l2tp   - туннель через IP (L2TPv3).

       link   - сетевое устройство.

       maddress
              - многоадресный адрес.

       monitor
              - следить за сообщениями netlink.

       mroute - многоадресной маршрутизации.

       mrule  - правило в базе данных политики маршрутизации многоадресной передачи.

       neighbour
              - управлять записями ARP или NDISC.

       netns  - управлять сетевыми пространствами имен.

       ntable - управлять работой кеша соседа.

       route  - запись в таблице маршрутизации.

       rule   - правило в базе данных политики маршрутизации.

       tcp_metrics/tcpmetrics
              - управлять метками TCP

       tunnel - туннель через IP.

       tuntap - управлять устройствами TUN/TAP.

       xfrm   - управлять политиками IPSec.

       Имена всех объектов могут быть записаны в полном или сокращенном виде, например, адрес может быть сокращен как addr или просто a.

   COMMAND
       Задает действие, выполняемое на объекте. Набор возможных действий зависит от типа объекта. Как правило, можно добавлять, удалять и
       показывать (или перечислять) объекты, но некоторые объекты не позволяют выполнять все эти операции или имеют некоторые дополнительные
       команды. Команда справки доступна для всех объектов. Он распечатывает список доступных команд и аргументов синтаксиса аргументов.

       Если команда не указана, предполагается, что используется некоторая команда по умолчанию. Обычно это список или, если объекты этого класса
       не могут быть перечислены, help.

EXIT STATUS
       Статус выхода равен 0, если команда была успешной, и 1, если есть синтаксическая ошибка. Если сообщение об ошибке было указано в статусе
       выхода ядра 2.

HISTORY
       ip был написан Алексеем Н. Кузнецовым и добавлен в Linux 2.2.

SEE ALSO
       ip-address(8), ip-addrlabel(8), ip-l2tp(8), ip-link(8), ip-maddress(8), ip-monitor(8), ip-mroute(8), ip-neighbour(8), ip-
       netns(8), ip-ntable(8), ip-route(8), ip-rule(8), ip-tcp_metrics(8), ip-tunnel(8), ip-xfrm(8)
       IP Command reference ip-cref.ps

REPORTING BUGS
       Сообщать о любых ошибках в списке рассылки Network Developers <netdev@vger.kernel.org>, где разработка и обслуживание в первую очередь
       выполняются. Вам не нужно подписываться на список, чтобы отправить там сообщение.

AUTHOR
       Оригинальная рукопись Михаила Литвака <mci@owl.openwall.com>

iproute2                                                   20 Dec 2011                                                      IP(8)
