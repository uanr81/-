IPTABLES(8)                     iptables 1.6.0                     IPTABLES(8)

NAME
       iptables/ip6tables — инструмент администрирования для фильтрации пакетов IPv4 / IPv6 и NAT

SYNOPSIS
       iptables [-t таблица] {-A|-C|-D} цепочка описание-правил

       ip6tables [-t таблица] {-A|-C|-D} цепочка описание-правил

       iptables [-t таблица] -I цепочка [номер-правила] описание-правил

       iptables [-t таблица] -R цепочка номер-правила описание-правил

       iptables [-t таблица] -D цепочка номер-правила

       iptables [-t таблица] -S [цепочка [номер-правила]]

       iptables [-t таблица] {-F|-L|-Z} [цепочка [номер-правила]] [options...]

       iptables [-t таблица] -N цепочка

       iptables [-t таблица] -X [цепочка]

       iptables [-t таблица] -P цепочка цель

       iptables [-t таблица] -E old-цепочка-name new-цепочка-name

       описание-правил = [matches...] [цель]

       match = -m matchname [per-match-options]

       цель = -j цельname [per-цель-options]


       chain - цепь; цель - цель; old-chain-name - Имя старой цепи; rulenum - номер-
ОПИСАНИЕ
       Iptables и ip6tables используются для настройки, обслуживания и проверки
       таблиц правил пакетов IPv4 и IPv6 в ядре Linux. Можно определить несколько
       разных таблиц. Каждая строка содержит ряд встроенных цепей и может также
       содержать определенные пользователем цепочки.

       Каждая цепочка представляет собой список правил, которые могут соответствовать
       набору пакетов. Каждое правило указывает, что делать с пакетом, который
       соответствует. Это называется «target»(цель), которая может быть и переходом к
       другой (определенной пользователем) цепочке в этой же таблице.

TARGETS (цели)
       Правило брандмауэра задает критерии для пакета и цели. Если пакет не попадает под
       действие правила, проверяется следующее правило в цепочке; если попадает, то следующее
       правило задается значением цели, которое может быть именем определенной пользователем
       цепочки, одной из целей, описанной в iptables-extensions (8), или одного из специальных
       значений ACCEPT , DROP или RETURN.

       ACCEPT означает принять (пропускать) пакет. DROP означает отбросить пакет (проигнорировать).
       RETURN означает остановку перемещения в этой цепочки и возобновление следующего правила в
       предыдущей (вызывающей) цепочке. Если достигнут конец встроенной цепочки или согласовано
       правило во встроенной цепочке с целевым RETURN, цель, заданная политикой цепочки, определяет
       судьбу пакета.

TABLES (Таблицы)
       В настоящее время существует пять независимых таблиц (какие таблицы присутствуют
       в любое время, зависит от параметров конфигурации ядра и какие модули присутствуют).

       -t, --table таблица
              Эта опция указывает таблицу сопоставления пакетов, к которой будет
	      применена команда. Если ядро ​​настроено с автоматической загрузкой модуля,
	      будет предпринята попытка загрузить соответствующий модуль для этой
	      таблицы, если он еще не существует.

              Итак, таблицы:

              filter:
                  Таблица используемая по-умолчанию (если опция -t не задана). Эта таблица
		  содержит предопределённые цепочки INPUT (для входящих пакетов - направленных
		  в локальные сокеты), FORWARD (для проходящих пакетов) и OUTPUT (для исходящих
		  пакетов - сгенерированных в локальной системе). 

              nat:
                  С этой таблицей следует обращаться, когда встречается пакет, который устанавливает
		  новое соединение. Она состоит из трех встроенных цепочек: PREROUTING (для изменения
		  входящих пакетов), OUTPUT (для изменения локально генерируемых пакетов до
		  их отправления) и POSTROUTING (для изменения исходящих пакетов). Поддержка IPv6
		  NAT доступна с момента выпуска 3.7.

              mangle:
                  Эта таблица используется для специализированного изменения пакетов. До ядра 2.4.17
		  имелось две встроенные цепочки: PREROUTING (для изменения входящих пакетов перед
		  маршрутизацией) и OUTPUT (для изменения локально генерируемых пакетов до маршрутизации).
		  Начиная с ядра 2.4.18, также поддерживаются три другие встроенные цепочки: INPUT (для
		  входящих в сам блок пакетов), FORWARD (для изменения проходящих пакетов) и POSTROUTING
		  (для изменения исходящих пакетов).

              raw:
                  Эта таблица используется в основном для настройки исключений из
		  отслеживания соединений в сочетании с целью NOTRACK. Она
		  регистрируется на крючках netfilter с более высоким приоритетом и,
		  таким образом, вызывается перед ip_conntrack или любыми другими
		  IP-таблицами. В таблице имеются следующие встроенные цепочки: PREROUTING
		  (для пакетов, поступающих через любой сетевой интерфейс) OUTPUT
		  (для пакетов, генерируемых локальными процессами)

              security:
                  Эта таблица используется для правил сетевого управления доступом (MAC),
		  таких как те, которые предусмотрены целями SECMARK и CONNSECMARK.
		  Обязательный контроль доступа реализуется модулями безопасности Linux,
		  такими как SELinux. Таблица безопасности вызывается после таблицы
		  фильтров, позволяя любым правилам дискреционного контроля доступа
		  (DAC) в таблице фильтров вступать в силу перед правилами MAC. В этой
		  таблице приведены следующие встроенные цепочки: INPUT (для входящих
		  пакетов в сам блок), OUTPUT (для изменения локально генерируемых пакетов
		  перед маршрутизацией) и FORWARD (для изменения проходящих пакетов).

OPTIONS (опции)
       Параметры, которые распознаются iptables и ip6tables, можно разделить на несколько разных групп.

   COMMANDS (команды)
       Эти опции указывают желаемое действие для выполнения в данном сеансе работы. Только одна из них
       может быть указана в командной строке, если не указано иначе в описании. Длинные имена команд и опций
       можно сокращать до первых букв, но их должно быть достаточно ,чтобы iptables смогла отличить
       их от всех других параметров.

       -A, --append цепочка описание-правил
              Добавьте одно или несколько правил в конец выбранной цепочки. Если имя источника и/или
	      адресата соответствует более чем одному адресц, для каждой возможной комбинации адресов
	      будет добавлено правило.

       -C, --check цепочка описание-правил
              Проверьте, существует ли описание правила в выбранной цепочке.
	      Эта команда использует ту же логику, что и -D, чтобы найти
	      подходящую запись, но не изменяет существующую конфигурацию
	      iptables и использует ее код возврата для указания успеха или сбоя.

       -D, --delete цепочка описание-правил
       -D, --delete цепочка номер-правила
              Удалите одно или несколько правил из указанной цепочки. Существует две
	      версии этой команды: правило может быть указано как число в цепочке
	      (начиная с 1 для первого правила) или через соответствие описания-правила.

       -I, --insert цепочка [номер-правила] описание-правил
              В указанной цепочке вставить одно или более правил в позицию заданную номером.
	      Так, если указан номер 1, правило или правила будут вставлены в начало цепочки.
	      Это позиция по умолчанию, если номер не указан.

       -R, --replace цепочка номер-правила описание-правил
              Заменить правило в указанной цепочке. Если имена источника и/или адресата соответствуют
	      нескольким адресам, команда не будет выполнена с сообщением об ошибке.
	      Правила нумеруются с 1.

       -L, --list [цепочка]
              Показать все правила в выбранной цепочке. Если цепочка не указана, то команда применяется
	      ко всем цепочкам. Как и всякая другая команда iptables, она воздействует на указанную таблицу
	      (filter, если таблица не указана), к примеру следующая команда выводит список правил NAT:

	      iptables -t nat -n -L

	      Обратите внимание на опцию -n которая часто используется для отключения (медленного)
	      определения имён DNS. Также можно указать опцию -Z -Z (zero), в этом случае автоматически
	      произойдёт перечисление правил цепочки и обнуление её счётчиков. Вид результата зависит от
	      других аргументов. Самый детальный результат может быть получен так: 

	      iptables -L -v

       -S, --list-rules [цепочка]
              Показать все правила в выбранной цепочке. Если цепочка не выбрана, все цепочки печатаются как
	      iptables-save. Как и любая другая команда iptributes, она применяется к указанной таблице
	      (по умолчанию filter).

       -F, --flush [цепочка]
              Сбросить выбранную цепочку (все цепочки в таблице, если ни одна не указана). Это эквивалентно
	      удалению по одному всех правил.

       -Z, --zero [цепочка [номер-правила]]
       	   	  Обнулить счётчики количества пакетов и байтов во всех или указанной цепочке.
		  Можно также указать -L, --list чтобы отобразить значения счётчиков непосредственно
		  перед их обнулением (см. выше).

	-N, --new-chain цепочка
              Создать новую, определённую пользователем цепочку с заданным именем. В момент
	      создания цепочки не должно быть уже существующих целей с указанным именем. 

       -X, --delete-chain [цепочка]
              Удалить цепочку, определённую пользователем. При этом не должно быть ссылок на удаляемую
	      цепочку. Если такие ссылки есть, необходимо сначала удалить или изменить правила,
	      ссылающиеся на удаляемую цепочку. Если цепочка не указана, из таблицы будут удалены все
	      цепочки кроме встроенных.

       -P, --policy цепочка цель
              Определить стратегию для цепочки. Допустимые цели описаны в разделе ЦЕЛИ настоящего
	      документа. Стратегия может быть задана только для встроенных цепочек и не может быть
	      задана для цепочек определённых пользователем. Цель политики должна быть либо ACCEPT,
	      либо DROP.

       -E, --rename-chain старое-имя новое-имя
              Переименовать цепочку, определённую пользователем. Эта команда не изменяет структуру
	      таблицы и используется только в косметических целях.

       -h
		Помоь. Показать (в настоящее время очень краткое) описание синтаксиса команды.

   PARAMETERS (Параметры)
       Следующие параметры предназначены для формирования правил (используются в командах add,
       delete, insert, replace и append).

       -4, --ipv4
              Этот параметр не влияет на iptables и iptables-restore. Если правило,
	      использующее параметр -4, вставлено с (и только с ) ip6tables-restore,
	      оно будет игнорироваться. Любое другое использование вызовет ошибку.
	      Эта опция позволяет правилам IPv4 и IPv6 в одном файле правил для
	      использования как с iptables-restore, так и с ip6tables-restore.

       -6, --ipv6
              Если правило, использующее параметр -6, вставлено с (и только с)
	      iptables-restore, оно будет игнорироваться. Любое другое использование
	      вызовет ошибку. Эта опция позволяет правилам IPv4 и IPv6 в одном файле
	      правил для использования как с iptables-restore, так и с ip6tables-restore.
	      Этот параметр не влияет на ip6tables и ip6tables-restore.

       [!] -p, --protocol протокол
              The protocol of the rule or of the packet to check.  The  speci‐
              fied protocol can be one of tcp, udp, udplite, icmp, icmpv6,esp,
              ah, sctp, mh or the special  keyword  "all",  or  it  can  be  a
              numeric  value, representing one of these protocols or a differ‐
              ent one.  A protocol name from /etc/protocols is  also  allowed.
              A "!" argument before the protocol inverts the test.  The number
              zero is equivalent to all. "all" will match with  all  protocols
              and is taken as default when this option is omitted.  Note that,
              in ip6tables, IPv6 extension headers except esp are not allowed.
              esp  and  ipv6-nonext  can be used with Kernel version 2.6.11 or
              later.  The number zero is equivalent to all, which  means  that
              you  cannot test the protocol field for the value 0 directly. To
              match on a HBH header, even if it were the last, you cannot  use
              -p 0, but always need -m hbh.
	      Протокол правила или проверяемого пакета. Указанный протокол может
	      быть одним из tcp, udp, udplite, icmp, icmpv6, esp, ah, sctp, mh или
	      специального ключевого слова «all», или это может быть числовое значение,
	      представляющее один из этих протоколов или отличающийся - это один.
	      Также разрешено имя протокола из /etc/protocols. «!» аргумент перед
	      протоколом инвертирует результат теста. Число 0 эквивалентно «all» будет
	      соответствовать всем протоколам и принимается как значение по
	      умолчанию, если эта опция опущена. Обратите внимание, что в ip6tables
	      заголовки расширения IPv6, кроме esp, не допускаются. esp и ipv6-nonext
	      могут использоваться с версией ядра версии 2.6.11 или новее. Число 0
	      эквивалентно "all", что означает, что вы не можете напрямую проверить поле
	      протокола для значения 0. Чтобы соответствовать заголовку HBH, даже если он
	      был последним, вы не можете использовать -p 0, но всегда можно -m hbh.

       [!] -s, --source address[/mask][,...]
              Описание источника. Адресом может быть либо сетевое имя, имя хоста, диапазон
	      IP-адресов (с маской через слеш), либо одиночный IP-адрес. Хосты разрешаются
	      только один раз, прежде чем правило будет отправлено в ядро. Обратите внимание,
	      что указание любого имени, которое должно быть разрешено с помощью удаленного запроса,
	      такого как DNS, - действительно плохая идея. Маской может быть либо
	      сетевая маска сети ipv4 (для ipt-ables), либо простое число, указывающее количество
	      1 (единиц) в левой части сетевой маски. Таким образом, маска iptables, равная 24,
	      эквивалентна 255.255.255.0. «!» аргумент перед описанием адреса инвертирует
	      смысл адреса. Флаг --src является псевдонимом для этой опции. Можно указать
	      несколько адресов, но это будет расширяться до нескольких правил
	      (при добавлении с -A) или приведет к удалению нескольких правил (с -D).

       [!] -d, --destination address[/mask][,...]
              Описание цели назначения. Синтаксис аналогичен синтаксису параметру -s (source)
	      для подробного описания синтаксиса. Флаг --dst является псевдонимом для этой опции.

       -m, --match match
              Указывает соответствие для использования, то есть модуль расширения,
	      который проверяет конкретное свойство. Набор совпадений составляет
	      условие, при котором вызывается цель. Соответствие сначала оцениваются,
	      как указано в командной строке, и работают в режиме короткого замыкания,
	      т. е. Если одно расширение дает ложное значение, оценка остановится.

       -j, --jump цель
              Определяет цель правила; т.е., что делать, когда пакет попадает под условия правила.
	      Целью может быть цепочка, определённая пользователем (отличная от цепочки правила),
	      одна из встроенных целей, определяющая окончательное действие над пакетом, или
	      расширение (см. раздел РАСШИРЕНИЯ далее по тексту). Если эта опция не задана в
	      правиле (и ключ -g также не использован), то правило не будет применяться, но
	      счётчик количества применений правила будет увеличен.
	      
       -g, --goto цепочка
              Продолжить обработку в цепочке, определённой пользователем. В отличие от опции --jump,
	      после возврата из вызванной цепочки, применение правил будет продолжено не в текущей
	      цепочке, а в той цепочке, которая вызвала текущую через --jump.

       [!] -i, --in-interface имя
       	     Имя интерфейса, через который должен быть получен обрабатываемый пакет (только для
	     пакетов входящих в цепочки INPUT, FORWARD и PREROUTING ). Использование аргумента "!"
	     перед именем интерфейса инвертирует результат теста. Если имя интерфейса оканчивается
	     на "+", то это означает любой интерфейс, имя которого начинается с указанного имени.
	     Если эта опция опущена, при обработке пакета интерфейс, с которого он был получен, не учитывается. 

       [!] -o, --out-interface name
              Имя интерфейса, через который отправляется обрабатываемый пакет (только для пакетов
	      входящих в цепочки FORWARD, OUTPUT и POSTROUTING ). Использование аргумента "!"
	      перед именем интерфейса инвертирует результат теста. Если имя интерфейса оканчивается
	      на "+", то это означает любой интерфейс, имя которого начинается с указанного имени.
	      Если эта опция опущена, при обработке пакета интерфейс, с которого он был получен, не
	      учитывается.
	      
       [!] -f, --fragment

       	      Это означает, что правило относится только к второму и последующим фрагментам IPv4
	      фрагментированных пакетов. Поскольку невозможно указать исходные или целевые порты
	      такого пакета (как и тип ICMP), такой пакет не будет обрабатываться никакими правилами,
	      которые их определяют. Когда "!" аргумент предшествует флагу «-f», правило будет
	      применяться только к первому фрагменту или нефрагментированным пакетам. Этот параметр
	      специфичен для IPv4, он недоступен в ip6tables.

       -c, --set-counters packets bytes
              Позволяет инициализировать в правиле счётчики пакетов и байтов (при выполнении операций
	      INSERT, APPEND, REPLACE ).

   OTHER OPTIONS (прочие опции)
       Можно указать следующие дополнительные опции:

       -v, --verbose
              Verbose  output.   This  option  makes the list command show the
              interface name, the rule options (if any), and  the  TOS  masks.
              The  packet  and  byte counters are also listed, with the suffix
              'K', 'M' or 'G' for 1000, 1,000,000 and 1,000,000,000  multipli‐
              ers  respectively  (but  see  the  -x flag to change this).  For
              appending, insertion,  deletion  and  replacement,  this  causes
              detailed  information on the rule or rules to be printed. -v may
              be specified multiple times to possibly emit more detailed debug
              statements.
	      Подробный вывод. Этот параметр позволяет команде list отобразить имя
	      интерфейса, параметры правила (если есть) и маски TOS. Также будут
	      перечислены счетчики пакетов и байтов с суффиксом «K», «M» или «G»
	      соответствующие множителям 1000, 1,000,000 и 1,000,000,000 (Флаг -x,
	      чтобы изменить это). Если ключ используется с командами --append,
	      --insert, --delete или --replace, то будет выведен подробный отчёт о
	      произведенной операции. -v может быть указано несколько раз, чтобы,
	      возможно, показать более подробные отчеты об отладке.
	      
       -w, --wait [seconds]
              Дождитесь блокировки xtables. Чтобы предотвратить одновременное выполнение
	      нескольких экземпляров программы, будет предпринята попытка получить эксклюзивную
	      блокировку при запуске. По умолчанию программа закончится, если невозможно получить
	      блокировку. Этот параметр заставит программу ждать (неопределенное время или в
	      течение дополнительных указанных секунд), пока не будет получен эксклюзивная блокировка.

       -n, --numeric
              Цифровой вывод. IP-адреса и номера портов будут выведенены в цифровом формате,
	      попытки преобразовать их в символические имена. По умолчанию программа попытается
	      отобразить их как имена хостов, имена сетей или службы (всякий раз, когда они применяются).

       -x, --exact
              Для всех чисел в выходных данных выводить их точные значения без
	      округления и без использования множителей K, M, G. Этот ключ используется
	      только с командой -L и не применим с другими командами.

       --line-numbers
              Режим вывода номеров строк при отображении списка правил командой --list.
	      Номер строки соответствует позиции правила в цепочке.

       --modprobe=command
              При добавлении или вставке правил в цепочку используйте команду для загрузки
	      любых необходимых модулей (целей, совпадений и т. Д.).Может использоваться в
	      случае, когда модули ядра находится вне стандартного пути поиска. 

MATCH AND TARGET EXTENSIONS РАСШИРЕНИЯ соответствий И ЦЕЛЕВЫХ ЗАДАЧ
       iptables может использовать расширенные пакеты и целевые модули. Список
       из них доступен в man-странице iptables-extensions (8).

DIAGNOSTICS
       Различные сообщения об ошибках печатаются со стандартной ошибкой. Код возврата 0
       для правильного функционирования. Ошибки, которые, как предпологается,
       вызваны недействительными или злоупотребляемыми параметрами командной строки,
       вызывают код возврата 2, а другие ошибки вызывают код ввозврата 1.

BUGS
       Bugs?  Что это? ;-)  Ну, вы можете взглянуть на
       http://bugzilla.netfilter.org/

COMPATIBILITY WITH IPCHAINS СОВМЕСТИМОСТЬ С IPCHAINS
       Этот iptables очень похож на ipchains от Rusty Russell. Основное различие
       заключается в том, что цепочки INPUT и OUTPUT пересекаются только для
       пакетов, поступающих на локальный хост и исходящих из локального хоста
       соответственно. Следовательно, каждый пакет проходит только через одну из трех
       цепочек (за исключением циклического трафика, который включает в себя как
       цепочки INPUT, так и OUTPUT); ранее пересылаемый пакет будет проходить
       через все три.

       Другое главное отличие состоит в том, что -i относится к интерфейсу ввода;
       -o относится к интерфейсу вывода, и оба доступны для пакетов, входящих
       в цепочку FORWARD.

       Различные формы NAT были отделены друг от друга; iptables - это чистый
       пакетный фильтр при использовании таблицы «filter» по умолчанию с
       дополнительными модулями расширения. Это должно упростить большую часть
       предыдущей путаницы по сравнению с комбинацией маскировки IP и фильтрации
       пакетов, наблюдаемой ранее. Таким образом, следующие параметры
       обрабатываются по-разному:
        -j MASQ
        -M -S
        -M -L
       В iptables есть несколько других изменений.

SEE ALSO
       iptables-apply(8),   iptables-save(8),    iptables-restore(8),    ipta‐
       bles-extensions(8),

       packet-filtering-HOWTO подробнее использование iptables для фильтрации пакетов,
       NAT-HOWTO детали NAT, netfilter-extensions-HOWTO  детали расширения, которые
       не входят в стандартный дистрибутив, и netfilter-hacking-HOWTO 
       внутренние детали сетевые фильтры.
       See http://www.netfilter.org/.

AUTHORS
       Rusty Russell originally wrote iptables,  in  early  consultation  with
       Michael Neuling.

       Marc  Boucher  made  Rusty  abandon  ipnatctl by lobbying for a generic
       packet selection framework in iptables, then wrote  the  mangle  table,
       the owner match, the mark stuff, and ran around doing cool stuff every‐
       where.

       James Morris wrote the TOS target, and tos match.

       Jozsef Kadlecsik wrote the REJECT target.

       Harald Welte wrote the ULOG and NFQUEUE target,  the  new  libiptc,  as
       well as the TTL, DSCP, ECN matches and target.

       The  Netfilter  Core  Team is: Jozsef Kadlecsik, Patrick McHardy, Pablo
       Neira Ayuso, Eric Leblond and Florian Westphal. Emeritus Core Team mem‐
       bers  are: Marc Boucher, Martin Josefsson, Yasuyuki Kozakai, James Mor‐
       ris, Harald Welte and Rusty Russell.

       Персональная страница, первоначально написанная Эрве Эйхенн <rv@wallfire.org>.

VERSION
       This manual page applies to iptables/ip6tables 1.6.0.

iptables 1.6.0                                                     IPTABLES(8)
