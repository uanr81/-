SSH-AGENT(1)              BSD General Commands Manual             SSH-AGENT(1)

NAME
     ssh-agent — authentication agent

SYNOPSIS
     ssh-agent [-c | -s] [-Dd] [-a bind_address] [-E fingerprint_hash]
               [-t life] [-P pkcs11_whitelist] [command [arg ...]]
     ssh-agent [-c | -s] -k

DESCRIPTION
     ssh-agent - это программа для хранения секретных ключей, используемых для аутентификации с открытым ключом (RSA, DSA, ECDSA, Ed25519).
     ssh-agent обычно запускается в начале сеанса X-сеанса или сеанса входа в систему, а все остальные окна или программы запускаются как клиенты
     в программе ssh-agent. Благодаря использованию переменных среды агент может быть расположен и автоматически использоваться для аутентификации
     при входе на другие машины с помощью ssh (1).

     У агента сначала нет закрытых ключей. Ключи добавляются с помощью ssh (1) (подробности см. В AddKeysToAgent в ssh_config (5)) или ssh-add (1).
     Несколько идентификаторов могут храниться в ssh-agent одновременно, и ssh (1) будет автоматически использовать их, если они есть. ssh-add (1)
     также используется для удаления ключей из ssh-agent и запроса ключей, которые хранятся в одном.

     The options are as follows:

     -a bind_address
             Привяжите агент к сокету UNIX-домена bind_address. По умолчанию используется $TMPDIR/ssh-XXXXXXXXXX/agent.<Ppid>.

     -c      Сгенерировать команды C-shell на stdout. Это значение по умолчанию, если SHELL выглядит как csh-стиль оболочки.

     -D      Режим переднего плана. Когда этот параметр указан, ssh-agent не будет вилкой.

     -d      Режим отладки. Когда этот параметр указан, ssh-agent не будет fork и будет записывать отладочную информацию в стандартную ошибку.

     -E fingerprint_hash
             Определяет хэш-алгоритм, используемый при отображении отпечатков пальцев. Возможны следующие варианты: «md5» и «sha256». По
	     умолчанию используется «sha256».

     -k      Убейте текущего агента (заданного переменной среды SSH_AGENT_PID).

     -P      Укажите список шаблонов допустимых путей для общих библиотек PKCS#11, которые могут быть добавлены с помощью опции -s для
     	     ssh-add (1). По умолчанию разрешено загружать библиотеки PKCS#11 из «/usr/lib/*, /usr/local/lib/*». Библиотекам PKCS#11, которые не
	     соответствуют белым спискам, будет отказано. См. PATTERNS в ssh_config (5) для описания синтаксиса списка шаблонов.

     -s      Создайте команды оболочки Bourne на stdout. Это значение по умолчанию, если SHELL не похож на стиль csh оболочки.

     -t life
             Установите значение по умолчанию для максимального срока службы идентификаторов, добавленных в агент. Время жизни может быть указано
	     в секундах или в формате времени, указанном в sshd_config (5). Время жизни, указанное для идентификатора с ssh-add (1), переопределяет
	     это значение. Без этой опции максимальный срок службы по умолчанию - навсегда.

     Если задана командная строка, это выполняется как подпроцесс агента. Когда команда умирает, агент тоже.

     Идея заключается в том, что агент запускается на локальном ПК, ноутбуке или терминале пользователя. Данные аутентификации не должны храниться
     на какой-либо другой машине, а кодовые фразы аутентификации никогда не передаются по сети. Однако соединение с агентом пересылается по
     удаленным входам SSH, и пользователь может таким образом использовать привилегии, заданные идентификаторами в любой точке сети, безопасным
     способом.

     Существует два основных способа установки агента: во-первых, агент запускает новую подкоманду, в которую экспортируются некоторые переменные
     среды, например ssh-agent xterm &. Во-вторых, агент печатает необходимые команды оболочки (может быть сгенерирован синтаксис sh (1) или
     csh(1)), который может быть оценен в вызывающей оболочке, например eval `ssh-agent -s` для оболочек типа Bourne таких как sh (1) или ksh (1)
     и eval `ssh-agent -c` для csh (1) и производных.

     Позже ssh (1) рассматривает эти переменные и использует их для установления связи с агентом.

     Агент никогда не будет отправлять закрытый ключ по каналу запроса. Вместо этого операторы, которым требуется закрытый ключ, будут выполняться
     агентом, и результат будет возвращен запрашивающему. Таким образом, частные ключи не подвергаются воздействию клиентов, использующих агент.

     Создается сокет UNIX-домена, и имя этого сокета сохраняется в переменной среды SSH_AUTH_SOCK. Сокет становится доступным только для текущего
     пользователя. Этот метод легко злоупотребляется корнем или другим экземпляром того же пользователя.

     Переменная среды SSH_AGENT_PID содержит идентификатор процесса агента.

     Агент автоматически завершается, когда команда, указанная в командной строке, завершается.

     В Debian ssh-agent устанавливается с установленным битом set-group-id, чтобы предотвратить атаки ptrace (2), получая материал закрытого ключа.
     Это имеет побочный эффект, позволяющий компоновщику времени выполнения удалить определенные переменные среды, которые могут иметь последствия
     для безопасности для программ set-id, включая LD_PRELOAD, LD_LIBRARY_PATH и TMPDIR. Если вам нужно установить любую из этих переменных среды,
     вам нужно будет сделать это в программе, выполняемой ssh-agent.

FILES
     $TMPDIR/ssh-XXXXXXXXXX/agent.<ppid>
             Сокеты UNIX-домена, используемые для соединения с агентом аутентификации. Эти сокеты должны быть прочитаны только владельцем.
	     Сокеты должны автоматически удаляться при выходе агента.

SEE ALSO
     ssh(1), ssh-add(1), ssh-keygen(1), sshd(8)

AUTHORS
     OpenSSH is a derivative of the original and free ssh 1.2.12 release by
     Tatu Ylonen.  Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos, Theo
     de Raadt and Dug Song removed many bugs, re-added newer features and cre‐
     ated OpenSSH.  Markus Friedl contributed the support for SSH protocol
     versions 1.5 and 2.0.

BSD                            November 30, 2016                           BSD
