3 Secret Service API
********************

Секретная служба API-это стандарт от freedesktop.org для безопасного
хранения паролей и другой конфиденциальной информации.  Этот API
реализуется системными демонами, такими как набор ключей GNOME и
кошелек KDE (это пакеты GNOME и KDE соответственно и должны быть
доступны в большинстве современных систем GNU/Linux).

   Библиотека auth-source использует библиотеку ‘secrets.el’ для
   подключения через Secret Service API. Вы также можете
   использовать эту библиотеку в других пакетах, она не
   является эксклюзивной для auth-source.

 -- Variable: secrets-enabled
     После загрузки ‘secrets.el’ значение этой переменной,
     отличное от -‘nil’, указывает на существование демона,
     предоставляющего API секретной службы.

 -- Command: secrets-show-secrets
     Эта команда показывает все коллекции, элементы и их атрибуты.

   Элементарными объектами, управляемыми API секретной службы,
   являются "secret items", которые содержат вещи, которые
   приложение желает безопасно хранить, например, пароль.
   Секретные элементы имеют метку (имя), "secret" (строку,
   которую мы хотим, например, пароль) и набор атрибутов
   поиска. Атрибуты могут быть использованы для поиска и
   извлечения секретного элемента позднее.

   Секретные предметы сгруппированы в "collections". Коллекцию
   иногда называют ‘keyring’ или ‘wallet’ в связке ключей GNOME
   и KDE Wallet, но это то же самое, группа секретов. Коллекции
   являются личными и защищены, так что только владелец может
   открыть их.

   Самая распространенная коллекция называется ‘"login"’.

   Коллекция может иметь псевдоним. Обычно используется
   псевдоним ‘"default"’, поэтому клиентам не нужно знать
   конкретное имя коллекции, которую они открывают. Другие
   псевдонимы пока не поддерживаются. Поскольку псевдонимы
   доступны по всему миру, устанавливайте псевдоним
   ‘"default"’ только тогда, когда вы уверены, что он уместен.

 -- Function: secrets-list-collections
     Эта функция возвращает все имена коллекций в виде списка.

 -- Function: secrets-set-alias collection alias
     Установите ALIAS в качестве псевдонима коллекции
     с пометкой COLLECTION. В настоящее время
     поддерживается только псевдоним ‘"default"’.

 -- Function: secrets-get-alias alias
     Вернуть имя коллекции, на которую ссылается ALIAS.
     В настоящее время поддерживается только псевдоним ‘"default"’.

   Коллекции могут быть созданы и удалены функциями
   ‘secrets-create-collection’ и ‘secrets-delete-collection’.
   Обычно это не делается в Emacs. Не удаляйте стандартные
   коллекции, такие как ‘"login"’.

   Специальная коллекция ‘"session"’ существует для времени
   жизни соответствующего сеанса клиента (в нашем случае,
   время жизни Emacs). Он создается автоматически, когда
   Emacs использует интерфейс секретной службы, и удаляется,
   когда Emacs убит. Следовательно, его можно использовать
   для временного хранения и извлечения секретных предметов.
   Коллекция ‘"session"’ лучше постоянной коллекции, когда
   секретные элементы не должны жить дольше, чем Emacs.
   Коллекция сеансов может быть указана либо строкой
   ‘"session"’, либо ‘nil’, когда параметр коллекции
   требуется в следующих функциях.

 -- Function: secrets-list-items collection
     Возвращает все метки элемента COLLECTION в виде списка.

 -- Function: secrets-create-item collection item password &rest
          attributes
     Эта функция создает новый элемент в COLLECTION с меткой
     ITEM и паролем PASSWORD. ATTRIBUTES - это пары
     ключ-значение, установленные для созданного элемента.
     Ключи являются ключевыми словами, начинающимися
     с двоеточия. Пример:

          ;;; Сеанс "session", метка "my item" и
	  ;;; секретный (password) - "geheim"
          (secrets-create-item "session" "my item" "geheim"
           :method "sudo" :user "joe" :host "remote-host")

 -- Function: secrets-get-secret collection item
     Верните секрет предмета, помеченного ITEM в COLLECTION.
     Если такого элемента нет, верните ‘nil’.

 -- Function: secrets-delete-item collection item
     Эта функция удаляет элемент ITEM в COLLECTION.

   Атрибуты поиска, которые указываются при создании
   секретного элемента, должны быть парой ключ-значение.
   Ключи являются ключевыми словами, начинающимися с двоеточия;
   значения являются строками. Их можно извлечь из заданного
   секретного предмета и использовать для поиска предметов.

 -- Function: secrets-get-attribute collection item attribute
     Возвращает значение ключа ATTRIBUTE элемента, помеченного
     ITEM в COLLECTION. Если такого элемента нет или элемент
     не имеет этой клавиши, функция возвращает ‘nil’.

 -- Function: secrets-get-attributes collection item
     Вернуть атрибуты поиска элемента, помеченного ITEM, в
     COLLECTION. Если такого элемента нет или элемент не
     имеет атрибутов, он возвращает ‘nil’. Пример:

          (secrets-get-attributes "session" "my item")
               ⇒ ((:user . "joe") (:host ."remote-host"))

 -- Function: secrets-search-items collection &rest attributes
     Поиск предметов в COLLECTION с соответствующими ATTRIBUTES.
     ATTRIBUTES являются парами ключ-значение, как
     используется в ‘secrets-create-item’ .
     Example:

          (secrets-search-items "session" :user "joe")
               ⇒ ("my item" "another item")

   Библиотека auth-source использует библиотеку ‘secrets.el’ и,
   следовательно, API секретной службы, когда вы указываете
   сопоставление источника ‘"secrets:COLLECTION"’.  Например,
   вы можете использовать ‘"secrets:session"’ для
   использования коллекции ‘"session"’, открытой
   только на время существования Emacs. Или вы можете
   использовать ‘"secrets:Login"’, чтобы открыть
   коллекцию ‘"Login"’. В качестве особого случая
   вы можете использовать символ ‘default’ в
   ‘auth-sources’ (не строка, а символ), чтобы
   указать псевдоним ‘"default"’. Вот надуманный пример,
   который устанавливает ‘auth-sources’ для поиска в трех
   коллекциях, а затем возвращается к ‘~/.authinfo.gpg’.

     (setq auth-sources '(default
                          "secrets:session"
                          "secrets:Login"
                          "~/.authinfo.gpg"))

