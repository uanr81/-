@node OpenSSL
OPENSSL(1)                          OpenSSL                         OPENSSL(1)

NAME
       openssl - OpenSSL инструмент командной строки

SYNOPSIS
       openssl command [ command_opts ] [ command_args ]

       openssl list [ standard-commands | digest-commands | cipher-commands |
       cipher-algorithms | digest-algorithms | public-key-algorithms]

       openssl no-XXX [ arbitrary options ]

DESCRIPTION
       OpenSSL - это криптографический инструментарий, реализующий сетевые
       протоколы Secure Sockets Layer (SSL v2/v3) и Transport Layer Security (TLS v1) и
       соответствующие им стандарты криптографии.

       Программа openssl - это инструмент командной строки для использования
       различных криптографических функций криптографической библиотеки OpenSSL
       из оболочки. Может использоваться для

        o  Создание и управление закрытыми ключами, открытыми ключами и параметрами
        o  Криптографические операции с открытым ключом
        o  Создание сертификатов X.509, CSR и CRL
        o  Расчет дайджестов сообщений
        o  Шифрование и дешифрование с помощью шифров
        o  SSL/TLS Client и  Server тестирование
        o  Обработка подписанной или зашифрованной почты S/MIME
        o  Запросы отметок времени, генерация и проверка

COMMAND SUMMARY
       Программа openssl предоставляет широкий спектр команд (команда в SYNOPSIS выше),
       каждая из которых часто имеет множество опций и аргументов (command_opts и command_args
       в SYNOPSIS).

       Подробная документация и варианты использования для большинства стандартных
       подкоманд доступны (x509(1) или openssl-x509(1)).

       Многие команды используют внешний файл конфигурации для некоторых или всех
       своих аргументов и имеют опцию -config, чтобы указать этот файл. Переменная
       окружения OPENSSL_CONF может использоваться для указания местоположения файла.
       Если переменная среды не указана, то файл называется openssl.cnf в области
       хранения сертификатов по умолчанию, значение которого зависит от флагов
       конфигурации, указанных при сборке OpenSSL.

       Параметры списка standard-commands, digest-commands, и cipher-commands выводят
       список (по одной записи в строке) имен всех стандартных команд, команд дайджеста
       сообщений или команд шифрования, соответственно, доступных в настоящей
       утилите openssl.

       Параметры списка cipher-algorithms и digest-algorithms содержат список всех
       имен шифров и дайджестов сообщений, по одной записи в строке. Псевдонимы
       перечислены как:

        from => to

       Параметр list public-key-algorithms перечисляет все поддерживаемые алгоритмы
       открытого ключа.

       Команда no-XXX проверяет, доступна ли команда с указанным именем. Если команда
       с именем XXX не существует, она возвращает 0 (успех) и печатает no-XXX; в противном
       случае возвращает 1 и печатает XXX. В обоих случаях вывод идет в стандартный вывод,
       и в стандартный вывод ничего не выводится. Дополнительные аргументы командной строки
       всегда игнорируются. Поскольку для каждого шифра существует команда с одинаковым именем,
       это позволяет сценариям оболочки легко проверять наличие шифров в программе openssl.
       (no-XXX не может обнаружить pseudo-commands, такой как выход, список или сам no-XXX.)

   Standard Commands
       asn1parse
           Разобрать последовательность ASN.1.

       ca
           Управление Certificate Authority (CA).

       ciphers
           Описание, определение набора шифров.

       cms
           CMS (Синтаксис криптографических сообщений) утилита.

       crl
           Управление списком отзыва сертификатов (CRL).

       crl2pkcs7
           Конвертация CRL в PKCS#7.

       dgst
           Расчет дайджеста сообщения.

       dh
          Diffie-Hellman Управление параметрами. Отменено dhparam(1).

       dhparam
           Генерация и управление параметрами Diffie-Hellman. Заменены
           genpkey(1) и pkeyparam(1).

       dsa
         DSA Управление данными.

       dsaparam
           DSA Генерация параметров и управление ими. Заменены genpkey(1)
           и pkeyparam(1).

       ec
          Обработка ключа EC (эллиптическая кривая).

       ecparam
           манипулирование и генерация параметров EC.

       enc
           Кодирование с помощью шифров.

       engine
           Engine (загружаемый модуль) информация и манипуляции.

       errstr
           Преобразование номера ошибки в строку ошибки.

       gendh
           Генерация параметров Diffie-Hellman. Отменено dhparam(1).

       gendsa
           Генерация закрытого ключа DSA из параметров. Заменено на
           genpkey(1) и pkey(1).

       genpkey
           Генерация закрытого ключа или параметров.

       genrsa
           Генерация RSA Private Key. Заменено на genpkey(1).

       nseq
           Создайте или проверьте последовательность сертификатов Netscape.

       ocsp
           Утилита онлайн-протокола статуса сертификата.

       passwd
           Генерация хешированных паролей.

       pkcs12
           PKCS#12 Управление данными.

       pkcs7
           PKCS#7 Управление данными.

       pkcs8
           Инструмент преобразования закрытых ключей в формате PKCS#8.

       pkey
           Управление открытым и закрытым ключом.

       pkeyparam
           Управление параметрами алгоритма открытого ключа.

       pkeyutl
           Утилита криптографических операций с алгоритмом открытого ключа.

       prime
           Вычислить простые числа.

       rand
           Генерация псевдослучайных байтов.

       rehash
           Создайте символические ссылки на файлы сертификатов и CRL, названные
           значениями хеша.

       req
          PKCS#10 X.509 Запрос на подпись сертификата (CSR) Management.

       rsa
          управление ключами RSA.

       rsautl
           Утилита RSA для подписи, проверки, шифрования и дешифрования. Заменено
           на pkeyutl(1).

       s_client
           Это реализует универсальный клиент SSL/TLS, который может установить
           прозрачное соединение с удаленным сервером, говорящим на SSL/TLS. Он
           предназначен только для целей тестирования и предоставляет только
           элементарные функциональные возможности интерфейса, но внутренне
           использует в основном все функциональные возможности библиотеки
           OpenSSL ssl.

       s_server
           This implements a generic SSL/TLS server which accepts connections
           from remote clients speaking SSL/TLS. It's intended for testing
           purposes only and provides only rudimentary interface functionality
           but internally uses mostly all functionality of the OpenSSL ssl
           library.  It provides both an own command line oriented protocol
           for testing SSL functions and a simple HTTP response facility to
           emulate an SSL/TLS-aware webserver.

       s_time
           SSL Connection Timer.

       sess_id
           SSL Session Data Management.

       smime
           S/MIME mail processing.

       speed
           Algorithm Speed Measurement.

       spkac
           SPKAC printing and generating utility.

       srp Maintain SRP password file.

       storeutl
           Utility to list and display certificates, keys, CRLs, etc.

       ts  Time Stamping Authority tool (client/server).

       verify
           X.509 Certificate Verification.

       version
           OpenSSL Version Information.

       x509
           X.509 Certificate Data Management.

   Message Digest Commands
       blake2b512
           BLAKE2b-512 Digest

       blake2s256
           BLAKE2s-256 Digest

       md2 MD2 Digest

       md4 MD4 Digest

       md5 MD5 Digest

       mdc2
           MDC2 Digest

       rmd160
           RMD-160 Digest

       sha1
           SHA-1 Digest

       sha224
           SHA-2 224 Digest

       sha256
           SHA-2 256 Digest

       sha384
           SHA-2 384 Digest

       sha512
           SHA-2 512 Digest

       sha3-224
           SHA-3 224 Digest

       sha3-256
           SHA-3 256 Digest

       sha3-384
           SHA-3 384 Digest

       sha3-512
           SHA-3 512 Digest

       shake128
           SHA-3 SHAKE128 Digest

       shake256
           SHA-3 SHAKE256 Digest

       sm3 SM3 Digest

   Encoding and Cipher Commands
       The following aliases provide convenient access to the most used
       encodings and ciphers.

       Depending on how OpenSSL was configured and built, not all ciphers
       listed here may be present. See enc(1) for more information and command
       usage.

       aes128, aes-128-cbc, aes-128-cfb, aes-128-ctr, aes-128-ecb, aes-128-ofb
           AES-128 Cipher

       aes192, aes-192-cbc, aes-192-cfb, aes-192-ctr, aes-192-ecb, aes-192-ofb
           AES-192 Cipher

       aes256, aes-256-cbc, aes-256-cfb, aes-256-ctr, aes-256-ecb, aes-256-ofb
           AES-256 Cipher

       aria128, aria-128-cbc, aria-128-cfb, aria-128-ctr, aria-128-ecb,
       aria-128-ofb
           Aria-128 Cipher

       aria192, aria-192-cbc, aria-192-cfb, aria-192-ctr, aria-192-ecb,
       aria-192-ofb
           Aria-192 Cipher

       aria256, aria-256-cbc, aria-256-cfb, aria-256-ctr, aria-256-ecb,
       aria-256-ofb
           Aria-256 Cipher

       base64
           Base64 Encoding

       bf, bf-cbc, bf-cfb, bf-ecb, bf-ofb
           Blowfish Cipher

       camellia128, camellia-128-cbc, camellia-128-cfb, camellia-128-ctr,
       camellia-128-ecb, camellia-128-ofb
           Camellia-128 Cipher

       camellia192, camellia-192-cbc, camellia-192-cfb, camellia-192-ctr,
       camellia-192-ecb, camellia-192-ofb
           Camellia-192 Cipher

       camellia256, camellia-256-cbc, camellia-256-cfb, camellia-256-ctr,
       camellia-256-ecb, camellia-256-ofb
           Camellia-256 Cipher

       cast, cast-cbc
           CAST Cipher

       cast5-cbc, cast5-cfb, cast5-ecb, cast5-ofb
           CAST5 Cipher

       chacha20
           Chacha20 Cipher

       des, des-cbc, des-cfb, des-ecb, des-ede, des-ede-cbc, des-ede-cfb, des-
       ede-ofb, des-ofb
           DES Cipher

       des3, desx, des-ede3, des-ede3-cbc, des-ede3-cfb, des-ede3-ofb
           Triple-DES Cipher

       idea, idea-cbc, idea-cfb, idea-ecb, idea-ofb
           IDEA Cipher

       rc2, rc2-cbc, rc2-cfb, rc2-ecb, rc2-ofb
           RC2 Cipher

       rc4 RC4 Cipher

       rc5, rc5-cbc, rc5-cfb, rc5-ecb, rc5-ofb
           RC5 Cipher

       seed, seed-cbc, seed-cfb, seed-ecb, seed-ofb
           SEED Cipher

       sm4, sm4-cbc, sm4-cfb, sm4-ctr, sm4-ecb, sm4-ofb
           SM4 Cipher

OPTIONS
       Details of which options are available depend on the specific command.
       This section describes some common options with common behavior.

   Common Options
       -help
           Provides a terse summary of all options.

   Pass Phrase Options
       Several commands accept password arguments, typically using -passin and
       -passout for input and output passwords respectively. These allow the
       password to be obtained from a variety of sources. Both of these
       options take a single argument whose format is described below. If no
       password argument is given and a password is required then the user is
       prompted to enter one: this will typically be read from the current
       terminal with echoing turned off.

       Note that character encoding may be relevant, please see
       passphrase-encoding(7).

       pass:password
           The actual password is password. Since the password is visible to
           utilities (like 'ps' under Unix) this form should only be used
           where security is not important.

       env:var
           Obtain the password from the environment variable var. Since the
           environment of other processes is visible on certain platforms
           (e.g. ps under certain Unix OSes) this option should be used with
           caution.

       file:pathname
           The first line of pathname is the password. If the same pathname
           argument is supplied to -passin and -passout arguments then the
           first line will be used for the input password and the next line
           for the output password. pathname need not refer to a regular file:
           it could for example refer to a device or named pipe.

       fd:number
           Read the password from the file descriptor number. This can be used
           to send the data via a pipe for example.

       stdin
           Read the password from standard input.

SEE ALSO
       asn1parse(1), ca(1), ciphers(1), cms(1), config(5), crl(1),
       crl2pkcs7(1), dgst(1), dhparam(1), dsa(1), dsaparam(1), ec(1),
       ecparam(1), enc(1), engine(1), errstr(1), gendsa(1), genpkey(1),
       genrsa(1), nseq(1), ocsp(1), passwd(1), pkcs12(1), pkcs7(1), pkcs8(1),
       pkey(1), pkeyparam(1), pkeyutl(1), prime(1), rand(1), rehash(1),
       req(1), rsa(1), rsautl(1), s_client(1), s_server(1), s_time(1),
       sess_id(1), smime(1), speed(1), spkac(1), srp(1), storeutl(1), ts(1),
       verify(1), version(1), x509(1), crypto(7), ssl(7), x509v3_config(5)

HISTORY
       The list-XXX-algorithms pseudo-commands were added in OpenSSL 1.0.0;
       For notes on the availability of other commands, see their individual
       manual pages.

COPYRIGHT
       Copyright 2000-2018 The OpenSSL Project Authors. All Rights Reserved.

       Licensed under the OpenSSL license (the "License").  You may not use
       this file except in compliance with the License.  You can obtain a copy
       in the file LICENSE in the source distribution or at
       <https://www.openssl.org/source/license.html>.

1.1.1a                            2018-11-20                        OPENSSL(1)
