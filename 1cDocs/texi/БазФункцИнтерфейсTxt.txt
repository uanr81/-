Интерфейс
АдресаЭлектроннойПочтыИзСтроки
АдресВходаВПрограмму
АдресПубликацииИнформационнойБазыВИнтернете
АдресПубликацииИнформационнойБазыВЛокальнойСети
АдресЭлектроннойПочтыСоответствуетТребованиям
БлокировкаРегламентныхЗаданийИнформационнойБазы
БлокировкаСеансовИЗаданийИнформационнойБазы
ВерсияБиблиотеки
ВерсияКонфигурацииБезНомераСборки
ВидОбъектаПоСсылке
ВидОбъектаПоТипу
ВставитьПараметрыВСтроку
ВыгрузитьКолонку
ВыполнитьВБезопасномРежиме
ВыполнитьВФоне
ВыполнитьМетодКонфигурации
ВыполнитьМетодОбъекта
ВычислитьВБезопасномРежиме
ДанныеСовпадают
ДатаСеанса
ДатаУниверсальная
ДиагностикаСоединения
ДобавитьЗадание
ДобавитьКонечныйРазделительПути
ДобавитьОшибкуПользователю
ДобавитьПереименование
ДобавитьСообщениеДляЖурналаРегистрации
ДобавитьЭлементКомпоновки
ДополнитьМассив
ДополнитьСоответствие
ДополнитьСтроку
ДополнитьСтруктуру
ДополнитьТаблицу
ДополнитьТаблицуИзМассива
ДоступноИспользованиеРазделенныхДанных
ЕстьЗащитаОтОпасныхДействий
ЕстьРеквизитИлиСвойствоОбъекта
ЕстьРеквизитОбъекта
ЕстьСсылкиНаОбъект
ЗаблокироватьРаботуСВнешнимиРесурсами
Задание
ЗаданиеВыполнено
ЗакрытьФормуДлительнойОперации
ЗаменитьНедопустимыеСимволыXML
ЗаменитьНедопустимыеСимволыВИмениФайла
ЗаменитьОдниСимволыДругими
ЗаменитьСсылки
ЗаписатьДанныеВБезопасноеХранилище
ЗаписатьСобытияВЖурналРегистрации
ЗаполнитьКоллекциюСвойств
ЗаполнитьКоллекциюЭлементовДереваДанныхФормы
ЗапрашиватьПодтверждениеПриЗавершенииПрограммы
ЗапуститьПрограмму
ЗарегистрироватьCOMСоединитель
ЗначениеВМассиве
ЗначениеВСтрокуXML
ЗначениеИзСтрокиXML
ЗначениеРеквизитаОбъекта
ЗначениеРеквизитаОбъектов
ЗначениеСвойстваЭлементаФормы
ЗначениеСсылочногоТипа
ЗначенияРеквизитовОбъекта
ЗначенияРеквизитовОбъектов
ИдентификаторCOMСоединителя
ИдентификаторИнформационнойБазы
ИдентификаторКластера
ИдентификаторОбъектаМетаданных
ИдентификаторыОбъектовМетаданных
ИзвлечьТекстИзHTML
ИзменитьЗадание
ИзменитьЭлементыОтбора
ИменаРеквизитовПоТипу
ИмяCOMСоединителя
ИмяБазовогоТипаПоОбъектуМетаданных
ИмяЗначенияПеречисления
ИмяТаблицыПоСсылке
ИнициализироватьПараметрыОбработчикаОжидания
ИННСоответствуетТребованиям
ИнтервалВремениСтрокой
ИнформационнаяБазаФайловая
ИсключенияПоискаСсылок
КартинкаКомментария
КаталогФайловойИнформационнойБазы
КлиентПодключенЧерезВебСервер
КлючиСтруктурыВСтроку
КодОсновногоЯзыка
КодПоОКПОСоответствуетТребованиям
КоллекцииИдентичны
КонтрольнаяСуммаСтрокой
КонтрольныйКлючЛицевогоСчетаСоответствуетТребованиям
КППСоответствуетТребованиям
МенеджерОбъектаПоПолномуИмени
МенеджерОбъектаПоСсылке
МестаИспользования
НайтиЗадания
НайтиНедопустимыеСимволыВИмениФайла
НайтиЭлементОтбораПоПредставлению
НайтиЭлементыИГруппыОтбора
НовоеЗащищенноеСоединение
ОбновитьВсеПараметрыРаботыПрограммы
ОбновитьИнтерфейсПрограммы
ОбновитьПараметрыОбработчикаОжидания
ОбщиеПараметрыБазовойФункциональности
ОбщийМодуль
ОбъектXDTOВСтрокуXML
ОбъектXDTOИзСтрокиXML
ОбъектМетаданныхДоступенПоФункциональнымОпциям
ОбъектМетаданныхПоИдентификатору
ОбъектПоПолномуИмени
ОбъектЯвляетсяГруппой
ОГРНСоответствуетТребованиям
ОжидатьЗавершение
ОперативнаяПамятьДоступнаяКлиентскомуПриложению
ОписаниеЗащитыБезПредупреждений
ОписаниеСвойствОбъекта
ОписаниеТипаВсеСсылки
ОписаниеТипаДата
ОписаниеТипаСостоитИзТипа
ОписаниеТипаСтрока
ОписаниеТипаЧисло
ОповеститьОбИзмененииОбъекта
ОповеститьОбИзмененииОбъектов
ОткрытьЖурналРегистрации
ОткрытьНавигационнуюСсылку
ОткрытьПроводник
ОткрытьСписокАктивныхПользователей
ОткрытьФайлВПрограммеПросмотра
ОткрытьФормуДлительнойОперации
ОтменитьВыполнениеЗадания
ОтмеченныеЭлементы
ОчиститьПараметрыСеанса
ПараметрыАдминистрирования
ПараметрыАдминистрированияИнформационнойБазыКластера
ПараметрыАдминистрированияКластера
ПараметрыВопросаПользователю
ПараметрыВыполненияВФоне
ПараметрыЗапускаПрограммы
ПараметрыИзСтроки
ПараметрыОжидания
ПараметрыПодключенияWSПрокси
ПараметрыПодключенияКомпоненты
ПараметрыРаботыКлиента
ПараметрыРаботыКлиентаПриЗапуске
ПараметрыУстановкиКомпоненты
ПередЗавершениемРаботыСистемы
ПередНачаломРаботыСистемы
ПодключитьКомпонентуИзМакета
ПодсистемаСуществует
ПодставитьПараметрыВСтроку
ПодставитьПараметрыВСтрокуИзМассива
ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами
ПоказатьВопросПользователю
ПоказатьПодтверждениеЗакрытияПроизвольнойФормы
ПоказатьПодтверждениеЗакрытияФормы
ПоказатьФормуРедактированияКомментария
ПоказатьФормуРедактированияМногострочногоТекста
ПолучитьВерсииИнтерфейса
ПолучитьВерсииИнтерфейсаЧерезВнешнееСоединение
ПолучитьИдентификаторСтрокиДереваПоЗначениюПоля
ПолучитьИмяСРасширением
ПолучитьНедопустимыеСимволыВИмениФайла
ПолучитьПараметрыПодключенияИзСтрокиСоединенияИнформационнойБазы
ПолучитьПолноеИмяФайла
ПолучитьРасширениеИмениФайла
ПолучитьРегламентноеЗадание
ПолучитьРеквизитФормыПоПути
ПредлагатьСоздаватьРезервныеКопии
ПредлагатьУстановкуРасширенияРаботыСФайлами
ПредложитьПользователюСоздатьРезервнуюКопию
ПредметСтрокой
ПредопределенныйЭлемент
ПредставлениеЛокальнойДатыСоСмещением
ПредупреждениеПриЗавершенииРаботы
ПреобразоватьЧислоВАрабскуюНотацию
ПреобразоватьЧислоВРимскуюНотацию
ПриНачалеВыполненияРегламентногоЗадания
ПриНачалеРаботыСистемы
Проверить
ПроверитьВыводТабличногоДокумента
ПроверитьПараметр
ПроверитьПараметрыАдминистрирования
ПроверитьПроведенностьДокументов
ПроверитьРасширениеРаботыСФайламиПодключено
ПроверитьТипПараметраКоманды
ПровестиДокументы
ПропуститьПредупреждениеПередЗавершениемРаботыСистемы
ПрофильБезопасности
ПрофильБезопасностиБезопасногоРежимаИнформационнойБазы
ПрофильБезопасностиИнформационнойБазы
ПрофильБезопасностиСуществует
ПрочитатьXMLВТаблицу
ПрочитатьДанныеИзБезопасногоХранилища
ПрочитатьПрогресс
ПустойБуферОбмена
ПутьККлиентуСервераАдминистрирования
ПутьКТабличнойЧасти
РаботаСВнешнимиРесурсамиЗаблокирована
РабочаяДатаПользователя
РазблокироватьРаботуСВнешнимиРесурсами
РазделениеВключено
РазделительПакетаЗапросов
РазложитьПолноеИмяФайла
РазложитьСтрокуВМассивПодстрок
РазложитьСтрокуВМассивСлов
РазложитьСтрокуПоТочкамИСлэшам
РазностьМассивов
РазобратьСтрокуСПочтовымиАдресами
РазорватьСоединенияСИнформационнойБазой
РасписаниеВСтруктуру
РасписаниеРегламентногоЗадания
РасписанияОдинаковые
РаспределитьСуммуПропорциональноКоэффициентам
РасширениеБезТочки
РегламентноеЗаданиеИспользуется
РедакцияКонфигурации
РежимОтладки
СвернутьМассив
СвойстваCOMКласса
СвойстваБлокировкиСеансовИРегламентныхЗаданий
СвойстваВиртуальногоКаталога
СвойстваВнешнегоМодуля
СвойстваВнешнейКомпоненты
СвойстваИнтернетРесурса
СвойстваИнформационныхБаз
СвойстваКластеров
СвойстваПриложенияОС
СвойстваПрофиляБезопасности
СвойстваРабочихПроцессов
СвойстваРабочихСерверов
СвойстваСеанса
СвойстваСеансов
СвойстваСоединений
СвойстваСоединения
СвойствоСтруктуры
СеансыИнформационнойБазы
СкопироватьВБуферОбмена
СкопироватьМассив
СкопироватьРекурсивно
СкопироватьСоответствие
СкопироватьСписокЗначений
СкопироватьСтрокиВБуферОбмена
СкопироватьСтруктуру
СнятьБлокировкуСеансовИЗаданийИнформационнойБазы
СнятьУсловноеОформлениеСпискаЗначений
СоединенияСИнформационнойБазой
СоздатьWSПрокси
СоздатьВременныйКаталог
СоздатьГруппуЭлементовОтбора
СоздатьПрофильБезопасности
СократитьДвойныеКавычки
СократитьСтрокуКонтрольнойСуммой
СообщенияПользователю
СообщитьОшибкиПользователю
СообщитьПользователю
СообщитьПрогресс
СохранитьПерсональныеНастройки
СпискиЗначенийИдентичны
СравнитьВерсии
СравнитьВерсииБезНомераСборки
СсылкаСуществует
СтраховойНомерПФРСоответствуетТребованиям
СтрокаВДату
СтрокаВЧисло
СтрокаЛатиницей
СтрокаСЧисломДляЛюбогоЯзыка
СтрокаТаблицыЗначенийВСтруктуру
СтрокиИзБуфераОбмена
СтроковоеПредставлениеТипа
СтруктураURI
СтруктураВРасписание
СтруктураПараметровДляУстановкиВнешнегоСоединения
СтруктураПоМенеджеруЗаписи
СтруктураСвойствДинамическогоСписка
СформироватьСтрокуДляПоискаВЗапросе
СформироватьСтрокуСимволов
ТаблицаЗначенийВМассив
ТекстОшибкиЗаполнения
ТекущаяДатаПользователя
ТипПлатформыКлиента
ТолькоКириллицаВСтроке
ТолькоЛатиницаВСтроке
ТолькоЦифрыВСтроке
ТребуетсяОбновлениеКонфигурацииПодчиненногоУзлаРИБ
УдалитьВременныйКаталог
УдалитьВсеВхожденияЗначенияИзМассива
УдалитьВсеВхожденияТипаИзМассива
УдалитьДанныеИзБезопасногоХранилища
УдалитьЗадание
УдалитьЗаписиКэшаВерсий
УдалитьЗначениеИзМассива
УдалитьНедопустимыеСимволыXML
УдалитьНепроверяемыеРеквизитыИзМассива
УдалитьПовторяющиесяСимволы
УдалитьПоследнийСимволВСтроке
УдалитьПрофильБезопасности
УдалитьСеансыИнформационнойБазы
УдалитьЭлементыГруппыОтбора
УдалитьЭлементыГруппыОтбораДинамическогоСписка
УникальныйИдентификатор
УстановитьБлокировкуРегламентныхЗаданийИнформационнойБазы
УстановитьБлокировкуСеансовИЗаданийИнформационнойБазы
УстановитьВнешнееСоединение
УстановитьВнешнееСоединениеСБазой
УстановитьИспользованиеРегламентногоЗадания
УстановитьКомпонентуИзМакета
УстановитьОтображениеЗаголовковГрупп
УстановитьПараметрДинамическогоСписка
УстановитьПараметрыАдминистрирования
УстановитьПрофильБезопасностиБезопасногоРежимаИнформационнойБазы
УстановитьПрофильБезопасностиИнформационнойБазы
УстановитьРабочуюДатуПользователя
УстановитьРасписаниеРегламентногоЗадания
УстановитьРасширенныйЗаголовокПриложения
УстановитьРеквизитФормыПоПути
УстановитьСвойстваДинамическогоСписка
УстановитьСвойстваПрофиляБезопасности
УстановитьСвойствоЭлементаФормы
УстановитьСостояниеПоляТабличногоДокумента
УстановитьУсловноеОформлениеПоляДата
УстановитьЭлементОтбора
УстановитьЭлементОтбораДинамическогоСписка
УстановкаПараметровСеанса
ФамилияИнициалы
ФиксированныеДанные
ФИОНаписаноВерно
ФорматированнаяСтрока
ХранилищеНастроекДанныхФормЗагрузить
ХранилищеНастроекДанныхФормСохранить
ХранилищеНастроекДанныхФормУдалить
ХранилищеОбщихНастроекЗагрузить
ХранилищеОбщихНастроекСохранить
ХранилищеОбщихНастроекСохранитьМассив
ХранилищеОбщихНастроекУдалить
ХранилищеСистемныхНастроекЗагрузить
ХранилищеСистемныхНастроекСохранить
ХранилищеСистемныхНастроекУдалить
ЦветСтиля
ЧастиИмени
ШрифтСтиля
ЭтоLinuxКлиент
ЭтоLinuxСервер
ЭтоOSXКлиент
ЭтоWindowsКлиент
ЭтоАвтономноеРабочееМесто
ЭтоБазоваяВерсияКонфигурации
ЭтоБизнесПроцесс
ЭтоВебКлиент
ЭтоВебКлиентПодMacOS
ЭтоДокумент
ЭтоЖурналДокументов
ЭтоЗадача
ЭтоКонстанта
ЭтоМобильныйКлиент
ЭтоОбъектСсылочногоТипа
ЭтоПеречисление
ЭтоПланВидовРасчета
ЭтоПланВидовХарактеристик
ЭтоПланОбмена
ЭтоПланСчетов
ЭтоПодчиненныйУзелРИБ
ЭтоПодчиненныйУзелРИБСФильтром
ЭтоПоследовательность
ЭтоРазделительСлов
ЭтоРегистр
ЭтоРегистрБухгалтерии
ЭтоРегистрНакопления
ЭтоРегистрРасчета
ЭтоРегистрСведений
ЭтоРегламентноеЗадание
ЭтоСправочник
ЭтоСсылка
ЭтоСтандартныйРеквизит
ЭтоУникальныйИдентификатор

АдресаЭлектроннойПочтыИзСтроки
 Разбирает строку с адресами электронной почты. При разборе проверяет корректность адресов.
Синтаксис
 Функция АдресаЭлектроннойПочтыИзСтроки(Знач СписокАдресов) Экспорт
Параметры
  СписокАдресов - Строка - адреса электронной почты, разделитель - запятая, либо точка с запятой:
                           Получатель1 <Адрес1>, Получатель 2 <Адрес2>... Получатель N <АдресN>.
Возвращаемое значение
  Массив - содержит массив структур адресов.
           Поля структуры:
             Псевдоним      - Строка - представление адресата.
             Адрес          - Строка - найденный и соответствующий требованиям почтовый адрес;
                                       Если текст, похожий на адрес найден, но не соответствует требованиям
                                       стандартов, то такой текст записывается в поле "Псевдоним".
             ОписаниеОшибки - Строка - текстовое представление ошибки, либо пустая строка, если ошибок нет.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки(СписокАдресов)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

АдресВходаВПрограмму
 Формирует ссылку для входа в программу для указанного пользователя.
Синтаксис
 Функция АдресВходаВПрограмму(Пользователь, Пароль, ВидПубликацииИБ) Экспорт
Параметры
  Пользователь - Строка - логин пользователя для входа в программу;
  Пароль - Строка - пароль пользователя для входа в программу;
  ВидПубликацииИБ - Строка - через какую публикацию пользователь входит в программу:
                           "ВИнтернете" или "ВЛокальнойСети".
Возвращаемое значение
  Строка, Неопределено - адрес входа в программу или Неопределено, если адрес не настроен.
Пример вызова
Результат = ОбщегоНазначения.АдресВходаВПрограмму(Пользователь, Пароль, ВидПубликацииИБ)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

АдресПубликацииИнформационнойБазыВИнтернете
 Возвращает адрес публикации информационной базы для формирования прямых ссылок на объекты ИБ 
 для возможности перехода к ним пользователей, имеющих доступ к базе через публикацию в сети Интернет.
 Например, если такой адрес включить в электронное письмо, то из письма за одно нажатие
 можно перейти к форме объекта в самой программе.
Синтаксис
 Функция АдресПубликацииИнформационнойБазыВИнтернете() Экспорт
Возвращаемое значение
   Строка - адрес информационной базы, как он задан в настройке "Адрес в Интернете" в панели администрирования
            (хранится в константе АдресПубликацииИнформационнойБазыВИнтернете).
            Например, "http://1c.ru/database".
Пример вызова
  АдресПубликацииИнформационнойБазыВЛокальнойСети() + "/" + e1cib/app/Обработка.ВыгрузкаДанныхПроекта";
  возвращает прямую ссылку для открытия обработки ВыгрузкаДанныхПроекта.
Доступность
 Сервер, Толстый клиент, Внешнее соединение

АдресПубликацииИнформационнойБазыВЛокальнойСети
 Возвращает адрес публикации информационной базы для формирования прямых ссылок на объекты ИБ 
 для возможности перехода к ним пользователей, имеющих доступ к базе через публикацию локальной сети.
 Например, если такой адрес включить в электронное письмо, то из письма за одно нажатие
 можно перейти к форме объекта в самой программе.
Синтаксис
 Функция АдресПубликацииИнформационнойБазыВЛокальнойСети() Экспорт
Возвращаемое значение
   Строка - адрес информационной базы, как он задан в настройке "Локальный адрес" в панели администрирования
            (хранится в константе АдресПубликацииИнформационнойБазыВЛокальнойСети).
            Например, "http://localserver/base".
Пример вызова
  АдресПубликацииИнформационнойБазыВЛокальнойСети() + "/" + e1cib/app/Обработка.ВыгрузкаДанныхПроекта";
  возвращает прямую ссылку для открытия обработки ВыгрузкаДанныхПроекта.
Доступность
 Сервер, Толстый клиент, Внешнее соединение

АдресЭлектроннойПочтыСоответствуетТребованиям
 Проверяет email адрес на соответствие требованиям стандартов RFC 5321, RFC 5322,
 а также RFC 5335, RFC 5336 и RFC 3696.
 Кроме того, функция ограничивает использование спецсимволов.
Синтаксис
 Функция АдресЭлектроннойПочтыСоответствуетТребованиям(Знач Адрес, РазрешитьЛокальныеАдреса = Ложь) Экспорт
Параметры
  Адрес - Строка - проверяемый email.
  РазрешитьЛокальныеАдреса - Булево - не выдавать ошибку в случае отсутствия зоны домена в адресе.
Возвращаемое значение
  Булево - Истина, если ошибок нет.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Адрес, РазрешитьЛокальныеАдреса)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

БлокировкаРегламентныхЗаданийИнформационнойБазы
 Возвращает текущее состояние блокировки регламентных заданий для информационной базы.
Синтаксис
 Функция БлокировкаРегламентныхЗаданийИнформационнойБазы(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
Возвращаемое значение
    Булево - Истина, если удалось заблокировать регламентные задания, Ложь - иначе.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.БлокировкаРегламентныхЗаданийИнформационнойБазы(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

БлокировкаСеансовИЗаданийИнформационнойБазы
 Возвращает текущее состояние блокировки сеансов и регламентных заданий для информационной базы.
Синтаксис
 Функция БлокировкаСеансовИЗаданийИнформационнойБазы(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
Возвращаемое значение
    Структура - см. АдминистрированиеКластераКлиентСервер.СвойстваБлокировкиСеансовИРегламентныхЗаданий.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.БлокировкаСеансовИЗаданийИнформационнойБазы(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ВерсияБиблиотеки
 Возвращает номер версии Библиотеки стандартных подсистем (БСП),
 встроенной в конфигурацию.
Синтаксис
 Функция ВерсияБиблиотеки() Экспорт
Возвращаемое значение
  Строка - версия БСП, например "1.0.1.1".
Пример вызова
Результат = СтандартныеПодсистемыСервер.ВерсияБиблиотеки()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ВерсияКонфигурацииБезНомераСборки
 Получает номер версии конфигурации без номера сборки.
Синтаксис
 Функция ВерсияКонфигурацииБезНомераСборки(Знач Версия) Экспорт
Параметры
  Версия - Строка - версия конфигурации в формате РР.ПП.ЗЗ.СС,
                    где СС - номер сборки, который будет удален.
Возвращаемое значение
  Строка - номер версии конфигурации без номера сборки в формате РР.ПП.ЗЗ.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ВерсияКонфигурацииБезНомераСборки(Версия)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ВидОбъектаПоСсылке
 Возвращает имя вида объектов метаданных по ссылке на объект.
 Ограничение: не обрабатываются точки маршрутов бизнес-процессов.
 См. так же ВидОбъектаПоТипу.
Синтаксис
 Функция ВидОбъектаПоСсылке(Ссылка) Экспорт
Параметры
  Ссылка - ЛюбаяСсылка - объект, вид которого требуется получить.
Возвращаемое значение
  Строка - имя вида объектов метаданных. Например: "Справочник", "Документ".
Пример вызова
Результат = ОбщегоНазначения.ВидОбъектаПоСсылке(Ссылка)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ВидОбъектаПоТипу
 Возвращает имя вида объектов метаданных по типу объекта.
 Ограничение: не обрабатываются точки маршрутов бизнес-процессов.
 См. так же ВидОбъектаПоСсылке.
Синтаксис
 Функция ВидОбъектаПоТипу(ТипОбъекта) Экспорт
Параметры
  ТипОбъекта - Тип - Тип прикладного объекта, определенный в конфигурации.
Возвращаемое значение
  Строка - имя вида объектов метаданных. Например: "Справочник", "Документ".
Пример вызова
Результат = ОбщегоНазначения.ВидОбъектаПоТипу(ТипОбъекта)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ВставитьПараметрыВСтроку
 Заменяет в шаблоне строки имена параметров на их значения. Параметры в строке выделяются с двух сторон квадратными
 скобками.
Синтаксис
 Функция ВставитьПараметрыВСтроку(Знач ШаблонСтроки, Знач Параметры) Экспорт
Параметры
  ШаблонСтроки - Строка    - строка, в которую необходимо вставить значения.
  Параметры    - Структура - подставляемые значения параметров, где ключ - имя параметра без спецсимволов,
                             значение - вставляемое значение.
Возвращаемое значение
  Строка - строка со вставленными значениями.
Пример вызова
  Значения = Новый Структура("Фамилия,Имя", "Пупкин", "Вася");
  Результат = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку("Здравствуй, [Имя] [Фамилия].", Значения);
  - возвращает: "Здравствуй, Вася Пупкин".
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ВыгрузитьКолонку
 Создает массив и копирует в него значения, содержащиеся в колонке объекта, для
 которого доступен обход посредством оператора Для каждого … Из.
Синтаксис
 Функция ВыгрузитьКолонку(КоллекцияСтрок, ИмяКолонки, ТолькоУникальныеЗначения = Ложь) Экспорт
Параметры
  КоллекцияСтрок           - ТаблицаЗначений,
                             ДеревоЗначений,
                             СписокЗначений,
                             ТабличнаяЧасть,
                             Соответствие,
                             Структура - коллекция, колонку которой нужно выгрузить в массив.
                                         А так же другие объекты, для которых доступен обход
                                         посредством оператора Для каждого … Из … Цикл.
  ИмяКолонки               - Строка - имя поля коллекции, значения которого нужно выгрузить.
  ТолькоУникальныеЗначения - Булево - необязательный, если истина, то в массив будут включены
                                      только различающиеся значения.
Возвращаемое значение
  Массив - значения колонки.
Пример вызова
Результат = ОбщегоНазначения.ВыгрузитьКолонку(КоллекцияСтрок, ИмяКолонки, ТолькоУникальныеЗначения)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ВыполнитьВБезопасномРежиме
 Выполняет произвольный алгоритм на встроенном языке 1С:Предприятия, предварительно устанавливая
 безопасный режим выполнения кода и безопасный режим разделения данных для всех разделителей,
 присутствующих в составе конфигурации.
Синтаксис
 Процедура ВыполнитьВБезопасномРежиме(Знач Алгоритм, Знач Параметры = Неопределено) Экспорт
Параметры
  Алгоритм  - Строка - алгоритм на встроенном языке 1С:Предприятия.
  Параметры - Произвольный -  контекст, который требуется для выполнения алгоритмы.
    В тексте алгоритма обращение к контексту должно происходить по имени "Параметры".
    Например, выражение "Параметры.Значение1 = Параметры.Значение2" обращается к значениям
    "Значение1" и "Значение2" переданные в Параметры, как свойства.
Пример вызова
  Параметры = Новый Структура;
  Параметры.Вставить("Значение1", 1);
  Параметры.Вставить("Значение2", 10);
  ОбщегоНазначения.ВыполнитьВБезопасномРежиме("Параметры.Значение1 = Параметры.Значение2", Параметры);
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ВыполнитьВФоне
 Запустить выполнение процедуры в фоновом задании, если это возможно.
 При выполнении любого из следующих условий запуск выполняется не в фоне, а сразу в основном потоке:
  * если вызов выполняется в файловой базе во внешнем соединении (в этом режиме фоновые задания не поддерживаются);
  * если приложение запущено в режиме отладки (параметр /C РежимОтладки) - для упрощения отладки конфигурации;
  * если в файловой ИБ имеются активные фоновые задания - для снижения времени ожидания пользователя;
  * если выполняется процедура модуля внешней обработки или внешнего отчета.
 Не следует использовать эту функцию, если необходимо безусловно запускать фоновое задание.
 Может применяться совместно с функцией ДлительныеОперацииКлиент.ОжидатьЗавершение.
Синтаксис
 Функция ВыполнитьВФоне(Знач ИмяПроцедуры, Знач ПараметрыПроцедуры, Знач ПараметрыВыполнения) Экспорт
Параметры
  ИмяПроцедуры           - Строка    - имя экспортной процедуры общего модуля, модуля менеджера объекта 
                                       или модуля обработки, которую необходимо выполнить в фоне.
                                       Например, "МойОбщийМодуль.МояПроцедура", "Отчеты.ЗагруженныеДанные.Сформировать"
                                       или "Обработки.ЗагрузкаДанных.МодульОбъекта.Загрузить". 
                                       У процедуры может быть два или три формальных параметра:
                                        * Параметры       - Структура - произвольные параметры ПараметрыПроцедуры;
                                        * АдресРезультата - Строка    - адрес временного хранилища, в которое нужно
                                          поместить результат работы процедуры. Обязательно;
                                        * АдресДополнительногоРезультата - Строка - если в ПараметрыВыполнения установлен 
                                          параметр ДополнительныйРезультат, то содержит адрес дополнительного временного
                                          хранилища, в которое нужно поместить результат работы процедуры. Опционально.
                                       При необходимости выполнить в фоне функцию, ее следует обернуть в процедуру,
                                       а ее результат возвращать через второй параметр АдресРезультата.
  ПараметрыПроцедуры     - Структура - произвольные параметры вызова процедуры ИмяПроцедуры.
  ПараметрыВыполнения    - Структура - см. функцию ПараметрыВыполненияВФоне.
Возвращаемое значение
  Структура              - параметры выполнения задания: 
   * Статус               - Строка - "Выполняется", если задание еще не завершилось;
                                     "Выполнено", если задание было успешно выполнено;
                                     "Ошибка", если задание завершено с ошибкой;
                                     "Отменено", если задание отменено пользователем или администратором.
   * ИдентификаторЗадания - УникальныйИдентификатор - если Статус = "Выполняется", то содержит 
                                     идентификатор запущенного фонового задания.
   * АдресРезультата       - Строка - адрес временного хранилища, в которое будет
                                     помещен (или уже помещен) результат работы процедуры.
   * АдресДополнительногоРезультата - Строка - если установлен параметр ДополнительныйРезультат, 
                                     содержит адрес дополнительного временного хранилища,
                                     в которое будет помещен (или уже помещен) результат работы процедуры.
   * КраткоеПредставлениеОшибки   - Строка - краткая информация об исключении, если Статус = "Ошибка".
   * ПодробноеПредставлениеОшибки - Строка - подробная информация об исключении, если Статус = "Ошибка".
Пример вызова
  В общем виде процесс запуска и обработки результата длительной операции выглядит следующим образом:
   1) процедура, которая будет исполняться в фоне, располагается в модуле менеджера объекта или в серверном общем модуле:
    Процедура ВыполнитьДействие(Параметры, АдресРезультата) Экспорт
     ...
     ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
    КонецПроцедуры
   2) запуск операции на сервере и подключение обработчика ожидания:
    &НаКлиенте
    Процедура ВыполнитьДействие()
     ДлительнаяОперация = НачатьВыполнениеНаСервере();
     ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
     ...
     ОповещениеОЗавершении = Новый ОписаниеОповещения("ВыполнитьДействиеЗавершение", ЭтотОбъект);
     ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
    КонецПроцедуры
    &НаСервере
    Функция НачатьВыполнениеНаСервере()
     ПараметрыПроцедуры = Новый Структура;
     ...
     ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
     ...
     Возврат ДлительныеОперации.ВыполнитьВФоне("Обработки.МояОбработка.ВыполнитьДействие", 
     ПараметрыПроцедуры, ПараметрыВыполнения);
    КонецФункции
   3) обработка результата выполнения операции:
    &НаКлиенте
    Процедура ВыполнитьДействиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
     Если Результат = Неопределено Тогда
      Возврат;
     КонецЕсли;
     ВывестиРезультат(Результат);
    КонецПроцедуры 
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ВыполнитьМетодКонфигурации
 Выполнить экспортную процедуру по имени с уровнем привилегий конфигурации.
 При включении профилей безопасности для вызова оператора Выполнить() используется
 переход в безопасный режим с профилем безопасности, используемом для информационной базы
 (если выше по стеку не был установлен другой безопасный режим).
Синтаксис
 Процедура ВыполнитьМетодКонфигурации(Знач ИмяМетода, Знач Параметры = Неопределено) Экспорт
Параметры
  ИмяМетода  - Строка - имя экспортной процедуры в формате
                       <имя объекта>.<имя процедуры>, где <имя объекта> - это
                       общий модуль или модуль менеджера объекта.
  Параметры  - Массив - параметры передаются в процедуру <ИмяЭкспортнойПроцедуры>
                        в порядке расположения элементов массива.
Пример вызова
  Параметры = Новый Массив();
  Параметры.Добавить("1");
  ОбщегоНазначения.ВыполнитьМетодКонфигурации("МойОбщийМодуль.МояПроцедура", Параметры);
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ВыполнитьМетодОбъекта
 Выполнить экспортную процедуру объекта встроенного языка по имени.
 При включении профилей безопасности для вызова оператора Выполнить() используется
 переход в безопасный режим с профилем безопасности, используемом для информационной базы
 (если выше по стеку не был установлен другой безопасный режим).
Синтаксис
 Процедура ВыполнитьМетодОбъекта(Знач Объект, Знач ИмяМетода, Знач Параметры = Неопределено) Экспорт
Параметры
  Объект    - Произвольный - объект встроенного языка 1С:Предприятия, содержащий методы (например, ОбработкаОбъект).
  ИмяМетода - Строка       - имя экспортной процедуры модуля объекта обработки.
  Параметры - Массив       - параметры передаются в процедуру <ИмяПроцедуры>
                             в порядке расположения элементов массива.
Пример вызова
ОбщегоНазначения.ВыполнитьМетодОбъекта(Объект, ИмяМетода, Параметры)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ВычислитьВБезопасномРежиме
 Вычисляет переданное выражение, предварительно устанавливая безопасный режим выполнения кода
 и безопасный режим разделения данных для всех разделителей, присутствующих в составе конфигурации.
Синтаксис
 Функция ВычислитьВБезопасномРежиме(Знач Выражение, Знач Параметры = Неопределено) Экспорт
Параметры
  Выражение - Строка - выражение на встроенном языке 1С:Предприятия.
  Параметры - Произвольный - контекст, который требуется для вычисления выражения.
    В тексте выражения обращение к контексту должно происходить по имени "Параметры".
    Например, выражение "Параметры.Значение1 = Параметры.Значение2" обращается к значениям
    "Значение1" и "Значение2" переданные в Параметры, как свойства.
Возвращаемое значение
   Произвольный - результат вычисления выражения.
Пример вызова
  // Пример 1
  Параметры = Новый Структура;
  Параметры.Вставить("Значение1", 1);
  Параметры.Вставить("Значение2", 10);
  Результат = ОбщегоНазначения.ВычислитьВБезопасномРежиме("Параметры.Значение1 = Параметры.Значение2", Параметры);
  // Пример 2
  Результат = ОбщегоНазначения.ВычислитьВБезопасномРежиме("СтандартныеПодсистемыСервер.ВерсияБиблиотеки()");
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ДанныеСовпадают
 Сравнивает данные сложной структуры с учетом вложенности.
Синтаксис
 Функция ДанныеСовпадают(Данные1, Данные2) Экспорт
Параметры
  Данные1 - Структура,    ФиксированнаяСтруктура,
            Соответствие, ФиксированноеСоответствие,
            Массив,       ФиксированныйМассив,
            ХранилищеЗначения, ТаблицаЗначений,
            Строка, Число, Булево - сравниваемые данные.
  Данные2 - Произвольный - те же типы, что и для параметра Данные1.
Возвращаемое значение
  Булево - Истина, если совпадают.
Пример вызова
Результат = ОбщегоНазначения.ДанныеСовпадают(Данные1, Данные2)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ДатаСеанса
 Возвращает текущую дату, приведенную к часовому поясу сеанса.
 Функция возвращает время, близкое к результату функции ТекущаяДатаСеанса() в серверном контексте.
 Погрешность обусловлена временем выполнения серверного вызова.
 Предназначена для использования вместо функции ТекущаяДата().
Синтаксис
 Функция ДатаСеанса() Экспорт
Возвращаемое значение
  Дата - текущая дата сеанса.
Пример вызова
Результат = ОбщегоНазначенияКлиент.ДатаСеанса()
Доступность
 Тонкий клиент, Толстый клиент

ДатаУниверсальная
 Возвращает универсальную дату сеанса, получаемую из текущей даты сеанса.
 Функция возвращает время, близкое к результату функции УниверсальноеВремя() в серверном контексте.
 Погрешность обусловлена временем выполнения серверного вызова.
 Предназначена для использования вместо функции УниверсальноеВремя().
Синтаксис
 Функция ДатаУниверсальная() Экспорт
Возвращаемое значение
  Дата - универсальная дата сеанса.
Пример вызова
Результат = ОбщегоНазначенияКлиент.ДатаУниверсальная()
Доступность
 Тонкий клиент, Толстый клиент

ДиагностикаСоединения
 Запускает диагностику сетевого ресурса.
 Не доступно в веб-клиенте.
 В модели сервиса функциональность ограничена получением описания ошибки.
Синтаксис
 Функция ДиагностикаСоединения(URL) Экспорт
Параметры
  URL - Строка - адрес URL ресурса, диагностику которого надо выполнить.
Возвращаемое значение
  Структура - Результат работы программы.
      ОписаниеОшибки    - Строка - краткое описание ошибки.
      ЖурналДиагностики - Строка - подробный журнал диагностики с техническими подробностями.
Пример вызова
 // Диагностика веб-сервиса адресного классификатора.
 Результат = ОбщегоНазначенияКлиентСервер.ДиагностикаСоединения("https://api.orgaddress.1c.ru/orgaddress/v1?wsdl");
 ОписаниеОшибки    = Результат.ОписаниеОшибки;
 ЖурналДиагностики = Результат.ЖурналДиагностики;
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ДобавитьЗадание
 Добавляет новое задание в очередь или как регламентное.
Синтаксис
 Функция ДобавитьЗадание(Параметры) Экспорт
Параметры
  Параметры - Структура - Параметры добавляемого задания, возможные ключи:
   Использование
   Метаданные - обязательно для указания.
   Параметры
   Ключ
   ИнтервалПовтораПриАварийномЗавершении.
   Расписание
   КоличествоПовторовПриАварийномЗавершении.
Возвращаемое значение
  РегламентноеЗадание, СправочникСсылка.ОчередьЗаданий, СправочникСсылка.ОчередьЗаданийОбластейДанных - Идентификатор
  добавленного задания.
Пример вызова
Результат = РегламентныеЗаданияСервер.ДобавитьЗадание(Параметры)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ДобавитьКонечныйРазделительПути
 Добавляет к переданному пути каталога конечный символ-разделитель, если он отсутствует.
Синтаксис
 Функция ДобавитьКонечныйРазделительПути(Знач ПутьКаталога, Знач Платформа = Неопределено) Экспорт
Параметры
  ПутьКаталога - Строка - путь к каталогу.
  Платформа - ТипПлатформы - параметр устарел, больше не используется.
Возвращаемое значение
  Строка - путь к каталогу с конечным символом-разделителем.
Пример вызова
  Результат = ДобавитьКонечныйРазделительПути("C:\Мой каталог"); // возвращает "C:\Мой каталог\".
  Результат = ДобавитьКонечныйРазделительПути("C:\Мой каталог\"); // возвращает "C:\Мой каталог\".
  Результат = ДобавитьКонечныйРазделительПути("%APPDATA%"); // возвращает "%APPDATA%\".
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ДобавитьОшибкуПользователю
 Добавляет в список ошибок новую ошибку пользователя для дальнейшей отправки с помощью
 процедуры СообщитьОшибкиПользователю().
 Предназначена для накопления списка ошибок с последующей обработкой этого списка перед тем, как вывести
 пользователю. Полученный список ошибок можно, например, отсортировать по важности, очистить от дублей,
 а также вывести пользователю в ином виде, чем выводит метод СообщитьПользователю, например, в табличный документ.
Синтаксис
 Процедура ДобавитьОшибкуПользователю(Ошибки, ПолеОшибки, ТекстДляОднойОшибки, ГруппаОшибок, НомерСтроки = 0, ТекстДляНесколькихОшибок = "", ИндексСтроки = Неопределено) Экспорт
Параметры
  Ошибки          - Неопределено - будет создан новый список,
                  - значение, установленное при первом вызове этой процедуры со значением Неопределено.
  ПолеОшибки      - Строка - значение, которое задается в свойстве Поле объекта СообщениеПользователю.
                    Для автоподстановки номера строки должна содержать "%1".
                    Например, "Объект.ИНН" или "Объект.Пользователи[%1].Пользователь".
  ТекстДляОднойОшибки - Строка - текст ошибки для случая, когда ГруппаОшибок в коллекции только одна,
                    например, НСтр("ru = 'Пользователь не выбран.'").
  ГруппаОшибок    - Произвольный - используется для выбора либо текста для одной ошибки,
                    либо текста для нескольких ошибок, например, имя "Объект.Пользователи".
                    Если значение не заполнено, тогда используется текст для одной ошибки.
  НомерСтроки     - Число - значение от 0 ... , определяющее номер строки, который нужно подставить
                    в строку ПолеОшибки и в ТекстДляНесколькихОшибок (подставляется НомерСтроки + 1).
  ТекстДляНесколькихОшибок - Строка - текст ошибки для случая, когда добавлено несколько ошибок с одинаковым
                    свойством ГруппаОшибок, например, НСтр("ru = 'Пользователь в строке %1 не выбран.'").
  ИндексСтроки    - Неопределено - совпадает со значением параметра НомерСтроки.
                    Число - значение от 0 ... , определяющее номер строки, который нужно подставить
                    в строку ПолеОшибки.
Пример вызова
ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, ПолеОшибки, ТекстДляОднойОшибки, ГруппаОшибок, НомерСтроки, ТекстДляНесколькихОшибок, ИндексСтроки)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ДобавитьПереименование
 Добавляет описание переименования объекта метаданных при переходе на указанную версию конфигурации.
 Добавление выполняется в структуру Итог, которая передается в
 процедуру ОбщегоНазначенияПереопределяемый.ПриДобавленииПереименованийОбъектовМетаданных.
Синтаксис
 Процедура ДобавитьПереименование(Итог, ВерсияИБ, СтароеПолноеИмя, НовоеПолноеИмя, ИдентификаторБиблиотеки = "") Экспорт
Параметры
   Итог                    - Структура - см. ОбщегоНазначенияПереопределяемый.ПриДобавленииПереименованийОбъектовМетаданных.
   ВерсияИБ                - Строка    - версия конечной конфигурации, при переходе на которую нужно
                                         выполнить переименование, например, "2.1.2.14".
   СтароеПолноеИмя         - Строка    - старое полное имя объекта метаданных, которое нужно переименовать,
                                         например, "Подсистема._ДемоПодсистемы".
   НовоеПолноеИмя          - Строка    - новое  полное имя объекта метаданных, на которое нужно переименовать,
                                         например, "Подсистема._ДемоСервисныеПодсистемы".
   ИдентификаторБиблиотеки - Строка    - внутренний идентификатор библиотеки, к которой относится ВерсияИБ.
                                         Для основной конфигурации не требуется.
                                         Например, "СтандартныеПодсистемы" - как указано
                                         в ОбновлениеИнформационнойБазыБСП.ПриДобавленииПодсистемы.
Пример вызова
 ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
  "Подсистема._ДемоПодсистемы",
  "Подсистема._ДемоСервисныеПодсистемы");
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ДобавитьСообщениеДляЖурналаРегистрации
 Записывает сообщение в журнал регистрации. 
 Если параметр ЗаписатьСобытия = Истина, то запись выполняется сразу (обращение к серверу). 
 Если ЗаписатьСобытия = Ложь (по умолчанию), то сообщение помещается в очередь, 
 которая может быть записана позднее, при следующем вызове этой или другой процедуры,
 в которую передается в качестве параметра очередь СообщенияДляЖурналаРегистрации.
Синтаксис
 Процедура ДобавитьСообщениеДляЖурналаРегистрации(Знач ИмяСобытия, Знач ПредставлениеУровня = "Информация", 
	Знач Комментарий = "", Знач ДатаСобытия = "", Знач ЗаписатьСобытия = Ложь) Экспорт
Параметры
   ИмяСобытия          - Строка - имя события для журнала регистрации;
   ПредставлениеУровня - Строка - описание уровня события, по нему будет определен уровень события при записи на
                                  сервере;
                                  Например: "Ошибка", "Предупреждение".
                                  Соответствуют именам элементов перечисления УровеньЖурналаРегистрации.
   Комментарий         - Строка - комментарий для события журнала;
   ДатаСобытия         - Дата   - точная дата возникновения события, описанного в сообщении. Будет добавлена в начало
                                  комментария;
   ЗаписатьСобытия     - Булево - выполнить запись всех ранее накопленных сообщений в журнал регистрации (обращение к
                                  серверу).
Пример вызова
  ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(СобытиеЖурналаРегистрации(), "Предупреждение",
     НСтр("ru = 'Невозможно подключиться к сети Интернет для проверки обновлений.'"));
Доступность
 Тонкий клиент, Толстый клиент

ДобавитьЭлементКомпоновки
 Добавить элемент компоновки в контейнер элементов компоновки.
Синтаксис
 Функция ДобавитьЭлементКомпоновки(ОбластьДобавления,
									Знач ИмяПоля,
									Знач ВидСравнения,
									Знач ПравоеЗначение = Неопределено,
									Знач Представление  = Неопределено,
									Знач Использование  = Неопределено,
									знач РежимОтображения = Неопределено,
									знач ИдентификаторПользовательскойНастройки = Неопределено) Экспорт
Параметры
  ОбластьДобавления - КоллекцияЭлементовОтбораКомпоновкиДанных - контейнер с элементами и группами отбора,
                                                                 например, Список.Отбор или группа в отборе.
  ИмяПоля                 - Строка - имя поля компоновки данных (заполняется всегда).
  ПравоеЗначение          - Произвольный - сравниваемое значение.
  ВидСравнения            - ВидСравненияКомпоновкиДанных - вид сравнения.
  Представление           - Строка - представление элемента компоновки данных.
  Использование           - Булево - использование элемента.
  РежимОтображения        - РежимОтображенияЭлементаНастройкиКомпоновкиДанных - режим отображения.
  ИдентификаторПользовательскойНастройки - Строка - см. ОтборКомпоновкиДанных.ИдентификаторПользовательскойНастройки
                                                    в синтакс-помощнике.
Возвращаемое значение
  ЭлементОтбораКомпоновкиДанных - элемент компоновки.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ОбластьДобавления, ИмяПоля, ВидСравнения, ПравоеЗначение, Представление, Использование, знач РежимОтображения, знач ИдентификаторПользовательскойНастройки)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ДополнитьМассив
 Дополняет массив МассивПриемник значениями из массива МассивИсточник.
Синтаксис
 Процедура ДополнитьМассив(МассивПриемник, МассивИсточник, ТолькоУникальныеЗначения = Ложь) Экспорт
Параметры
  МассивПриемник - Массив - массив, в который необходимо добавить значения.
  МассивИсточник - Массив - массив значений для заполнения.
  ТолькоУникальныеЗначения - Булево - если истина, то в массив будут включены только уникальные значения.
Пример вызова
ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПриемник, МассивИсточник, ТолькоУникальныеЗначения)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ДополнитьСоответствие
 Дополняет соответствие значениями из другого соответствия.
Синтаксис
 Процедура ДополнитьСоответствие(Приемник, Источник, Заменять = Неопределено) Экспорт
Параметры
   Приемник - Соответствие - коллекция, в которую будут добавляться новые значения.
   Источник - Соответствие - коллекция, из которой будут считываться пары Ключ и Значение для заполнения.
   Заменять - Булево, Неопределено - Что делать в местах пересечения ключей источника и приемника:
                                       Истина - Заменять значения приемника (самый быстрый способ),
                                       Ложь   - Не заменять значения приемника (пропускать),
                                       Неопределено - Значение по умолчанию. Бросать исключение.
Пример вызова
ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(Приемник, Источник, Заменять)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ДополнитьСтроку
 Дополняет строку символами слева или справа до заданной длины и возвращает ее.
 При этом удаляются незначащие символы слева и справа (подробнее про незначащие символы 
 см. синтаксис-помощник к методу платформы СокрЛП). 
 По умолчанию функция дополняет строку символами "0" (ноль) слева.
Синтаксис
 Функция ДополнитьСтроку(Знач Значение, Знач ДлинаСтроки, Знач Символ = "0", Знач Режим = "Слева") Экспорт
Параметры
  Значение    - Строка - исходная строка, которую необходимо дополнить символами;
  ДлинаСтроки - Число  - требуемая результирующая длина строки;
  Символ      - Строка - символ, которым необходимо дополнить строку;
  Режим       - Строка - "Слева" или "Справа" - вариант добавления символов к исходной строке.
Возвращаемое значение
  Строка - строка, дополненная символами.
Пример вызова
  1. Результат = СтроковыеФункцииКлиентСервер.ДополнитьСтроку("1234", 10, "0", "Слева");
  Возвращает: "0000001234".
  2. Результат = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(" 1234  ", 10, "#", "Справа");
  Строка = " 1234  "; ДлинаСтроки = 10; Символ = "#"; Режим = "Справа"
  Возвращает: "1234######".
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ДополнитьСтруктуру
 Дополняет структуру значениями из другой структуры.
Синтаксис
 Процедура ДополнитьСтруктуру(Приемник, Источник, Заменять = Неопределено) Экспорт
Параметры
   Приемник - Структура - коллекция, в которую будут добавляться новые значения.
   Источник - Структура - коллекция, из которой будут считываться пары Ключ и Значение для заполнения.
   Заменять - Булево, Неопределено - Что делать в местах пересечения ключей источника и приемника:
                                       Истина - Заменять значения приемника (самый быстрый способ),
                                       Ложь   - Не заменять значения приемника (пропускать),
                                       Неопределено - Значение по умолчанию. Бросать исключение.
Пример вызова
ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Приемник, Источник, Заменять)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ДополнитьТаблицу
 Дополняет таблицу значений-приемник данными из таблицы значений-источник.
Синтаксис
 Процедура ДополнитьТаблицу(ТаблицаИсточник, ТаблицаПриемник) Экспорт
Параметры
  ТаблицаИсточник - ТаблицаЗначений - таблица, из которой будут браться строки для заполнения;
  ТаблицаПриемник - ТаблицаЗначений - таблица, в которую будут добавлены строки из таблицы-источника.
Пример вызова
ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаИсточник, ТаблицаПриемник)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ДополнитьТаблицуИзМассива
 Дополняет таблицу значений Таблица значениями из массива Массив.
Синтаксис
 Процедура ДополнитьТаблицуИзМассива(Таблица, Массив, ИмяПоля) Экспорт
Параметры
  Таблица - ТаблицаЗначений - таблица, которую необходимо заполнить значениями из массива;
  Массив  - Массив - массив значений для заполнения таблицы;
  ИмяПоля - Строка - имя поля таблицы значений, в которое необходимо загрузить значения из массива.
Пример вызова
ОбщегоНазначенияКлиентСервер.ДополнитьТаблицуИзМассива(Таблица, Массив, ИмяПоля)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ДоступноИспользованиеРазделенныхДанных
 Возвращает признак возможности обращения к разделенным данным (которые входят в состав разделителей).
 Признак относится к сеансу, но может меняться во время работы сеанса, если разделение было включено
 в самом сеансе, поэтому проверку следует делать непосредственно перед обращением к разделенным данным.
 Возвращает Истина, если конфигурация не может работать в режиме разделения данных
 (не содержит общих реквизитов, предназначенных для разделения данных).
Синтаксис
 Функция ДоступноИспользованиеРазделенныхДанных() Экспорт
Возвращаемое значение
   Булево - Истина, если разделение не поддерживается, либо разделение выключено,
                    либо разделение включено и разделители    установлены.
          - Ложь,   если разделение включено и разделители не установлены.
Пример вызова
Результат = ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЕстьЗащитаОтОпасныхДействий
 Проверяет наличие механизма платформы, предупреждающего об опасных действиях.
Синтаксис
 Функция ЕстьЗащитаОтОпасныхДействий() Экспорт
Возвращаемое значение
  Булево - если Истина, тогда работает механизм предупреждений безопасности.
Пример вызова
Результат = ОбщегоНазначения.ЕстьЗащитаОтОпасныхДействий()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЕстьРеквизитИлиСвойствоОбъекта
 Проверяет наличие реквизита или свойства у произвольного объекта без обращения к метаданным.
Синтаксис
 Функция ЕстьРеквизитИлиСвойствоОбъекта(Объект, ИмяРеквизита) Экспорт
Параметры
  Объект       - Произвольный - объект, у которого нужно проверить наличие реквизита или свойства;
  ИмяРеквизита - Строка       - имя реквизита или свойства.
Возвращаемое значение
  Булево - Истина, если есть.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект, ИмяРеквизита)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЕстьРеквизитОбъекта
 Позволяет определить, есть ли среди реквизитов объекта реквизит с переданным именем.
Синтаксис
 Функция ЕстьРеквизитОбъекта(ИмяРеквизита, МетаданныеОбъекта) Экспорт
Параметры
  ИмяРеквизита - Строка - имя реквизита;
  МетаданныеОбъекта - ОбъектМетаданных - объект, в котором требуется проверить наличие реквизита.
Возвращаемое значение
  Булево - Истина, если есть.
Пример вызова
Результат = ОбщегоНазначения.ЕстьРеквизитОбъекта(ИмяРеквизита, МетаданныеОбъекта)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЕстьСсылкиНаОбъект
1. Для вызова с сервера
 Проверяет наличие ссылок на объект в базе данных.
Синтаксис
 Функция ЕстьСсылкиНаОбъект(Знач СсылкаИлиМассивСсылок, Знач ИскатьСредиСлужебныхОбъектов = Ложь,  ДругиеИсключения = Неопределено) Экспорт
Параметры
  СсылкаИлиМассивСсылок        - ЛюбаяСсылка, Массив - объект или список объектов.
  ИскатьСредиСлужебныхОбъектов - Булево - если Истина, то не будут учитываться
                                 исключения поиска ссылок, заданные при разработке конфигурации.
                                 Про исключение поиска ссылок подробнее
                                 см. ОбщегоНазначенияПереопределяемый.ПриДобавленииИсключенийПоискаСсылок
  ДругиеИсключения             - Массив - полные имена объектов метаданных, которые также
                                 требуется исключить из поиска ссылок.
Возвращаемое значение
  Булево - Истина, если есть ссылки на объект.
Пример вызова
Результат = ОбщегоНазначения.ЕстьСсылкиНаОбъект(СсылкаИлиМассивСсылок, ИскатьСредиСлужебныхОбъектов, ДругиеИсключения)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

2. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ЕстьСсылкиНаОбъект.
Синтаксис
 Функция ЕстьСсылкиНаОбъект(Знач СсылкаИлиМассивСсылок, Знач ИскатьСредиСлужебныхОбъектов = Ложь) Экспорт
Пример вызова
Результат = ОбщегоНазначенияВызовСервера.ЕстьСсылкиНаОбъект(СсылкаИлиМассивСсылок, ИскатьСредиСлужебныхОбъектов)
Доступность
 Сервер, Вызов сервера

ЗаблокироватьРаботуСВнешнимиРесурсами
 Запрещает работу с внешними ресурсами.
Синтаксис
 Процедура ЗаблокироватьРаботуСВнешнимиРесурсами() Экспорт
Пример вызова
РегламентныеЗаданияСервер.ЗаблокироватьРаботуСВнешнимиРесурсами()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

Задание
 Возвращает РегламентноеЗадание из информационной базы.
Синтаксис
 Функция Задание(Знач Идентификатор) Экспорт
Параметры
  Идентификатор - ОбъектМетаданных - объект метаданных регламентного задания для поиска
                  предопределенного регламентного задания.
                - УникальныйИдентификатор - идентификатор регламентного задания.
                - Строка - строка уникального идентификатора регламентного задания 
                           или имя метаданных предопределенного регламентного задания.
                - РегламентноеЗадание - регламентное задание из которого нужно получить
                  уникальный идентификатор для получения свежей копии регламентного задания.
Возвращаемое значение
  РегламентноеЗадание - прочитано из базы данных.
Пример вызова
Результат = РегламентныеЗаданияСервер.Задание(Идентификатор)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗаданиеВыполнено
 Проверяет состояние фонового задания по переданному идентификатору.
 При аварийном завершении задания вызывает исключение, возникшее в нем,
 либо исключение общего вида "Не удалось выполнить данную операцию. Подробности см. в Журнале регистрации".
Синтаксис
 Функция ЗаданиеВыполнено(Знач ИдентификаторЗадания) Экспорт
Параметры
  ИдентификаторЗадания - УникальныйИдентификатор - идентификатор фонового задания. 
Возвращаемое значение
  Булево - состояние выполнения задания.
Пример вызова
Результат = ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗакрытьФормуДлительнойОперации
 Закрывает форму-индикатор длительной операции.
Синтаксис
 Процедура ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации) Экспорт
Параметры
  ФормаДлительнойОперации - УправляемаяФорма - ссылка на форму-индикатор длительной операции. 
Пример вызова
ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации)
Доступность
 Тонкий клиент, Толстый клиент

ЗаменитьНедопустимыеСимволыXML
 Заменяет недопустимые символы в XML-строке на заданные символы.
Синтаксис
 Функция ЗаменитьНедопустимыеСимволыXML(Знач Текст, СимволЗамены = " ") Экспорт
Параметры
   Текст - Строка - строка, в которой требуется выполнить замену недопустимых символов.
   СимволЗамены - Строка - строка, на которую требуется выполнить замену недопустимого символа в XML-строке.
Возвращаемое значение
    Строка - строка, полученная заменой недопустимых символов в XML-строке.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(Текст, СимволЗамены)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЗаменитьНедопустимыеСимволыВИмениФайла
 Заменяет недопустимые символы в имени файла.
Синтаксис
 Функция ЗаменитьНедопустимыеСимволыВИмениФайла(Знач ИмяФайла, НаЧтоМенять = " ") Экспорт
Параметры
  ИмяФайла     - Строка - исходное имя файла.
  НаЧтоМенять  - Строка - строка, на которую необходимо заменить недопустимые символы.
Возвращаемое значение
   Строка - преобразованное имя файла.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяФайла, НаЧтоМенять)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЗаменитьОдниСимволыДругими
 Выполняет замену символов в строке.
 Предназначена для простых случаев, например, для замены латиницы на похожие кириллические символы.
Синтаксис
 Функция ЗаменитьОдниСимволыДругими(ЗаменяемыеСимволы, Значение, СимволыЗамены) Экспорт
Параметры
  ЗаменяемыеСимволы - Строка - строка символов, каждый из которых требует замены;
  Значение          - Строка - исходная строка, в которой требуется замена символов;
  СимволыЗамены     - Строка - строка символов, на каждый из которых нужно заменить символы параметра
                               ЗаменяемыеСимволы.
Возвращаемое значение
  Строка - строка после замены символов.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими(ЗаменяемыеСимволы, Значение, СимволыЗамены)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЗаменитьСсылки
 Производит замену ссылок во всех данных. После замены неиспользуемые ссылки опционально удаляются.
 Замена ссылок происходит с транзакциями по изменяемому объекту и его связям, не по анализируемой ссылке.
Синтаксис
 Функция ЗаменитьСсылки(Знач ПарыЗамен, Знач Параметры = Неопределено) Экспорт
Параметры
   ПарыЗамен - Соответствие - Пары замен.
       * Ключ     - ЛюбаяСсылка - Что ищем (дубль).
       * Значение - ЛюбаяСсылка - На что заменяем (оригинал).
       Ссылки сами на себя и пустые ссылки для поиска будут проигнорированы.
   Параметры - Структура - Необязательный. Параметры замены.
       * СпособУдаления - Строка - Необязательный. Что делать с дублем после успешной замены.
           ""                - По умолчанию. Не предпринимать никаких действий.
           "Пометка"         - Помечать на удаление.
           "Непосредственно" - Удалять непосредственно.
       * УчитыватьПрикладныеПравила - Булево - Необязательный. Режим проверки параметра ПарыЗамен.
           Истина - По умолчанию. Проверять каждую пару "дубль-оригинал" (вызывается функция
                    ВозможностьЗаменыЭлементов модуля менеджера).
           Ложь   - Отключить прикладные проверки пар.
       * ВключатьБизнесЛогику - Булево - Необязательный. Режим записи мест использования при замене дублей на оригиналы.
           Истина - По умолчанию. Места использования дублей записываются в режиме ОбменДанными.Загрузка = Ложь.
           Ложь   - Запись ведется в режиме ОбменДанными.Загрузка = Истина.
       * ЗаменаПарыВТранзакции - Булево - Необязательный. Определяет размер транзакции.
           Истина - По умолчанию. Транзакция охватывает все места использования одного дубля. Может быть очень ресурсоемко 
                    в случае большого количества мест использований.
           Ложь   - Замена каждого места использования выполняется в отдельной транзакции.
       * ПривилегированнаяЗапись - Булево - Необязательный. Требуется ли устанавливать привилегированный режим перед запись.
           Ложь   - По умолчанию. Записывать с текущими правами.
           Истина - Записывать в привилегированном режиме.
Возвращаемое значение
   ТаблицаЗначений - Неуспешные замены (ошибки).
       * Ссылка - ЛюбаяСсылка - Ссылка, которую заменяли.
       * ОбъектОшибки - Произвольный - Объект - причина ошибки.
       * ПредставлениеОбъектаОшибки - Строка - Строковое представление объекта ошибки.
       * ТипОшибки - Строка - Тип ошибки:
           "ОшибкаБлокировки"  - при обработке ссылки некоторые объекты были заблокированы.
           "ДанныеИзменены"    - в процессе обработки данные были изменены другим пользователем.
           "ОшибкаЗаписи"      - не смогли записать объект, или метод ВозможностьЗаменыЭлементов вернул отказ.
           "ОшибкаУдаления"    - не смогли удалить объект.
           "НеизвестныеДанные" - при обработке были найдены данные, которые не планировались к анализу, замена не реализована.
       * ТекстОшибки - Строка - Подробное описание ошибки.
Пример вызова
Результат = ОбщегоНазначения.ЗаменитьСсылки(ПарыЗамен, Параметры)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗаписатьДанныеВБезопасноеХранилище
 Записывает конфиденциальные данные в безопасное хранилище.
 Вызывающий код должен самостоятельно устанавливать привилегированный режим.
 Безопасное хранилище недоступно для чтения пользователям (кроме администраторов),
 а доступно только коду, который делает обращения только к своей части данных и
 в том контексте, который предполагает чтение или запись конфиденциальных данных.
Синтаксис
 Процедура ЗаписатьДанныеВБезопасноеХранилище(Владелец, Данные, Ключ = "Пароль") Экспорт
Параметры
  Владелец - ПланОбменаСсылка, СправочникСсылка, Строка - ссылка на объект информационной базы,
             представляющий объект-владелец сохраняемого пароля или строка до 128 символов.
             Для объектов других типов в качестве Владельца рекомендуется использовать ссылку на
             элемент метаданных этого типа в справочнике ИдентификаторыОбъектовМетаданных
             или ключ в виде строки с учетом имен подсистем.
             Например, для БСП:
               Владелец = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("РегистрСведений.АдресныеОбъекты");
             если нужно 1 хранилище на подсистему БСП:
               Владелец = "СтандартныеПодсистемы.УправлениеДоступом";
             если нужно более 1 хранилища на подсистему БСП:
               Владелец = "СтандартныеПодсистемы.УправлениеДоступом.<Уточнение>";
  Данные  - Произвольный - Данные помещаемые в безопасное хранилище. Неопределенно - удаляет все данные.
             Для удаления данных по ключу следует использовать процедуру УдалитьДанныеИзБезопасногоХранилища.
  Ключ    - Строка       - Ключ сохраняемых настроек, по умолчанию "Пароль".
Пример вызова
  Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
      Если ТекущийПользовательМожетИзменятьПароль Тогда
          УстановитьПривилегированныйРежим(Истина);
          ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, Логин, "Логин");
          ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, Пароль);
          УстановитьПривилегированныйРежим(Ложь);
      КонецЕсли;
  КонецПроцедуры
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗаписатьСобытияВЖурналРегистрации
1. Для вызова с клиента и сервера
 Процедура пакетной записи сообщений в журнал регистрации.
 После записи переменная СобытияДляЖурналаРегистрации очищается.
Синтаксис
 Процедура ЗаписатьСобытияВЖурналРегистрации(СобытияДляЖурналаРегистрации) Экспорт
Параметры
  СобытияДляЖурналаРегистрации - СписокЗначений - где Значение - Структура со свойствами:
              * ИмяСобытия  - Строка - Имя записываемого события.
              * ПредставлениеУровня  - Строка - Представление значений коллекции УровеньЖурналаРегистрации.
                                       Доступные значения: "Информация", "Ошибка", "Предупреждение", "Примечание".
              * Комментарий - Строка - Комментарий события.
              * ДатаСобытия - Дата   - Дата события, подставляется в комментарий при записи.
Пример вызова
ЖурналРегистрацииВызовСервера.ЗаписатьСобытияВЖурналРегистрации(СобытияДляЖурналаРегистрации)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Процедура пакетной записи сообщений в журнал регистрации.
 После записи переменная СобытияДляЖурналаРегистрации очищается.
Синтаксис
 Процедура ЗаписатьСобытияВЖурналРегистрации(СобытияДляЖурналаРегистрации) Экспорт
Параметры
  СобытияДляЖурналаРегистрации - СписокЗначений - где Значение - Структура со свойствами:
              * ИмяСобытия  - Строка - Имя записываемого события.
              * ПредставлениеУровня  - Строка - Представление значений коллекции УровеньЖурналаРегистрации.
                                       Доступные значения: "Информация", "Ошибка", "Предупреждение", "Примечание".
              * Комментарий - Строка - Комментарий события.
              * ДатаСобытия - Дата   - Дата события, подставляется в комментарий при записи.
Пример вызова
ЖурналРегистрации.ЗаписатьСобытияВЖурналРегистрации(СобытияДляЖурналаРегистрации)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗаполнитьКоллекциюСвойств
 Заполняет коллекцию-приемник значениями из коллекции-источник.
 В качестве коллекций источника и приемника могут выступать типы:
 ТаблицаЗначений; ДеревоЗначений; СписокЗначений и пр.
Синтаксис
 Процедура ЗаполнитьКоллекциюСвойств(КоллекцияИсточник, КоллекцияПриемник) Экспорт
Параметры
  КоллекцияИсточник - ЛюбаяКоллекция - коллекция значений, которая является источником для заполнения данных;
  КоллекцияПриемник - ЛюбаяКоллекция - коллекция значений, которая является приемником для заполнения данных.
Пример вызова
ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(КоллекцияИсточник, КоллекцияПриемник)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЗаполнитьКоллекциюЭлементовДереваДанныхФормы
 Процедура предназначена для заполнения реквизита формы типа ДанныеФормыДерево.
Синтаксис
 Процедура ЗаполнитьКоллекциюЭлементовДереваДанныхФормы(КоллекцияЭлементовДерева, ДеревоЗначений) Экспорт
Параметры
  КоллекцияЭлементовДерева - ДанныеФормыДерево - реквизит, который нужно заполнить.
  ДеревоЗначений           - ДеревоЗначений    - данные для заполнения.
Пример вызова
ОбщегоНазначения.ЗаполнитьКоллекциюЭлементовДереваДанныхФормы(КоллекцияЭлементовДерева, ДеревоЗначений)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗапрашиватьПодтверждениеПриЗавершенииПрограммы
 Получает настройку необходимости выводить подтверждение при завершении работы программы
 для текущего пользователя. Предназначена для использования в форме персональных настроек
 пользователя. Пример использования см. в общей форме _ДемоМоиНастройки.
Синтаксис
 Функция ЗапрашиватьПодтверждениеПриЗавершенииПрограммы() Экспорт
Возвращаемое значение
   Булево - Если Истина, то пользователю при закрытии программы будет показано
            окно с подтверждением завершения сеанса.
Пример вызова
Результат = СтандартныеПодсистемыСервер.ЗапрашиватьПодтверждениеПриЗавершенииПрограммы()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗапуститьПрограмму
1. Для вызова с клиента
 (RunApplication) Запускает внешнюю программу в соответствии с параметрами запуска.
Синтаксис
 Процедура ЗапуститьПрограмму(Знач КомандаЗапуска, ПараметрыЗапускаПрограммы = Неопределено) Экспорт
Параметры
  КомандаЗапуска - Строка, Массив - Командная строка для запуска программы.
      Если Массив, то: первый элемент массива - путь к исполняемому приложению, остальные - передаваемые параметры,
      массив соответствует тому, который получит вызываемая программа в argv.
  ПараметрыЗапускаПрограммы - Структура, Неопределено - см. функцию ПараметрыЗапускаПрограммы.
Пример вызова
ОбщегоНазначенияКлиент.ЗапуститьПрограмму(КомандаЗапуска, ПараметрыЗапускаПрограммы)
Доступность
 Тонкий клиент, Толстый клиент

2. Для вызова с клиента и сервера
 Запускает внешнюю программу в соответствии с параметрами запуска.
 Не доступно в веб-клиенте. 
Синтаксис
 Функция ЗапуститьПрограмму(Знач КомандаЗапуска, ПараметрыЗапускаПрограммы = Неопределено) Экспорт 
Параметры
  КомандаЗапуска - Строка, Массив - Командная строка для запуска программы.
      Если Массив, то: первый элемент массива - путь к исполняемому приложению, остальные - передаваемые параметры,
      массив соответствует тому, который получит вызываемая программа в argv.
  ПараметрыЗапускаПрограммы - Структура - см. функцию ПараметрыЗапускаПрограммы.
Возвращаемое значение
  Структура - Результат работы программы.
      КодВозврата - Число  - код возврата программы.
      ПотокВывода - Строка - результат работы программы, направленный в поток stdout.
      ПотокОшибок - Строка - ошибки исполнения программы, направленные в поток stderr.
Пример вызова
 ОбщегоНазначенияКлиентСервер.ЗапуститьПрограмму("calc");
 ПараметрыЗапускаПрограммы = ОбщегоНазначенияКлиентСервер.ПараметрыЗапускаПрограммы();
 ПараметрыЗапускаПрограммы.ВыполнитьСНаивысшимиПравами = Истина;
 ОбщегоНазначенияКлиентСервер.ЗапуститьПрограмму("C:\Program Files\1cv8\common\1cestart.exe", 
  ПараметрыЗапускаПрограммы);
 ПараметрыЗапускаПрограммы = ОбщегоНазначенияКлиентСервер.ПараметрыЗапускаПрограммы();
 ПараметрыЗапускаПрограммы.ДождатьсяЗавершения = Истина;
 Результат = ОбщегоНазначенияКлиентСервер.ЗапуститьПрограмму("ping 127.0.0.1 -n 5", ПараметрыЗапускаПрограммы);
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЗарегистрироватьCOMСоединитель
 Выполняет регистрацию компоненты "comcntr.dll" для текущей версии платформы.
 В случае успешной регистрации, предлагает пользователю перезапустить клиентский сеанс 
 для того чтобы регистрация вступила в силу.
 Вызывается перед клиентским кодом, который использует менеджер COM-соединений (V83.COMConnector)
 и инициируется интерактивными действиями пользователя.
Синтаксис
 Процедура ЗарегистрироватьCOMСоединитель(Знач ВыполнитьПерезагрузкуСеанса = Истина) Экспорт
Параметры
  ВыполнитьПерезагрузкуСеанса - Булево - если Истина, то после регистрации компоненты будет вызван диалог перезапуска сеанса.
Пример вызова
  ЗарегистрироватьCOMСоединитель();
    // далее идет код, использующий менеджер COM-соединений (V83.COMConnector).
    // ...
Доступность
 Тонкий клиент, Толстый клиент

ЗначениеВМассиве
 Создает массив и помещает в него переданное значение.
Синтаксис
 Функция ЗначениеВМассиве(Значение) Экспорт
Параметры
  Значение - Произвольный - любое значение.
Возвращаемое значение
  Массив - массив из одного элемента.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Значение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЗначениеВСтрокуXML
 Преобразует (сериализует) любое значение в XML-строку.
 Преобразованы в могут быть только те объекты, для которых в синтакс-помощнике указано, что они сериализуются.
 См. также ЗначениеИзСтрокиXML.
Синтаксис
 Функция ЗначениеВСтрокуXML(Значение) Экспорт
Параметры
  Значение - Произвольный - значение, которое необходимо сериализовать в XML-строку.
Возвращаемое значение
  Строка - XML-строка.
Пример вызова
Результат = ОбщегоНазначения.ЗначениеВСтрокуXML(Значение)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗначениеИзСтрокиXML
 Выполняет преобразование (десериализацию) XML-строки в значение.
 См. также ЗначениеВСтрокуXML.
Синтаксис
 Функция ЗначениеИзСтрокиXML(СтрокаXML) Экспорт
Параметры
  СтрокаXML - Строка - XML-строка, с сериализованным объектом..
Возвращаемое значение
  Произвольный - значение, полученное из переданной XML-строки.
Пример вызова
Результат = ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаXML)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗначениеРеквизитаОбъекта
 Значение реквизита, прочитанного из информационной базы по ссылке на объект.
 Если необходимо зачитать реквизит независимо от прав текущего пользователя,
 то следует использовать предварительный переход в привилегированный режим.
Синтаксис
 Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита, ВыбратьРазрешенные = Ложь) Экспорт
Параметры
  Ссылка    - ЛюбаяСсылка - объект, значения реквизитов которого необходимо получить.
            - Строка      - полное имя предопределенного элемента, значения реквизитов которого необходимо получить.
  ИмяРеквизита       - Строка - имя получаемого реквизита.
  ВыбратьРазрешенные - Булево - если Истина, то запрос к объекту выполняется с учетом прав пользователя, и в случае,
                                    - если есть ограничение на уровне записей, то возвращается Неопределено;
                                    - если нет прав для работы с таблицей, то возникнет исключение.
                              - если Ложь, то возникнет исключение при отсутствии прав на таблицу
                                или любой из реквизитов.
Возвращаемое значение
  Произвольный - зависит от типа значения прочитанного реквизита.
               - если в параметр Ссылка передана пустая ссылка, то возвращается Неопределено.
               - если в параметр Ссылка передана ссылка несуществующего объекта (битая ссылка), 
                 то возвращается Неопределено.
Пример вызова
Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита, ВыбратьРазрешенные)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗначениеРеквизитаОбъектов
 Значения реквизита, прочитанного из информационной базы для нескольких объектов.
  Если необходимо зачитать реквизит независимо от прав текущего пользователя,
  то следует использовать предварительный переход в привилегированный режим.
Синтаксис
 Функция ЗначениеРеквизитаОбъектов(МассивСсылок, ИмяРеквизита, ВыбратьРазрешенные = Ложь) Экспорт
Параметры
  МассивСсылок       - Массив - массив ссылок на объекты одного типа.
                                Значения массива должны быть ссылками на объекты одного типа.
  ИмяРеквизита       - Строка - например, "Код".
  ВыбратьРазрешенные - Булево - если Истина, то запрос к объектам выполняется с учетом прав пользователя, и в случае,
                                    - если какой-либо объект будет исключен из выборки по правам, то этот объект
                                      будет исключен и из результата;
                              - если Ложь, то возникнет исключение при отсутствии прав на таблицу
                                или любой из реквизитов.
Возвращаемое значение
  Соответствие - Ключ - ссылка на объект, Значение - значение прочитанного реквизита.
      * Ключ     - ссылка на объект, 
      * Значение - значение прочитанного реквизита.
Пример вызова
Результат = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, ИмяРеквизита, ВыбратьРазрешенные)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗначениеСвойстваЭлементаФормы
 Возвращает значение свойства ИмяСвойства элемента формы с именем ИмяЭлемента.
 Применяется в тех случаях, когда элемент формы может не быть на форме из-за отсутствия прав у пользователя
 на объект, реквизит объекта или команду.
Синтаксис
 Функция ЗначениеСвойстваЭлементаФормы(ЭлементыФормы, ИмяЭлемента, ИмяСвойства) Экспорт
Параметры
  ЭлементыФормы - ВсеЭлементФормы, ЭлементыФормы - коллекция элементов управляемой формы.
  ИмяЭлемента   - Строка       - имя элемента формы.
  ИмяСвойства   - Строка       - имя свойства элемента формы.
Возвращаемое значение
   Произвольный - значение свойства ИмяСвойства элемента формы ИмяЭлемента.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ЗначениеСвойстваЭлементаФормы(ЭлементыФормы, ИмяЭлемента, ИмяСвойства)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЗначениеСсылочногоТипа
 Проверяет, что переданное значение имеет ссылочный тип данных.
Синтаксис
 Функция ЗначениеСсылочногоТипа(Значение) Экспорт
Параметры
  Значение - Произвольный - проверяемое значение.
Возвращаемое значение
  Булево - Истина, если тип значения ссылочный.
Пример вызова
Результат = ОбщегоНазначения.ЗначениеСсылочногоТипа(Значение)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗначенияРеквизитовОбъекта
 Структура, содержащая значения реквизитов, прочитанные из информационной базы по ссылке на объект.
 Если необходимо зачитать реквизит независимо от прав текущего пользователя,
 то следует использовать предварительный переход в привилегированный режим.
Синтаксис
 Функция ЗначенияРеквизитовОбъекта(Ссылка, Знач Реквизиты, ВыбратьРазрешенные = Ложь) Экспорт
Параметры
  Ссылка    - ЛюбаяСсылка - объект, значения реквизитов которого необходимо получить.
            - Строка      - полное имя предопределенного элемента, значения реквизитов которого необходимо получить.
  Реквизиты - Строка - имена реквизитов, перечисленные через запятую, в формате
                       требований к свойствам структуры.
                       Например, "Код, Наименование, Родитель".
            - Структура, ФиксированнаяСтруктура - в качестве ключа передается
                       псевдоним поля для возвращаемой структуры с результатом, а в качестве
                       значения (опционально) фактическое имя поля в таблице.
                       Если ключ задан, а значение не определено, то имя поля берется из ключа.
            - Массив, ФиксированныйМассив - имена реквизитов в формате требований
                       к свойствам структуры.
  ВыбратьРазрешенные - Булево - если Истина, то запрос к объекту выполняется с учетом прав пользователя, и в случае,
                                    - если есть ограничение на уровне записей, то все реквизиты вернутся 
                                      со значением Неопределено;
                                    - если нет прав для работы с таблицей, то возникнет исключение.
                              - если Ложь, то возникнет исключение при отсутствии прав на таблицу 
                                или любой из реквизитов.
Возвращаемое значение
  Структура - содержит имена (ключи) и значения затребованных реквизитов.
            - если в параметр Реквизиты передана пустая строка, то возвращается пустая структура.
            - если в параметр Ссылка передана пустая ссылка, то возвращается структура, 
              соответствующая именам реквизитов со значениями Неопределено.
            - если в параметр Ссылка передана ссылка несуществующего объекта (битая ссылка), 
              то все реквизиты вернутся со значением Неопределено.
Пример вызова
Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты, ВыбратьРазрешенные)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЗначенияРеквизитовОбъектов
 Значения реквизитов, прочитанные из информационной базы для нескольких объектов.
  Если необходимо зачитать реквизит независимо от прав текущего пользователя,
  то следует использовать предварительный переход в привилегированный режим.
Синтаксис
 Функция ЗначенияРеквизитовОбъектов(Ссылки, Знач Реквизиты, ВыбратьРазрешенные = Ложь) Экспорт
Параметры
  Ссылки - Массив - массив ссылок на объекты одного типа.
                          Значения массива должны быть ссылками на объекты одного типа.
                          если массив пуст, то результатом будет пустое соответствие.
  Реквизиты - Строка - имена реквизитов перечисленные через запятую, в формате требований к свойствам
                             структуры. Например, "Код, Наименование, Родитель".
  ВыбратьРазрешенные - Булево - если Истина, то запрос к объектам выполняется с учетом прав пользователя, и в случае,
                                    - если какой-либо объект будет исключен из выборки по правам, то этот объект
                                      будет исключен и из результата;
                              - если Ложь, то возникнет исключение при отсутствии прав на таблицу
                                или любой из реквизитов.
Возвращаемое значение
  Соответствие - список объектов и значений их реквизитов:
   * Ключ - ЛюбаяСсылка - ссылка на объект;
   * Значение - Структура - значения реквизитов:
    ** Ключ - Строка - имя реквизита;
    ** Значение - Произвольный - значение реквизита.
Пример вызова
Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(Ссылки, Реквизиты, ВыбратьРазрешенные)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ИдентификаторCOMСоединителя
 Возвращает CLSID COM-класса для работы с 1С:Предприятием 8 через COM-соединение.
Синтаксис
 Функция ИдентификаторCOMСоединителя(Знач ИмяCOMСоединителя) Экспорт
Параметры
  ИмяCOMСоединителя - Строка - имя COM-класса для работы с 1С:Предприятием 8 через COM-соединение.
Возвращаемое значение
  Строка - строковое представление CLSID.
Пример вызова
Результат = ОбщегоНазначения.ИдентификаторCOMСоединителя(ИмяCOMСоединителя)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ИдентификаторИнформационнойБазы
1. Для вызова с сервера
 Получает уникальный идентификатор информационной базы,
 с помощью которого можно различать различные экземпляры информационных баз,
 например, при сборе статистики или в механизмах внешнего управления базами.
 Если идентификатор не заполнен, то его значение автоматически устанавливается и возвращается.
 Идентификатор хранится в константе ИдентификаторИнформационнойБазы.
 Константа ИдентификаторИнформационнойБазы не должна входить в составы планов обмена, чтобы иметь
 различные значения в каждой информационной базе (узле РИБ).
Синтаксис
 Функция ИдентификаторИнформационнойБазы() Экспорт
Возвращаемое значение
  Строка - идентификатор информационной базы.
Пример вызова
Результат = СтандартныеПодсистемыСервер.ИдентификаторИнформационнойБазы()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

2. Для вызова с клиента и сервера
 Возвращает внутренний идентификатор информационной базы.
Синтаксис
 Функция ИдентификаторИнформационнойБазы(Знач ИдентификаторКластера, Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИнформационнойБазы) Экспорт
Параметры
  ИдентификаторКластера - Строка - внутренний идентификатор кластера серверов,
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИнформационнойБазы - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
Возвращаемое значение
   Строка - внутренний идентификатор информационной базы.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.ИдентификаторИнформационнойБазы(ИдентификаторКластера, ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИнформационнойБазы)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ИдентификаторКластера
 Возвращает внутренний идентификатор кластера серверов.
Синтаксис
 Функция ИдентификаторКластера(Знач ПараметрыАдминистрированияКластера) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера.
Возвращаемое значение
   Строка - внутренний идентификатор кластера серверов.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.ИдентификаторКластера(ПараметрыАдминистрированияКластера)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ИдентификаторОбъектаМетаданных
 Возвращает ссылку, соответствующую объекту метаданных, для использования в базе данных.
 См. также ОбщегоНазначения.ИдентификаторыОбъектаМетаданных.
  Поддерживаются следующие объекты метаданных.
 - Подсистемы (требуется программировать переименование).
 - Роли       (требуется программировать переименование).
 - ПланыОбмена.
 - Константы.
 - Справочники.
 - Документы.
 - ЖурналыДокументов.
 - Отчеты.
 - Обработки.
 - ПланыВидовХарактеристик.
 - ПланыСчетов.
 - ПланыВидовРасчета.
 - РегистрыСведений.
 - РегистрыНакопления.
 - РегистрыБухгалтерии.
 - РегистрыРасчета.
 - БизнесПроцессы.
 - Задачи.
Синтаксис
 Функция ИдентификаторОбъектаМетаданных(ОписаниеОбъектаМетаданных) Экспорт
Параметры
  ОписаниеОбъектаМетаданных - ОбъектМетаданных - объект метаданных конфигурации;
                            - Тип - тип, который можно успешно использовать в функции Метаданные.НайтиПоТипу();
                            - Строка - полное имя объекта метаданных, которое можно успешно использовать
                              в функции Метаданные.НайтиПоПолномуИмени().
Возвращаемое значение
  СправочникСсылка.ИдентификаторыОбъектовМетаданных, СправочникСсылка.ИдентификаторыОбъектовРасширений - ссылка.
Пример вызова
  Идентификатор = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(Ссылка));
  Идентификатор = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ОбъектМетаданных);
  Идентификатор = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.Организации");
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ИдентификаторыОбъектовМетаданных
 Возвращает ссылки, соответствующие объектам метаданных, для использования в базе данных.
 См. также ОбщегоНазначения.ИдентификаторОбъектаМетаданных.
  Поддерживаются следующие объекты метаданных.
 - Подсистемы (требуется программировать переименование).
 - Роли       (требуется программировать переименование).
 - ПланыОбмена.
 - Константы.
 - Справочники.
 - Документы.
 - ЖурналыДокументов.
 - Отчеты.
 - Обработки.
 - ПланыВидовХарактеристик.
 - ПланыСчетов.
 - ПланыВидовРасчета.
 - РегистрыСведений.
 - РегистрыНакопления.
 - РегистрыБухгалтерии.
 - РегистрыРасчета.
 - БизнесПроцессы.
 - Задачи.
Синтаксис
 Функция ИдентификаторыОбъектовМетаданных(ПолныеИменаОбъектовМетаданных) Экспорт
Параметры
  ПолныеИменаОбъектовМетаданных - Массив - со значениями:
    * Строка - полное имя объекта метаданных, которое можно успешно использовать
               в функции Метаданные.НайтиПоПолномуИмени().
Возвращаемое значение
  Соответствие - со свойствами:
    * Ключ     - Строка - полное имя указанного объекта метаданных.
    * Значение - СправочникСсылка.ИдентификаторыОбъектовМетаданных,
                 СправочникСсылка.ИдентификаторыОбъектовРасширений - найденный идентификатор.
Пример вызова
  ПолныеИмена = Новый Массив;
  ПолныеИмена.Добавить(Метаданные.Справочники.Валюты.ПолноеИмя());
  ПолныеИмена.Добавить(Метаданные.РегистрыСведений.КурсыВалют.ПолноеИмя());
  Идентификаторы = ОбщегоНазначения.ИдентификаторыОбъектовМетаданных(ПолныеИмена);
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ИзвлечьТекстИзHTML
 Очищает текст в формате HTML от тегов и возвращает неформатированный текст. 
Синтаксис
 Функция ИзвлечьТекстИзHTML(Знач ИсходныйТекст) Экспорт
Параметры
  ИсходныйТекст - Строка - текст в формате HTML.
Возвращаемое значение
  Строка - текст, очищенный от тегов, скриптов и заголовков.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.ИзвлечьТекстИзHTML(ИсходныйТекст)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ИзменитьЗадание
 Изменяет задание с указанным идентификатором.
 В случае вызова в транзакции на задание устанавливается объектная блокировка.
Синтаксис
 Процедура ИзменитьЗадание(Знач Идентификатор, Знач Параметры) Экспорт
Параметры
  Идентификатор - СправочникСсылка.ОчередьЗаданий, СправочникСсылка.ОчередьЗаданийОбластейДанных - Идентификатор задания
  Параметры     - Структура - Параметры, которые следует установить заданию, 
   возможные ключи:
   Использование
   Параметры
   Ключ
   ИнтервалПовтораПриАварийномЗавершении.
   Расписание
   КоличествоПовторовПриАварийномЗавершении.
   В случае если задание создано на основе шаблона или предопределенное, могут быть указаны
   только следующие ключи: Использование.
Пример вызова
РегламентныеЗаданияСервер.ИзменитьЗадание(Идентификатор, Параметры)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ИзменитьЭлементыОтбора
 Изменить элемент отбора с заданным именем поля или представлением.
Синтаксис
 Функция ИзменитьЭлементыОтбора(ОбластьПоиска,
								Знач ИмяПоля = Неопределено,
								Знач Представление = Неопределено,
								Знач ПравоеЗначение = Неопределено,
								Знач ВидСравнения = Неопределено,
								Знач Использование = Неопределено,
								Знач РежимОтображения = Неопределено,
								Знач ИдентификаторПользовательскойНастройки = Неопределено) Экспорт
Параметры
  ОбластьПоиска - КоллекцияЭлементовОтбораКомпоновкиДанных - контейнер с элементами и группами отбора,
                                                             например, Список.Отбор или группа в отборе.
  ИмяПоля                 - Строка - имя поля компоновки данных (заполняется всегда).
  Представление           - Строка - представление элемента компоновки данных.
  ПравоеЗначение          - Произвольный - сравниваемое значение.
  ВидСравнения            - ВидСравненияКомпоновкиДанных - вид сравнения.
  Использование           - Булево - использование элемента.
  РежимОтображения        - РежимОтображенияЭлементаНастройкиКомпоновкиДанных - режим отображения.
  ИдентификаторПользовательскойНастройки - Строка - см. ОтборКомпоновкиДанных.ИдентификаторПользовательскойНастройки
                                                    в синтакс-помощнике.
Возвращаемое значение
  Число - количество измененных элементов.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ИзменитьЭлементыОтбора(ОбластьПоиска, ИмяПоля, Представление, ПравоеЗначение, ВидСравнения, Использование, РежимОтображения, ИдентификаторПользовательскойНастройки)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ИменаРеквизитовПоТипу
 Возвращает имена реквизитов объекта заданного типа.
Синтаксис
 Функция ИменаРеквизитовПоТипу(Ссылка, Тип) Экспорт
Параметры
  Ссылка - ЛюбаяСсылка - ссылка на элемент базы данных, для которого требуется получить результат функции;
  Тип    - Тип - тип значения реквизита.
Возвращаемое значение
  Строка - строка реквизитов объекта метаданных конфигурации, разделенные символом ",".
Пример вызова
  РеквизитыОрганизации = ОбщегоНазначения.ИменаРеквизитовПоТипу(Документ.Ссылка, Тип("СправочникСсылка.Организации"));
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ИмяCOMСоединителя
 Возвращает имя COM-класса для работы с 1С:Предприятием 8 через COM-соединение.
Синтаксис
 Функция ИмяCOMСоединителя() Экспорт
Возвращаемое значение
  Строка - имя COM-класса для работы с 1С:Предприятием 8 через COM-соединение.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ИмяCOMСоединителя()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ИмяБазовогоТипаПоОбъектуМетаданных
 Возвращает имя базового типа по переданному значению объекта метаданных.
Синтаксис
 Функция ИмяБазовогоТипаПоОбъектуМетаданных(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект метаданных, по которому необходимо определить базовый тип.
Возвращаемое значение
  Строка - имя базового типа по переданному значению объекта метаданных.
Пример вызова
  ИмяБазовогоТипа = ОбщегоНазначения.ИмяБазовогоТипаПоОбъектуМетаданных(Метаданные.Справочники.Номенклатура); = "Справочники".
Доступность
 Сервер, Толстый клиент, Внешнее соединение
ИмяЗначенияПеречисления
 Возвращает строковое имя значения перечисления по его ссылке.
Синтаксис
 Функция ИмяЗначенияПеречисления(Значение) Экспорт
Параметры
  Значение - ПеречислениеСсылка - значение, для которого необходимо получить имя перечисления.
Возвращаемое значение
  Строка - имя значения перечисления.
Пример вызова
Результат = ОбщегоНазначения.ИмяЗначенияПеречисления(Значение)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ИмяТаблицыПоСсылке
 Возвращает полное имя объекта метаданных по переданному значению ссылки.
Синтаксис
 Функция ИмяТаблицыПоСсылке(Ссылка) Экспорт
Параметры
  Ссылка - ЛюбаяСсылка - объект, для которого необходимо получить имя таблицы ИБ.
Возвращаемое значение
  Строка - полное имя объекта метаданных для указанного объекта. Например: "Справочник.Номенклатура".
Пример вызова
Результат = ОбщегоНазначения.ИмяТаблицыПоСсылке(Ссылка)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ИнициализироватьПараметрыОбработчикаОжидания
 Заполняет структуру параметров значениями по умолчанию.
Синтаксис
 Процедура ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания) Экспорт
Параметры
  ПараметрыОбработчикаОжидания - Структура - заполняется значениями по умолчанию. 
Пример вызова
ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания)
Доступность
 Тонкий клиент, Толстый клиент

ИННСоответствуетТребованиям
 Проверяет соответствие ИНН требованиям.
Синтаксис
 Функция ИННСоответствуетТребованиям(Знач ИНН, ЭтоЮридическоеЛицо, ТекстСообщения) Экспорт
Параметры
  ИНН                - Строка - проверяемый индивидуальный номер налогоплательщика.
  ЭтоЮридическоеЛицо - Булево - признак, является ли владелец ИНН юридическим лицом.
  ТекстСообщения     - Строка - текст сообщения о найденных ошибках.
Возвращаемое значение
  Булево - Истина, если соответствует.
Пример вызова
Результат = РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, ЭтоЮридическоеЛицо, ТекстСообщения)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ИнтервалВремениСтрокой
 Возвращает строковое представление интервала между переданными датами или
 относительно переданной даты и текущей даты сеанса.
Синтаксис
 Функция ИнтервалВремениСтрокой(ВремяНачала, ВремяОкончания = Неопределено) Экспорт
Параметры
  ВремяНачала    - Дата - начальная точка интервала.
  ВремяОкончания - Дата - конечная точка интервала, если не задана - берется текущая дата сеанса.
Возвращаемое значение
  Строка - представление интервала времени.
Пример вызова
Результат = ОбщегоНазначения.ИнтервалВремениСтрокой(ВремяНачала, ВремяОкончания)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ИнформационнаяБазаФайловая
1. Для вызова с клиента
 См. ОбщегоНазначения.ИнформационнаяБазаФайловая.
Синтаксис
 Функция ИнформационнаяБазаФайловая(Знач СтрокаСоединенияИнформационнойБазы = "") Экспорт
Пример вызова
Результат = ОбщегоНазначенияКлиент.ИнформационнаяБазаФайловая(СтрокаСоединенияИнформационнойБазы)
Доступность
 Тонкий клиент, Толстый клиент

2. Для вызова с сервера
 Определяет режим эксплуатации информационной базы файловый (Истина) или серверный (Ложь).
 При проверке используется СтрокаСоединенияИнформационнойБазы, которую можно указать явно.
Синтаксис
 Функция ИнформационнаяБазаФайловая(Знач СтрокаСоединенияИнформационнойБазы = "") Экспорт
Параметры
  СтрокаСоединенияИнформационнойБазы - Строка - параметр используется, если
                 нужно проверить строку соединения не текущей информационной базы.
Возвращаемое значение
  Булево - Истина, если файловая.
Пример вызова
Результат = ОбщегоНазначения.ИнформационнаяБазаФайловая(СтрокаСоединенияИнформационнойБазы)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ИсключенияПоискаСсылок
 Возвращает исключения при поиске мест использования объектов.
Синтаксис
 Функция ИсключенияПоискаСсылок() Экспорт
Возвращаемое значение
   Соответствие - Исключения поиска ссылок в разрезе объектов метаданных:
       * Ключ - ОбъектМетаданных - Объект метаданных, для которого применяются исключения.
       * Значение - Строка, Массив - описание исключенных реквизитов.
           Если "*", то исключены все реквизиты объекта метаданных.
           Если массив строк, то содержит относительные имена исключенных реквизитов.
Пример вызова
Результат = ОбщегоНазначения.ИсключенияПоискаСсылок()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

КартинкаКомментария
 Получает картинку для вывода на странице с комментарием в зависимости
 от наличия текста в комментарии.
Синтаксис
 Функция КартинкаКомментария(Комментарий) Экспорт
Параметры
  Комментарий  - Строка - текст комментария.
Возвращаемое значение
  Картинка - Картинка, которая должна отображаться на странице с комментарием.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Комментарий)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

КаталогФайловойИнформационнойБазы
 Для файлового режима работы возвращает полное имя каталога, в котором расположена информационная база.
 Если режим работы клиент-серверный, то возвращается пустая строка.
Синтаксис
 Функция КаталогФайловойИнформационнойБазы() Экспорт
Возвращаемое значение
  Строка - Полное имя каталога, в котором расположена файловая информационная база.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.КаталогФайловойИнформационнойБазы()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

КлиентПодключенЧерезВебСервер
1. Для вызова с клиента и сервера
 Возвращает Истина, если клиентское приложение подключено к базе через веб-сервер.
 Если нет клиентского приложения, возвращается Ложь.
Синтаксис
 Функция КлиентПодключенЧерезВебСервер() Экспорт
Возвращаемое значение
  Булево - Истина, если подключен.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.КлиентПодключенЧерезВебСервер()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

2. Для вызова с клиента
 Возвращает Истина, если клиентское приложение подключено к базе через веб-сервер.
Синтаксис
 Функция КлиентПодключенЧерезВебСервер() Экспорт
Возвращаемое значение
  Булево - Истина, если подключен.
Пример вызова
Результат = ОбщегоНазначенияКлиент.КлиентПодключенЧерезВебСервер()
Доступность
 Тонкий клиент, Толстый клиент

КлючиСтруктурыВСтроку
 Получает строку, содержащую ключи структуры, разделенные символом разделителя.
Синтаксис
 Функция КлючиСтруктурыВСтроку(Структура, Разделитель = ",") Экспорт
Параметры
 Структура - Структура - Структура, ключи которой преобразуются в строку.
 Разделитель - Строка - Разделитель, который вставляется в строку между ключами структуры.
Возвращаемое значение
 Строка - Строка, содержащая ключи структуры разделенные разделителем.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.КлючиСтруктурыВСтроку(Структура, Разделитель, ")
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

КодОсновногоЯзыка
 Возвращает код основного языка конфигурации, например "ru".
Синтаксис
 Функция КодОсновногоЯзыка() Экспорт
Возвращаемое значение
  Строка - код языка.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

КодПоОКПОСоответствуетТребованиям
 Проверяет соответствие кода ОКПО требованиям стандартов.
Синтаксис
 Функция КодПоОКПОСоответствуетТребованиям(Знач ПроверяемыйКод, ЭтоЮридическоеЛицо, ТекстСообщения = "") Экспорт
Параметры
  ПроверяемыйКод         - Строка - проверяемый код ОКПО;
  ЭтоЮридическоеЛицо     - Булево - признак, является ли владелец кода ОКПО юридическим лицом;
  ТекстСообщения         - Строка - текст сообщения о найденных ошибках в проверяемом коде ОКПО.
Возвращаемое значение
  Булево - Истина, если соответствует.
Пример вызова
Результат = РегламентированныеДанныеКлиентСервер.КодПоОКПОСоответствуетТребованиям(ПроверяемыйКод, ЭтоЮридическоеЛицо, ТекстСообщения)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

КоллекцииИдентичны
 Функция выполняет сравнение двух коллекций строк (ТаблицаЗначений, ДеревоЗначений и т.д.),
 для которых доступен обход посредством оператора Для каждого … Из … Цикл.
 Сравниваемые коллекции должны отвечать следующим требованиям:
  - доступен обход посредством оператора Для каждого … Из … Цикл,
  - наличие в обеих коллекциях всех колонок, перечисленных в параметре ИменаКолонок 
  (если ИменаКолонок не заполнен - все колонки первой коллекции должны существовать во второй коллекции).
  Также позволяет сравнивать массивы.
Синтаксис
 Функция КоллекцииИдентичны(КоллекцияСтрок1, КоллекцияСтрок2, Знач ИменаКолонок = "", Знач ИсключаяКолонки = "", УчитыватьПоследовательностьСтрок = Ложь) Экспорт
Параметры
  КоллекцияСтрок1 - ТаблицаЗначений,
                    ДеревоЗначений,
                    СписокЗначений,
                    ТабличнаяЧасть,
                    Соответствие,
                    Структура - коллекция, отвечающая вышеописанным требованиям.
                                А так же другие объекты, для которых доступен обход
                                посредством оператора Для каждого … Из … Цикл.
  КоллекцияСтрок2 - ТаблицаЗначений,
                    ДеревоЗначений,
                    СписокЗначений,
                    ТабличнаяЧасть,
                    Соответствие,
                    Структура - коллекция, отвечающая вышеописанным требованиям.
                                А так же другие объекты, для которых доступен обход
                                посредством оператора Для каждого … Из … Цикл.
  ИменаКолонок - Строка - (необязательный) имена колонок через запятую,
                          по которым производится сравнение.
                          Не является обязательным для коллекций,
                          состав колонок которых можно выявить:
                          ТаблицаЗначений, СписокЗначений, Соответствие, Структура,
                          если не указан - сравнение производится по колонкам первой коллекции.
                          Для коллекций других типов является обязательным.
  ИсключаяКолонки - Строка - (необязательный) имена колонок, которые игнорируются при сравнении.
  УчитыватьПоследовательностьСтрок - Булево - если Истина, то коллекции признаются 
                      идентичными только если одинаковые строки размещены
                      в коллекциях на одинаковых местах.
Возвращаемое значение
  Булево - Истина, если идентичны.
Пример вызова
Результат = ОбщегоНазначения.КоллекцииИдентичны(КоллекцияСтрок1, КоллекцияСтрок2, ИменаКолонок, ИсключаяКолонки, УчитыватьПоследовательностьСтрок)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

КонтрольнаяСуммаСтрокой
 Вычисляет контрольную сумму для произвольных данных по указанному алгоритму.
Синтаксис
 Функция КонтрольнаяСуммаСтрокой(Знач Данные, Знач Алгоритм = Неопределено) Экспорт
Параметры
  Данные   - Произвольный - любое сериализуемое значение.
  Алгоритм - ХешФункция   - алгоритм расчета контрольной суммы. По умолчанию, MD5.
Возвращаемое значение
  Строка - контрольная сумма строкой без пробелов, 32 байта.
Пример вызова
Результат = ОбщегоНазначения.КонтрольнаяСуммаСтрокой(Данные, Алгоритм)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

КонтрольныйКлючЛицевогоСчетаСоответствуетТребованиям
 Проверка контрольного ключа в номере лицевого счета (9-й разряд номера счета),
 алгоритм установлен документом:
 "ПОРЯДОК РАСЧЕТА КОНТРОЛЬНОГО КЛЮЧА В НОМЕРЕ ЛИЦЕВОГО СЧЕТА"
 (утвержден ЦБ РФ 08.09.1997 N 515).
Синтаксис
 Функция КонтрольныйКлючЛицевогоСчетаСоответствуетТребованиям(НомерСчета, БИК, ЭтоБанк = Истина)Экспорт
Параметры
  НомерСчета - Строка - номер банковского счета.
  БИК - Строка - БИК банка в котором открыт счет.
  ЭтоБанк - Булево - если Истина, то проверяется банковский счет, иначе проверяется как счет РКЦ 
                     (у РКЦ корреспондентский счет не заполняется).
Возвращаемое значение
  Булево - Истина, если соответствует.
Пример вызова
Результат = РегламентированныеДанныеКлиентСервер.КонтрольныйКлючЛицевогоСчетаСоответствуетТребованиям(НомерСчета, БИК, ЭтоБанк)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

КППСоответствуетТребованиям
 Проверяет соответствие КПП требованиям.
 Согласно приложению к приказу ФНС России от 29.06.2012 N ММВ-7-6/435@
 "Об утверждении Порядка и условий присвоения, применения, а также изменения
 идентификационного номера налогоплательщика".
Синтаксис
 Функция КППСоответствуетТребованиям(Знач КПП, ТекстСообщения) Экспорт
Параметры
  КПП            - Строка - проверяемый код причины постановки на учет.
  ТекстСообщения - Строка - текст сообщения о найденных ошибках.
Возвращаемое значение
  Булево - Истина, если соответствует.
Пример вызова
Результат = РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(КПП, ТекстСообщения)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

МенеджерОбъектаПоПолномуИмени
 Возвращает менеджер объекта по полному имени объекта метаданных.
 Ограничение: не обрабатываются точки маршрутов бизнес-процессов.
Синтаксис
 Функция МенеджерОбъектаПоПолномуИмени(ПолноеИмя) Экспорт
Параметры
  ПолноеИмя - Строка - полное имя объекта метаданных. Пример: "Справочник.Организации".
Возвращаемое значение
  СправочникМенеджер, ДокументМенеджер, ОбработкаМенеджер, РегистрСведенийМенеджер - менеджер объекта.
Пример вызова
  МенеджерСправочника = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("Справочник.Организации");
  ПустаяСсылка = МенеджерСправочника.ПустаяСсылка();
Доступность
 Сервер, Толстый клиент, Внешнее соединение

МенеджерОбъектаПоСсылке
 Возвращает менеджер объекта по ссылке на объект.
 Ограничение: не обрабатываются точки маршрутов бизнес-процессов.
 См. также ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени.
Синтаксис
 Функция МенеджерОбъектаПоСсылке(Ссылка) Экспорт
Параметры
  Ссылка - ЛюбаяСсылка - объект, менеджер которого требуется получить.
Возвращаемое значение
  СправочникМенеджер, ДокументМенеджер, ОбработкаМенеджер, РегистрСведенийМенеджер - менеджер объекта.
Пример вызова
  МенеджерСправочника = ОбщегоНазначения.МенеджерОбъектаПоСсылке(СсылкаНаОрганизацию);
  ПустаяСсылка = МенеджерСправочника.ПустаяСсылка();
Доступность
 Сервер, Толстый клиент, Внешнее соединение

МестаИспользования
 Получает все места использования ссылок.
 Если какая-либо ссылка нигде не используется, то строк для нее в результирующей таблице не будет.
Синтаксис
 Функция МестаИспользования(Знач НаборСсылок, Знач АдресРезультата = "") Экспорт
Параметры
     НаборСсылок     - Массив - Ссылки, для которых ищем места использования.
     АдресРезультата - Строка - Необязательный адрес во временном хранилище, куда будет помещен копия результата
                                замены.
Возвращаемое значение
     ТаблицаЗначений - Состоит из колонок:
       * Ссылка                - ЛюбаяСсылка      - Ссылка, которая анализируется.
       * Данные                - Произвольный     - Данные, содержащие анализируемую ссылку.
       * Метаданные            - ОбъектМетаданных - Метаданные найденных данных.
       * ПредставлениеДанных   - Строка           - Представление данных, содержащих анализируемую ссылку.
       * ТипСсылки             - Тип              - Тип анализируемой ссылки.
       * ВспомогательныеДанные - Булево           - Истина, если данные используются анализируемой ссылкой как
                                                    вспомогательными  данными (ведущее измерение и т.п.).
Пример вызова
Результат = ОбщегоНазначения.МестаИспользования(НаборСсылок, АдресРезультата)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

НайтиЗадания
 В локальном режиме работы возвращает регламентные задания, соответствующие отбору.
 В модели сервиса - таблицу значений, в которой содержится описание найденных заданий
 в справочниках ОчередьЗаданий (если не установлены разделители) или ОчередьЗаданийОбластейДанных.
Синтаксис
 Функция НайтиЗадания(Отбор) Экспорт
Параметры
  Отбор - Структура - со свойствами: 
          1) Общие для любого режима работы:
             * УникальныйИдентификатор - УникальныйИдентификатор - идентификатор регламентного задания
                                            в локальном режиме работы.
                                       - СправочникСсылка.ОчередьЗаданий,
                                         СправочникСсылка.ОчередьЗаданийОбластейДанных - идентификатор задания
                                            очереди в модели сервиса.
             * Метаданные              - ОбъектМетаданных: РегламентноеЗадание - метаданные регламентного задания.
                                       - Строка - имя регламентного задания.
             * Использование           - Булево - если Истина, задание включено.
             * Ключ                    - Строка - прикладной идентификатор задания.
          2) Возможные ключи только локального режима:
             * Наименование            - Строка - наименование регламентного задания.
             * Предопределенное        - Булево - если Истина, регламентное задание определено в метаданных.
          3) Возможные ключи только для модели сервиса:
             * ИмяМетода               - Строка - имя метода (или псевдоним) обработчика очереди задании.
             * ОбластьДанных           - Число - значение разделителя области данных задания.
             * СостояниеЗадания        - ПеречислениеСсылка.СостоянияЗаданий - состояние задания очереди.
             * Шаблон                  - СправочникСсылка.ШаблоныЗаданийОчереди - шаблон задания, используется только
                                            для разделенных заданий очереди.
Возвращаемое значение
     Массив - в локальном режиме работы массив регламентных заданий.
              см. описание метода РегламентноеЗадание в синтакс-помощнике.
     ТаблицаЗначений - в модели сервиса таблица значений со свойствами:
        * ИнтервалПовтораПриАварийномЗавершении - Число - Интервал в секундах, через который нужно перезапускать
                                                     задание в случае его аварийного завершения.
        * Использование                         - Булево - если Истина, задание включено.
        * Ключ                                  - Строка - прикладной идентификатор задания.
        * КоличествоПовторовПриАварийномЗавершении - Число - количество повторов при аварийном завершении задания.
        * Параметры                             - Массив - параметры, передаваемые в обработчик задания.
        * Расписание                            - Расписание - расписание задания.
        * УникальныйИдентификатор               - УникальныйИдентификатор - идентификатор регламентного задания
                                                     в локальном режиме работы.
                                                - СправочникСсылка.ОчередьЗаданий,
                                                  СправочникСсылка.ОчередьЗаданийОбластейДанных - идентификатор задания
                                                     очереди в модели сервиса.
        * ЗапланированныйМоментЗапуска          - Дата - дата и время запланированного запуска задания
                                                     (в часовом поясе области данных).
        * ИмяМетода                             - Строка - имя метода (или псевдоним) обработчика очереди задании.
        * ОбластьДанных                         - Число - значение разделителя области данных задания.
        * СостояниеЗадания                      - ПеречислениеСсылка.СостоянияЗаданий - состояние задания очереди.
        * Шаблон                                - СправочникСсылка.ШаблоныЗаданийОчереди - шаблон задания,
                                                     используется только для разделенных заданий очереди.
        * ЭксклюзивноеВыполнение                - Булево - при установленном флаге задание будет выполнено 
                                                     даже при установленной блокировке начала сеансов в области
                                                     данных. Так же если в области есть задания с таким флагом
                                                     сначала будут выполнены они.
Пример вызова
Результат = РегламентныеЗаданияСервер.НайтиЗадания(Отбор)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

НайтиНедопустимыеСимволыВИмениФайла
 Проверяет наличие недопустимых символов в имени файла.
Синтаксис
 Функция НайтиНедопустимыеСимволыВИмениФайла(ИмяФайла) Экспорт
Параметры
  ИмяФайла  - Строка - имя файла.
Возвращаемое значение
   Массив   - массив обнаруженных в имени файла недопустимых символов.
              Если недопустимых символов не обнаружено - возвращается пустой массив.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.НайтиНедопустимыеСимволыВИмениФайла(ИмяФайла)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

НайтиЭлементОтбораПоПредставлению
 Выполняет поиск элемента отбора в коллекции по заданному представлению.
Синтаксис
 Функция НайтиЭлементОтбораПоПредставлению(КоллекцияЭлементов, Представление) Экспорт
Параметры
  КоллекцияЭлементов - КоллекцияЭлементовОтбораКомпоновкиДанных - контейнер с элементами и группами отбора,
                                                                  например, Список.Отбор.Элементы или группа в отборе.
  Представление - Строка - представление группы.
Возвращаемое значение
  ЭлементОтбораКомпоновкиДанных - элемент отбора.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(КоллекцияЭлементов, Представление)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

НайтиЭлементыИГруппыОтбора
 Найти элемент или группу отбора по заданному имени поля или представлению.
Синтаксис
 Функция НайтиЭлементыИГруппыОтбора(Знач ОбластьПоиска,
									Знач ИмяПоля = Неопределено,
									Знач Представление = Неопределено) Экспорт
Параметры
  ОбластьПоиска - ОтборКомпоновкиДанных, КоллекцияЭлементовОтбораКомпоновкиДанных,
                  ГруппаЭлементовОтбораКомпоновкиДанных - контейнер
                  с элементами и группами отбора, например Список.Отбор или группа в отборе.
  ИмяПоля       - Строка - имя поля компоновки (не используется для групп).
  Представление - Строка - представление поля компоновки.
Возвращаемое значение
  Массив - коллекция отборов.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(ОбластьПоиска, ИмяПоля, Представление)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

НовоеЗащищенноеСоединение
 Создает объект описания защищенного соединения OpenSSL.
Синтаксис
 Функция НовоеЗащищенноеСоединение(СертификатКлиента = Неопределено, СертификатыУдостоверяющихЦентров = Неопределено) Экспорт
Параметры
  СертификатКлиента - СертификатКлиентаФайл, 
                      СертификатКлиентаWindows, 
                      Неопределено - см ЗащищенноеСоединениеOpenSSL.
  СертификатыУдостоверяющихЦентров - СертификатыУдостоверяющихЦентровФайл, 
                                     СертификатыУдостоверяющихЦентровWindows, 
                                     СертификатыУдостоверяющихЦентровLinux, 
                                     СертификатыУдостоверяющихЦентровОС, 
                                     Неопределено - см ЗащищенноеСоединениеOpenSSL.
Возвращаемое значение
  ЗащищенноеСоединениеOpenSSL - описание защищенного соединения.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.НовоеЗащищенноеСоединение(СертификатКлиента, СертификатыУдостоверяющихЦентров)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ОбновитьВсеПараметрыРаботыПрограммы
 Обновляет кэши свойств метаданных, позволяющие ускорить
 открытие сеанса, а также обновление ИБ, особенно в модели сервиса.
 Их обновление происходит до обновления ИБ.
 Для использования в других библиотеках и конфигурациях.
Синтаксис
 Процедура ОбновитьВсеПараметрыРаботыПрограммы() Экспорт
Пример вызова
СтандартныеПодсистемыСервер.ОбновитьВсеПараметрыРаботыПрограммы()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОбновитьИнтерфейсПрограммы
 Обновляет интерфейс программы сохраняя текущее активное окно.
Синтаксис
 Процедура ОбновитьИнтерфейсПрограммы() Экспорт
Пример вызова
ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы()
Доступность
 Тонкий клиент, Толстый клиент

ОбновитьПараметрыОбработчикаОжидания
 Заполняет структуру параметров новыми расчетными значениями.
Синтаксис
 Процедура ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания) Экспорт
Параметры
  ПараметрыОбработчикаОжидания - Структура - заполняется расчетными значениями. 
Пример вызова
ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания)
Доступность
 Тонкий клиент, Толстый клиент

ОбщиеПараметрыБазовойФункциональности
 См. ОбщегоНазначенияПереопределяемый.ПриОпределенииОбщихПараметровБазовойФункциональности.
Синтаксис
 Функция ОбщиеПараметрыБазовойФункциональности() Экспорт
Пример вызова
Результат = ОбщегоНазначения.ОбщиеПараметрыБазовойФункциональности()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОбщийМодуль
1. Для вызова с клиента
 Возвращает ссылку на общий модуль или модуль менеджера по имени.
Синтаксис
 Функция ОбщийМодуль(Имя) Экспорт
Параметры
  Имя - Строка - имя общего модуля.
Возвращаемое значение
  ОбщийМодуль, МодульМенеджераОбъекта - общий модуль.
Пример вызова
 Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ОбновлениеКонфигурации") Тогда
  МодульОбновлениеКонфигурацииКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбновлениеКонфигурацииКлиент");
  МодульОбновлениеКонфигурацииКлиент.<Имя метода>();
 КонецЕсли;
 Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПолнотекстовыйПоиск") Тогда
  МодульПолнотекстовыйПоискКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПолнотекстовыйПоискКлиент");
  МодульПолнотекстовыйПоискКлиент.<Имя метода>();
 КонецЕсли;
Доступность
 Тонкий клиент, Толстый клиент

2. Для вызова с сервера
 Возвращает ссылку на общий модуль или модуль менеджера по имени.
Синтаксис
 Функция ОбщийМодуль(Имя) Экспорт
Параметры
  Имя - Строка - имя общего модуля.
Возвращаемое значение
  ОбщийМодуль, МодульМенеджераОбъекта - общий модуль.
Пример вызова
 Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ОбновлениеКонфигурации") Тогда
  МодульОбновлениеКонфигурации = ОбщегоНазначения.ОбщийМодуль("ОбновлениеКонфигурации");
  МодульОбновлениеКонфигурации.<Имя метода>();
 КонецЕсли;
 Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПолнотекстовыйПоиск") Тогда
  МодульПолнотекстовыйПоискСервер = ОбщегоНазначения.ОбщийМодуль("ПолнотекстовыйПоискСервер");
  МодульПолнотекстовыйПоискСервер.<Имя метода>();
 КонецЕсли;
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОбъектXDTOВСтрокуXML
 Возвращает XML-представление XDTO-объекта.
Синтаксис
 Функция ОбъектXDTOВСтрокуXML(Знач ОбъектXDTO, Знач Фабрика = Неопределено) Экспорт
Параметры
  ОбъектXDTO - ОбъектXDTO  - объект, для которого требуется сформировать XML-представление.
  Фабрика    - ФабрикаXDTO - фабрика, с использованием которой требуется формировать XML-представление.
                             Если параметр не указан - будет использоваться глобальная фабрика XDTO.
Возвращаемое значение
   Строка - XML-представление XDTO-объекта.
Пример вызова
Результат = ОбщегоНазначения.ОбъектXDTOВСтрокуXML(ОбъектXDTO, Фабрика)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОбъектXDTOИзСтрокиXML
 Формирует XDTO-объект по XML-представлению.
Синтаксис
 Функция ОбъектXDTOИзСтрокиXML(Знач СтрокаXML, Знач Фабрика = Неопределено) Экспорт
Параметры
  СтрокаXML - Строка    - XML-представление XDTO-объекта,
  Фабрика - ФабрикаXDTO - фабрика, с использованием которой требуется формировать XDTO-объект.
                          Если параметр не указан - будет использоваться глобальная фабрика XDTO.
Возвращаемое значение
  ОбъектXDTO - XDTO-объект.
Пример вызова
Результат = ОбщегоНазначения.ОбъектXDTOИзСтрокиXML(СтрокаXML, Фабрика)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОбъектМетаданныхДоступенПоФункциональнымОпциям
 Определяет доступность объекта метаданных по функциональным опциям.
Синтаксис
 Функция ОбъектМетаданныхДоступенПоФункциональнымОпциям(Знач ОбъектМетаданных) Экспорт
Параметры
   ОбъектМетаданных - ОбъектМетаданных, Строка - проверяемый объект метаданных.
Возвращаемое значение
   Булево - Истина, если объект доступен.
Пример вызова
Результат = ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОбъектМетаданныхПоИдентификатору
 Возвращает объект метаданных по переданному идентификатору.
Синтаксис
 Функция ОбъектМетаданныхПоИдентификатору(Идентификатор) Экспорт
Параметры
  Идентификатор - СправочникСсылка.ИдентификаторыОбъектовМетаданных,
                  СправочникСсылка.ИдентификаторыОбъектовРасширений - идентификатор
                    объекта метаданных конфигурации или расширения.
Возвращаемое значение
  ОбъектМетаданных - объект метаданных, соответствующий идентификатору.
Пример вызова
Результат = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(Идентификатор)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОбъектПоПолномуИмени
 Создает и возвращает экземпляр отчета или обработки по полному имени объекта метаданных.
Синтаксис
 Функция ОбъектПоПолномуИмени(ПолноеИмя) Экспорт
Параметры
  ПолноеИмя - Строка - полное имя объекта метаданных. Пример: "Отчет.БизнесПроцессы".
Возвращаемое значение
  ОтчетОбъект, ОбработкаОбъект - экземпляр отчета или обработки.
Пример вызова
Результат = ОбщегоНазначения.ОбъектПоПолномуИмени(ПолноеИмя)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОбъектЯвляетсяГруппой
 Проверяет, является ли объект группой элементов.
Синтаксис
 Функция ОбъектЯвляетсяГруппой(Объект) Экспорт
Параметры
  Объект - ЛюбаяСсылка, Объект - проверяемый объект.
Возвращаемое значение
  Булево - Истина, если является.
Пример вызова
Результат = ОбщегоНазначения.ОбъектЯвляетсяГруппой(Объект)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОГРНСоответствуетТребованиям
 Проверяет соответствие ОГРН требованиям.
Синтаксис
 Функция ОГРНСоответствуетТребованиям(Знач ОГРН, ЭтоЮридическоеЛицо, ТекстСообщения) Экспорт
Параметры
  ОГРН               - Строка - проверяемый основной государственный регистрационный номер.
  ЭтоЮридическоеЛицо - Булево - признак, является ли владелец ОГРН юридическим лицом.
  ТекстСообщения     - Строка - текст сообщения о найденных ошибках.
Возвращаемое значение
  Булево - Истина, если соответствует.
Пример вызова
Результат = РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(ОГРН, ЭтоЮридическоеЛицо, ТекстСообщения)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ОжидатьЗавершение
 Ожидать завершения выполнения процедуры в фоновом задании и открыть форму ожидания длительной операции.
 Применяется совместно с функцией ДлительныеОперации.ВыполнитьВФоне для повышения отзывчивости пользовательского 
 интерфейса, заменяя длительный серверный вызов на запуск фонового задания.
Синтаксис
 Процедура ОжидатьЗавершение(Знач ДлительнаяОперация, Знач ОповещениеОЗавершении = Неопределено, 
	Знач ПараметрыОжидания = Неопределено) Экспорт
Параметры
  ДлительнаяОперация     - Структура - см. возвращаемое значение функции ДлительныеОперации.ВыполнитьВФоне.
  ОповещениеОЗавершении  - ОписаниеОповещения - оповещение, которое вызывается при завершении фонового задания. 
                           Параметры процедуры-обработчика оповещения: 
   * Результат - Структура, Неопределено - структура со свойствами или Неопределено, если задание было отменено. Свойства: 
    ** Статус           - Строка - "Выполнено", если задание было успешно выполнено;
                                   "Ошибка", если задание завершено с ошибкой.
    ** АдресРезультата  - Строка - адрес временного хранилища, в которое будет
                                   помещен (или уже помещен) результат работы процедуры.
    ** АдресДополнительногоРезультата - Строка - если установлен параметр ДополнительныйРезультат, 
                                      содержит адрес дополнительного временного хранилища,
                                      в которое будет помещен (или уже помещен) результат работы процедуры.
    ** КраткоеПредставлениеОшибки   - Строка - краткая информация об исключении, если Статус = "Ошибка".
    ** ПодробноеПредставлениеОшибки - Строка - подробная информация об исключении, если Статус = "Ошибка".
    ** Сообщения        - ФиксированныйМассив, Неопределено - массив объектов СообщениеПользователю, 
                                                сформированных в процедуре-обработчике длительной операции.
   * ДополнительныеПараметры - Произвольный - произвольные данные, переданные в описании оповещения. 
  ПараметрыОжидания      - Структура - см. ДлительныеОперацииКлиент.ПараметрыОжидания.
Пример вызова
ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания)
Доступность
 Тонкий клиент, Толстый клиент

ОперативнаяПамятьДоступнаяКлиентскомуПриложению
 Возвращает объем оперативной памяти, доступной клиентскому  приложению.
Синтаксис
 Функция ОперативнаяПамятьДоступнаяКлиентскомуПриложению() Экспорт
Возвращаемое значение
  Число - количество гигабайт оперативной памяти с точностью до десятых долей.
  Неопределено - нет клиентского приложения, то есть ТекущийРежимЗапуска() = Неопределено.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ОперативнаяПамятьДоступнаяКлиентскомуПриложению()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ОписаниеЗащитыБезПредупреждений
 Возвращает описание защиты от опасных действий с отключенными предупреждениями.
 Функция не приводит к ошибке компиляции при отсутствии в платформе механизмов
 предупреждений безопасности.
Синтаксис
 Функция ОписаниеЗащитыБезПредупреждений() Экспорт
Возвращаемое значение
  ОписаниеЗащитыОтОпасныхДействий - со свойством ПредупреждатьОбОпасныхДействиях = Ложь.
Пример вызова
Результат = ОбщегоНазначения.ОписаниеЗащитыБезПредупреждений()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОписаниеСвойствОбъекта
 Возвращает таблицу значений с описанием требуемых свойств всех реквизитов объекта метаданного.
 Получает значения свойств стандартных реквизитов и пользовательских реквизитов (созданных в режиме конфигуратора).
Синтаксис
 Функция ОписаниеСвойствОбъекта(ОбъектМетаданных, Свойства) Экспорт
Параметры
  ОбъектМетаданных  - ОбъектМетаданных - объект, для которого необходимо получить значение свойств реквизитов.
                      Например: Метаданные.Документ.РеализацияТоваровИУслуг
  Свойства - Строка - свойства реквизитов, перечисленные через запятую, значение которых необходимо получить.
                      Например: "Имя, Тип, Синоним, Подсказка".
Возвращаемое значение
  ТаблицаЗначений - описание требуемых свойств всех реквизитов объекта метаданных.
Пример вызова
Результат = ОбщегоНазначения.ОписаниеСвойствОбъекта(ОбъектМетаданных, Свойства)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОписаниеТипаВсеСсылки
 Возвращает описание типа, включающего в себя все возможные ссылочные типы конфигурации.
Синтаксис
 Функция ОписаниеТипаВсеСсылки() Экспорт
Возвращаемое значение
  ОписаниеТипов - все ссылочные типы конфигурации.
Пример вызова
Результат = ОбщегоНазначения.ОписаниеТипаВсеСсылки()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОписаниеТипаДата
 Создает объект ОписаниеТипов, содержащий тип Дата.
Синтаксис
 Функция ОписаниеТипаДата(ЧастиДаты) Экспорт
Параметры
  ЧастиДаты - ЧастиДаты - набор вариантов использования значений типа Дата.
Возвращаемое значение
  ОписаниеТипов - описание типа Дата.
Пример вызова
Результат = ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОписаниеТипаСостоитИзТипа
 Проверить, что описание типа состоит из единственного типа значения и 
 совпадает с нужным типом.
Синтаксис
 Функция ОписаниеТипаСостоитИзТипа(ОписаниеТипа, ТипЗначения) Экспорт
Параметры
   ОписаниеТипа - ОписаниеТипов - проверяемая коллекция типов;
   ТипЗначения  - Тип - проверяемый тип.
Возвращаемое значение
   Булево - Истина, если совпадает.
Пример вызова
  Если ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(ТипЗначенияСвойства, Тип("Булево") Тогда
    // Выводим поле в виде флажка.
  КонецЕсли;
Доступность
 Сервер, Толстый клиент, Внешнее соединение
ОписаниеТипаСтрока
 Создает объект ОписаниеТипов, содержащий тип Строка.
Синтаксис
 Функция ОписаниеТипаСтрока(ДлинаСтроки) Экспорт
Параметры
  ДлинаСтроки - Число - длина строки.
Возвращаемое значение
  ОписаниеТипов - описание типа Строка.
Пример вызова
Результат = ОбщегоНазначения.ОписаниеТипаСтрока(ДлинаСтроки)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОписаниеТипаЧисло
 Создает объект ОписаниеТипов, содержащий тип Число.
Синтаксис
 Функция ОписаниеТипаЧисло(Разрядность, РазрядностьДробнойЧасти = 0, ЗнакЧисла = Неопределено) Экспорт
Параметры
  Разрядность - Число - общее количество разрядов числа (количество разрядов
                        целой части плюс количество разрядов дробной части).
  РазрядностьДробнойЧасти - Число - число разрядов дробной части.
  ЗнакЧисла - ДопустимыйЗнак - допустимый знак числа.
Возвращаемое значение
  ОписаниеТипов - описание типа Число.
Пример вызова
Результат = ОбщегоНазначения.ОписаниеТипаЧисло(Разрядность, РазрядностьДробнойЧасти, ЗнакЧисла)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОповеститьОбИзмененииОбъекта
 Оповещает открытые формы и динамические списки об изменении одного объекта.
Синтаксис
 Процедура ОповеститьОбИзмененииОбъекта(Источник, Знач ДополнительныеПараметры = Неопределено) Экспорт
Параметры
  Источник - ЛюбаяСсылка,
             РегистрСведенийКлючЗаписи,
             РегистрНакопленияКлючЗаписи,
             РегистрБухгалтерииКлючЗаписи,
             РегистрРасчетаКлючЗаписи - ссылка измененного объекта или ключ измененной записи регистра, об изменении 
                                        которой(го) необходимо уведомить динамические списки и формы.
  ДополнительныеПараметры - Произвольный - любые параметры, которые необходимо передать в методе Оповестить.
Пример вызова
ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(Источник, ДополнительныеПараметры)
Доступность
 Тонкий клиент, Толстый клиент

ОповеститьОбИзмененииОбъектов
 Оповещает открытые формы и динамические списки об изменении сразу нескольких объектов.
Синтаксис
 Процедура ОповеститьОбИзмененииОбъектов(Источник, Знач ДополнительныеПараметры = Неопределено) Экспорт
Параметры
  Источник - Тип, ОписаниеТипов - тип или типы объектов, об изменении которых необходимо уведомить 
                                  динамические списки и формы;
           - Массив - список измененных ссылок и/или ключей записей регистров, об изменении 
                      которых необходимо уведомить динамические списки и формы.
  ДополнительныеПараметры - Произвольный - любые параметры, которые необходимо передать в методе Оповестить.
Пример вызова
ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъектов(Источник, ДополнительныеПараметры)
Доступность
 Тонкий клиент, Толстый клиент

ОткрытьЖурналРегистрации
 Открывает форму журнала регистрации с установленным отбором.
Синтаксис
 Процедура ОткрытьЖурналРегистрации(Знач Отбор = Неопределено, Владелец = Неопределено) Экспорт
Параметры
  Отбор - Структура - со свойствами:
     * Пользователь              - Строка, СписокЗначений - имя или список пользователей
                                                            информационной базы.
     * СобытиеЖурналаРегистрации - Строка, Массив - идентификатор события.
     * ДатаНачала                - Дата           - начало интервала отображаемых событий.
     * ДатаОкончания             - Дата           - конец интервала отображаемых событий.
     * Данные                    - Произвольный   - данные любого типа.
     * Сеанс                     - СписокЗначений - список выбираемых сеансов.
     * Уровень                   - Строка, Массив - представление уровня важности
                                                    события журнала регистрации.
     * ИмяПриложения             - Массив         - массив идентификаторов приложения.
  Владелец - УправляемаяФорма - форма, из которой открывается журнал регистрации.
Пример вызова
ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(Отбор, Владелец)
Доступность
 Тонкий клиент, Толстый клиент

ОткрытьНавигационнуюСсылку
 Открывает навигационную ссылку в программе, которая ассоциирована с протоколом навигационной ссылки.
 Допустимые протоколы: http, https, e1c, v8help, mailto, tel, skype.
 Для открытия проводника или файла в программе просмотра не следует формировать ссылку по протоколу file://
 - для открытия проводника см. ОткрытьПроводник.
 - для открытия файла по расширению см. ОткрытьФайлВПрограммеПросмотра.
Синтаксис
 Процедура ОткрытьНавигационнуюСсылку(НавигационнаяСсылка, Знач Оповещение = Неопределено) Экспорт
Параметры
  НавигационнаяСсылка - Строка - ссылка, которую требуется открыть.
  Оповещение          - ОписаниеОповещения, Неопределено - оповещение о результате открытия.
                            - если оповещение не задано - в случае ошибки будет показано предупреждение.
      * ПриложениеЗапущено      - Булево    - Истина, если внешнее приложение не вызвало ошибок при открытии.
      * ДополнительныеПараметры - Структура - значение, которое было указано при создании объекта ОписаниеОповещения.
Пример вызова
  ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку("e1cib/navigationpoint/startpage"); // начальная страница.
  ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку("v8help://1cv8/QueryLanguageFullTextSearchInData");
  ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку("https://1c.ru");
  ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку("mailto:help@1c.ru");
  ОбщегоНазначенияКлиент.ОткрытьНавигационнуюСсылку("skype:echo123?call");
Доступность
 Тонкий клиент, Толстый клиент

ОткрытьПроводник
 Открывает проводник с указанным путем.
 Если передан путь к файлу, то выполняет позиционирование курсора в проводнике на этом файле.
Синтаксис
 Процедура ОткрытьПроводник(ПутьККаталогуИлиФайлу) Экспорт
Параметры
  ПутьККаталогуИлиФайлу - Строка - полный путь к файлу или каталогу на диске.
Пример вызова
  // Для Windows
  ОбщегоНазначенияКлиент.ОткрытьПроводник("C:\Users");
  ОбщегоНазначенияКлиент.ОткрытьПроводник("C:\Program Files\1cv8\common\1cestart.exe");
  // Для Linux
  ОбщегоНазначенияКлиент.ОткрытьПроводник("/home/");
  ОбщегоНазначенияКлиент.ОткрытьПроводник("/opt/1C/v8.3/x86_64/1cv8c");
Доступность
 Тонкий клиент, Толстый клиент

ОткрытьСписокАктивныхПользователей
 Вызывается при необходимости открыть форму списка активных пользователей,
 которые в данный момент времени работают с системой.
Синтаксис
 Процедура ОткрытьСписокАктивныхПользователей(ПараметрыФормы = Неопределено, ВладелецФормы = Неопределено) Экспорт
Параметры
    ПараметрыФормы - Структура        - См. описание параметра Параметры метода ОткрытьФорму в синтакс-помощнике.
    ВладелецФормы  - УправляемаяФорма - См. описание параметра Владелец метода ОткрытьФорму в синтакс-помощнике.
Пример вызова
СтандартныеПодсистемыКлиент.ОткрытьСписокАктивныхПользователей(ПараметрыФормы, ВладелецФормы)
Доступность
 Тонкий клиент, Толстый клиент

ОткрытьФайлВПрограммеПросмотра
 Открывает файл в программе просмотра, ассоциированной с расширением файла в операционной системе.
 Блокирует возможность открытия файлов, расширение которых относятся к исполняемым файлам.
Синтаксис
 Процедура ОткрытьФайлВПрограммеПросмотра(ПутьКФайлу, Знач Оповещение = Неопределено) Экспорт
Параметры
  ПутьКФайлу - Строка - полный путь к файлу на диске, который требуется открыть.
  Оповещение          - ОписаниеОповещения, Неопределено - оповещение о результате открытия.
                            - если оповещение не задано - в случае ошибки будет показано предупреждение.
      * ПриложениеЗапущено      - Булево    - Истина, если внешнее приложение не вызвало ошибок при открытии.
      * ДополнительныеПараметры - Структура - значение, которое было указано при создании объекта ОписаниеОповещения.
Пример вызова
  ОбщегоНазначенияКлиент.ОткрытьФайлВПрограммеПросмотра(КаталогДокументов() + "test.pdf");
  ОбщегоНазначенияКлиент.ОткрытьФайлВПрограммеПросмотра(КаталогДокументов() + "test.xlsx");
Доступность
 Тонкий клиент, Толстый клиент

ОткрытьФормуДлительнойОперации
 Открывает форму-индикатор длительной операции.
Синтаксис
 Функция ОткрытьФормуДлительнойОперации(Знач ВладелецФормы, Знач ИдентификаторЗадания) Экспорт
Параметры
  ВладелецФормы        - УправляемаяФорма - форма, из которой производится открытие. 
  ИдентификаторЗадания - УникальныйИдентификатор - идентификатор фонового задания.
Возвращаемое значение
  УправляемаяФорма     - ссылка на открытую форму.
Пример вызова
Результат = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ВладелецФормы, ИдентификаторЗадания)
Доступность
 Тонкий клиент, Толстый клиент

ОтменитьВыполнениеЗадания
 Отменяет выполнение фонового задания по переданному идентификатору.
Синтаксис
 Процедура ОтменитьВыполнениеЗадания(Знач ИдентификаторЗадания) Экспорт 
Параметры
  ИдентификаторЗадания - УникальныйИдентификатор - идентификатор фонового задания. 
Пример вызова
ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ОтмеченныеЭлементы
 Получает массив значений из отмеченных элементов списка значений.
Синтаксис
 Функция ОтмеченныеЭлементы(Список) Экспорт
Параметры
  Список - СписокЗначений - список значений из которого будет формироваться массив значений;
Возвращаемое значение
  Массив - массив значений из отмеченных элементов списка значений.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(Список)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ОчиститьПараметрыСеанса
 Переводит параметры сеанса в состояние "Не установлено". 
Синтаксис
 Процедура ОчиститьПараметрыСеанса(ПараметрыДляОчистки = "", Исключения = "") Экспорт
Параметры
  ПараметрыДляОчистки - Строка - имена параметров сеанса для очистки, разделенные ",".
  Исключения          - Строка - имена параметров сеанса не предназначенные для очистки, разделенные ",".
Пример вызова
ОбщегоНазначения.ОчиститьПараметрыСеанса(ПараметрыДляОчистки, Исключения)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПараметрыАдминистрирования
 Возвращает сохраненные в информационной базы параметры администрирования.
 Предназначена для использования в механизмах, требующих для свой работы
 ввода параметров администрирования информационной базы и/или кластера серверов.
 Например, блокировка установки соединений с информационной базой.
 См. так же УстановитьПараметрыАдминистрирования.
Синтаксис
 Функция ПараметрыАдминистрирования() Экспорт
Возвращаемое значение
  Структура - содержит свойства двух структур
              АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера 
              и АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
              При этом поля, содержащие пароли, возвращаются пустыми. Если параметры администрирования
              не были ранее сохранены при помощи функции УстановитьПараметрыАдминистрирования
              то буду возвращены автоматически вычисленные параметры администрирования по-умолчанию.
Пример вызова
Результат = СтандартныеПодсистемыСервер.ПараметрыАдминистрирования()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПараметрыАдминистрированияИнформационнойБазыКластера
 Конструктор структуры, описывающей параметры подключения к администрируемой информационной
  базе кластера.
Синтаксис
 Функция ПараметрыАдминистрированияИнформационнойБазыКластера() Экспорт
Возвращаемое значение
  Структура - структура с полями:
    * ИмяВКластере - Строка - имя администрируемой информационной базы в кластере серверов,
    * ИмяАдминистратораИнформационнойБазы - Строка - имя пользователя информационной базы с правами
      администратора (если для информационной базы не задан список пользователей ИБ - используется
      пустая строка),
    * ПарольАдминистратораИнформационнойБазы - Строка - пароль пользователя информационной базы
      с правами администратора (если для информационной базы не задан список пользователей ИБ или
      для пользователя ИБ не установлен пароль - используется пустая строка).
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПараметрыАдминистрированияКластера
 Конструктор структуры, описывающей параметры подключения к администрируемому
 кластеру серверов.
Синтаксис
 Функция ПараметрыАдминистрированияКластера() Экспорт
Возвращаемое значение
  Структура - структура с полями:
    * ТипПодключения - Строка - возможные значения:
        "COM" - при подключении к агенту сервера с использованием COM-объекта V8*.ComConnector,
        "RAS" - при подключении к серверу администрирования (ras) с использованием консольного
                клиента сервера администрирования (rac),
    * АдресАгентаСервера - Строка - сетевой адрес агента сервера (только при ТипПодключения = "COM"),
    * ПортАгентаСервера - Число - сетевой порт агента сервера (только при ТипПодключения = "COM"),
      типичное значение - 1540,
    * АдресСервераАдминистрирования - Строка - сетевой адрес сервера администрирования ras (только
      при ТипПодключения = "RAS"),
    * ПортСервераАдминистрирования - Число - сетевой порт сервера администрирования ras (только при
      ТипПодключения = "RAS"), типичное значение - 1545,
    * ПортКластера - Число - сетевой порт менеджера администрируемого кластера, типичное значение -1541,
    * ИмяАдминистратораКластера - Строка - имя учетной записи администратора кластера (если для кластера
      не задан список администраторов - используется пустая строка),
    * ПарольАдминистратораКластера - Строка - пароль учетной записи администратора кластера (если
      для кластера не задан список администраторов или для учетной записи не установлен пароль -
      используется пустая строка).
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПараметрыВопросаПользователю
 Возвращает новую структуру дополнительных параметров для процедуры ПоказатьВопросПользователю.
Синтаксис
 Функция ПараметрыВопросаПользователю() Экспорт
Возвращаемое значение
  Структура   - структура со свойствами:
    * КнопкаПоУмолчанию             - Произвольный - определяет кнопку по умолчанию по типу кнопки или по связанному
                                                     с ней значению.
    * Таймаут                       - Число        - интервал времени в секундах до автоматического закрытия окна
                                                     вопроса.
    * КнопкаТаймаута                - Произвольный - кнопка (по типу кнопки или по связанному с ней значению), 
                                                     на которой отображается количество секунд, оставшихся до
                                                     истечения таймаута.
    * Заголовок                     - Строка       - заголовок вопроса. 
    * ПредлагатьБольшеНеЗадаватьЭтотВопрос - Булево- если Истина, то в окне вопроса будет доступен одноименный флажок.
    * БольшеНеЗадаватьЭтотВопрос    - Булево       - принимает значение, выбранное пользователем в соответствующем
                                                     флажке.
    * БлокироватьВесьИнтерфейс      - Булево       - если Истина, форма вопроса открывается блокируя работу всех
                                                     остальных открытых окон, включая главное окно.
    * Картинка                      - Картинка     - картинка, выводимая в окне вопроса.
Пример вызова
Результат = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю()
Доступность
 Тонкий клиент, Толстый клиент

ПараметрыВыполненияВФоне
 Возвращает новую структуру для параметра ПараметрыВыполнения функции ВыполнитьВФоне.
Синтаксис
 Функция ПараметрыВыполненияВФоне(Знач ИдентификаторФормы) Экспорт
Параметры
   ИдентификаторФормы - УникальныйИдентификатор - уникальный идентификатор формы, 
                               во временное хранилище которой надо поместить результат выполнения процедуры.
Возвращаемое значение
   Структура - со свойствами:
     * ИдентификаторФормы      - УникальныйИдентификатор - уникальный идентификатор формы, 
                               во временное хранилище которой надо поместить результат выполнения процедуры.
     * ДополнительныйРезультат - Булево     - признак использования дополнительного временного хранилища для передачи 
                                 результата из фонового задания в родительский сеанс. По умолчанию - Ложь.
     * ОжидатьЗавершение       - Число, Неопределено - таймаут в секундах ожидания завершения фонового задания. 
                               Если задано Неопределено, то ждать до момента завершения задания. 
                               Если задано 0, то ждать завершения задания не требуется. 
                               По умолчанию - 2 секунды; а для низкой скорости соединения - 4. 
     * НаименованиеФоновогоЗадания - Строка - описание фонового задания. По умолчанию - имя процедуры.
     * КлючФоновогоЗадания      - Строка    - уникальный ключ для активных фоновых заданий, имеющих такое же имя процедуры.
                                              По умолчанию, не задан.
     * АдресРезультата          - Строка - адрес временного хранилища, в которое должен быть помещен результат
                                           работы процедуры. Если не задан, адрес формируется автоматически.
     * ЗапуститьВФоне           - Булево - если Истина, то задание будет всегда выполняться в фоне,
                               за исключением режима отладки.
                               В файловом варианте, при наличии ранее запущенных заданий,
                               новое задание становится в очередь и начинает выполняться после завершения предыдущих.
     * ЗапуститьНеВФоне         - Булево - если Истина, задание всегда будет запускаться непосредственно,
                               без использования фонового задания.
     * БезРасширений            - Булево - если Истина, то фоновое задание будет запущено без подключения
                               расширений конфигурации.
Пример вызова
Результат = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПараметрыЗапускаПрограммы
1. Для вызова с клиента
 Возвращает структуру параметров для см. процедуру ЗапуститьПрограмму.
Синтаксис
 Функция ПараметрыЗапускаПрограммы() Экспорт
Возвращаемое значение
  ТекущийКаталог              - Строка - Задает текущий каталог запускаемого приложения.
  Оповещение                  - Булево - ОписаниеОповещения, Неопределено - оповещение о результате 
                                         завершения запущенного приложения.
                                         если оповещение не задано - в случае ошибки будет показано предупреждение.
      * Результат             - Структура - Результат работы программы.
          ** ПриложениеЗапущено - Булево - Истина, если внешнее приложение не вызвало ошибок при открытии.
          ** ОписаниеОшибки     - Строка - краткое описание ошибки. При отмене пользователем пустая строка.
          ** КодВозврата        - Число  - код возврата программы.
      * ДополнительныеПараметры - Структура - значение, которое было указано при создании объекта ОписаниеОповещения.
Пример вызова
Результат = ОбщегоНазначенияКлиент.ПараметрыЗапускаПрограммы()
Доступность
 Тонкий клиент, Толстый клиент

2. Для вызова с клиента и сервера
 Возвращает структуру параметров для см. процедуру ЗапуститьПрограмму.
Синтаксис
 Функция ПараметрыЗапускаПрограммы() Экспорт
Возвращаемое значение
  ТекущийКаталог - Строка - Задает текущий каталог запускаемого приложения.
  ДождатьсяЗавершения - Булево - Истина - дожидаться завершения запущенного приложения 
      перед продолжением работы.
  ПолучитьПотокВывода - Булево - Истина - результат, направленный в поток stdout,
      если не указан ДождатьсяЗавершения - игнорируется.
  ПолучитьПотокОшибок - Булево - Истина - ошибки, направленные в поток stderr,
      если не указан ДождатьсяЗавершения - игнорируется.
  ВыполнитьСНаивысшимиПравами - Булево - Истина - требуется запустить программу на исполнение 
      с повышением привилегий системы:
      - подтверждение UAC для Windows;
      - интерактивным запросом c GUI sudo и перенаправлением
      $DISPLAY и $XAUTHORITY текущего пользователя для Linux;
      Не совместим с параметром ДождатьсяЗавершения. В MacOS игнорируется.
  Кодировка - Строка - Код кодировки, устанавливаемый до выполнения пакетной операции.
      В Linux и macOS игнорируется.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ПараметрыЗапускаПрограммы()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПараметрыИзСтроки
 Получает значения параметров из строки.
Синтаксис
 Функция ПараметрыИзСтроки(Знач СтрокаПараметров, Знач Разделитель = ";") Экспорт
Параметры
  СтрокаПараметров - Строка - строка, содержащая параметры, каждый из которых представляет собой
                              фрагмент вида <Имя параметра>=<Значение>, где:
                                Имя параметра - имя параметра; 
                                Значение - его значение. 
                              Фрагменты отделяются друг от друга символами ';'.
                              Если значение содержит пробельные символы, то оно должно быть заключено в двойные
                              кавычки (").
                              Например:
                               "File=""c:\InfoBases\Trade""; Usr=""Director"";"
  Разделитель - Строка - символ, которым фрагменты отделяются друг от друга.
Возвращаемое значение
  Структура - значения параметров, где ключ - имя параметра, значение - значение параметра.
Пример вызова
  Результат = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки("File=""c:\InfoBases\Trade""; Usr=""Director"";""", ";");
  - вернет структуру:
     ключ "File" и значение "c:\InfoBases\Trade"
     ключ "Usr"  и значение "Director".
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПараметрыОжидания
 Возвращает пустую структуру для параметра ПараметрыОжидания процедуры ДлительныеОперацииКлиент.ОжидатьЗавершение.
Синтаксис
 Функция ПараметрыОжидания(ФормаВладелец) Экспорт
Параметры
  ФормаВладелец - УправляемаяФорма, Неопределено - форма, из которой вызывается длительная операция.
Возвращаемое значение
  Структура              - параметры выполнения задания: 
   * ФормаВладелец          - УправляемаяФорма, Неопределено - форма, из которой вызывается длительная операция.
   * ТекстСообщения         - Строка - текст сообщения, выводимый на форме ожидания.
                                       Если не задан, то выводится "Пожалуйста, подождите...".
   * ВыводитьОкноОжидания   - Булево - если Истина, то открыть окно ожидания с визуальной индикацией длительной операции. 
                                       Если используется собственный механизм индикации, то следует указать Ложь.
   * ВыводитьПрогрессВыполнения - Булево - выводить прогресс выполнения в процентах на форме ожидания.
   * ОповещениеОПрогрессеВыполнения - ОписаниеОповещения - оповещение, которое периодически вызывается при 
                                      проверке готовности фонового задания. Параметры процедуры-обработчика оповещения:
     ** Прогресс - Структура, Неопределено - структура со свойствами или Неопределено, если задание было отменено. Свойства: 
      *** Статус               - Строка - "Выполняется", если задание еще не завершилось;
                                           "Выполнено", если задание было успешно выполнено;
                                          "Ошибка", если задание завершено с ошибкой;
                                           "Отменено", если задание отменено пользователем или администратором.
      *** ИдентификаторЗадания - УникальныйИдентификатор - идентификатор запущенного фонового задания.
      *** Прогресс             - Структура, Неопределено - результат функции ДлительныеОперации.ПрочитатьПрогресс, 
                                                            если ВыводитьПрогрессВыполнения = Истина.
      *** Сообщения            - ФиксированныйМассив, Неопределено - если ВыводитьСообщения = Истина, массив объектов СообщениеПользователю, 
                                  очередная порция сообщений, сформированных в процедуре-обработчике длительной операции.
     ** ДополнительныеПараметры - Произвольный - произвольные данные, переданные в описании оповещения. 
   * ВыводитьСообщения      - Булево - выводить в оповещения о завершении и прогресс сообщения, 
                                       сформированные в процедуре-обработчике длительной операции.
   * Интервал               - Число  - интервал в секундах между проверками готовности длительной операции.
                                       По умолчанию 0 - после каждой проверки интервал увеличивается с 1 до 15 секунд
                                       с коэффициентом 1.4.
   * ОповещениеПользователя - Структура - содержит свойства:
     ** Показать            - Булево - если Истина, то по завершении длительной операции вывести оповещение пользователя.
     ** Текст               - Строка - текст оповещения пользователя.
     ** НавигационнаяСсылка - Строка - навигационная ссылка оповещения пользователя.
     ** Пояснение           - Строка - пояснение оповещения пользователя.
   * ПолучатьРезультат - Булево - Служебный параметр. Не предназначен для использования.
Пример вызова
Результат = ДлительныеОперацииКлиент.ПараметрыОжидания(ФормаВладелец)
Доступность
 Тонкий клиент, Толстый клиент

ПараметрыПодключенияWSПрокси
 Возвращает структуру параметров для функции СоздатьWSПрокси.
Синтаксис
 Функция ПараметрыПодключенияWSПрокси() Экспорт
Возвращаемое значение
  Структура - коллекция параметров, см. СоздатьWSПрокси().
Пример вызова
Результат = ОбщегоНазначения.ПараметрыПодключенияWSПрокси()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПараметрыПодключенияКомпоненты
 Возвращает структуру параметров для см. процедуру ПодключитьКомпонентуИзМакета.
Синтаксис
 Функция ПараметрыПодключенияКомпоненты() Экспорт
Возвращаемое значение
  Структура - коллекция параметров:
      * Кэшировать           - Булево - (по умолчанию Истина) использовать механизм кэширования компонент на клиенте.
      * ПредложитьУстановить - Булево - (по умолчанию Истина) предлагать устанавливать и обновлять компоненту.
      * ТекстПояснения       - Строка - для чего нужна компонента и что не будет работать, если ее не устанавливать.
      * ИдентификаторыСозданияОбъектов - Массив - идентификатор создания экземпляра модуля объекта,
                 используется только для компонент, у которых есть несколько идентификаторов создания объектов,
                 при задании параметр Идентификатор будет игнорироваться.
Пример вызова
  ПараметрыПодключения = ОбщегоНазначенияКлиент.ПараметрыПодключенияКомпоненты();
  ПараметрыПодключения.ТекстПояснения = НСтр("ru = 'Для использования сканера штрихкодов требуется
                                             |внешняя компонента «1С:Сканеры штрихкода (NativeApi)».'");
Доступность
 Тонкий клиент, Толстый клиент

ПараметрыРаботыКлиента
 Возвращает значения параметров, необходимых для работы клиентского кода конфигурации
 без дополнительных серверных вызовов.
Синтаксис
 Функция ПараметрыРаботыКлиента() Экспорт
Возвращаемое значение
   ФиксированнаяСтруктура - параметры работы клиента.
                            Состав свойств см. в ОбщегоНазначенияПереопределяемый.ПриДобавленииПараметровРаботыКлиента.
Пример вызова
Результат = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента()
Доступность
 Тонкий клиент, Толстый клиент

ПараметрыРаботыКлиентаПриЗапуске
 Возвращает значения параметров, необходимых для работы клиентского кода
 при запуске конфигурации за один серверный вызовов (для минимизации клиент-серверного взаимодействия
 и снижения времени запуска). 
 С помощью этой функции можно обращаться к параметрам в клиентском коде, вызываемом из обработчиков событий:
 - ПередНачаломРаботыСистемы,
 - ПриНачалеРаботыСистемы.
 В этих обработчиках, при запуске недопустимо использовать команды сброса кэша
 повторно используемых модулей, иначе запуск может привести
 к непредсказуемым ошибкам и лишним серверным вызовам.
Синтаксис
 Функция ПараметрыРаботыКлиентаПриЗапуске() Экспорт
Возвращаемое значение
   ФиксированнаяСтруктура - параметры работы клиента при запуске. 
                            См. в ОбщегоНазначенияПереопределяемый.ПриДобавленииПараметровРаботыКлиентаПриЗапуске.
Пример вызова
Результат = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске()
Доступность
 Тонкий клиент, Толстый клиент

ПараметрыУстановкиКомпоненты
 Возвращает структуру параметров для см. процедуру УстановитьКомпонентуИзМакета.
Синтаксис
 Функция ПараметрыУстановкиКомпоненты() Экспорт
Возвращаемое значение
  Структура - коллекция параметров:
      * ТекстПояснения - Строка - для чего нужна компонента и что не будет работать, если ее не устанавливать.
Пример вызова
  ПараметрыУстановки = ОбщегоНазначенияКлиент.ПараметрыУстановкиКомпоненты();
  ПараметрыУстановки.ТекстПояснения = НСтр("ru = 'Для использования сканера штрихкодов требуется
                                           |внешняя компонента «1С:Сканеры штрихкода (NativeApi)».'");
Доступность
 Тонкий клиент, Толстый клиент

ПередЗавершениемРаботыСистемы
 Выполнить стандартные действия перед завершением работы пользователя
 с областью данных, либо в локальном режиме работы.
 Предназначена для вызова из обработчика ПередЗавершениемРаботыСистемы модулей управляемого и обычного приложения.
Синтаксис
 Процедура ПередЗавершениемРаботыСистемы(Отказ = Ложь, ТекстПредупреждения = "") Экспорт
Параметры
  Отказ                - Булево - Возвращаемое значение. Признак отказа от завершения работы 
                         для обработчика события ПередЗавершениемРаботыСистемы, либо программного отказа,
                         либо потребовалась интерактивная обработка. В случае успешного взаимодействия
                         с пользователем, завершение работы будет продолжено.
  ТекстПредупреждения  - Строка - см. ПередЗавершениемРаботыСистемы() в синтакс-помощнике.
Пример вызова
СтандартныеПодсистемыКлиент.ПередЗавершениемРаботыСистемы(Отказ, ТекстПредупреждения)
Доступность
 Тонкий клиент, Толстый клиент

ПередНачаломРаботыСистемы
 Выполнить стандартные действия перед началом работы пользователя
 с областью данных, либо в локальном режиме работы.
 Предназначена для вызова из обработчика ПередНачаломРаботыСистемы модулей управляемого и обычного приложения.
Синтаксис
 Процедура ПередНачаломРаботыСистемы(Знач ОповещениеЗавершения = Неопределено) Экспорт
Параметры
  ОповещениеЗавершения - ОписаниеОповещения - не задается при вызове из обработчика ПередНачаломРаботыСистемы 
                         модулей управляемого и обычного приложения. В других случаях, после запуска будет вызвано
                         оповещение с параметром типа Структура со свойствами:
                         - Отказ - Булево - Ложь, если запуск выполнен успешно, или Истина, если вход в программу не
                         выполнен;
                         - Перезапустить - Булево - если требуется перезапуск программы;
                         - ДополнительныеПараметрыКоманднойСтроки - Строка - для перезапуска.
Пример вызова
СтандартныеПодсистемыКлиент.ПередНачаломРаботыСистемы(ОповещениеЗавершения)
Доступность
 Тонкий клиент, Толстый клиент

ПодключитьКомпонентуИзМакета
1. Для вызова с клиента
 Подключает компоненту, выполненную по технологии Native API и COM асинхронном режиме.
 Компонента должна храниться в макете конфигурации в виде ZIP-архива.
 Для веб-клиента предлагается диалог, подсказывающий пользователю действия по установке.
Синтаксис
 Процедура ПодключитьКомпонентуИзМакета(Оповещение, Идентификатор, ПолноеИмяМакета,
	ПараметрыПодключения = Неопределено) Экспорт
Параметры
  Оповещение - ОписаниеОповещения - Описание оповещения о подключении со следующими параметрами:
      * Результат - Структура - результат подключения компоненты:
          ** Подключено         - Булево - признак подключения.
          ** ПодключаемыйМодуль - AddIn  - экземпляр объекта внешней компоненты;
                                - ФиксированноеСоответствие - экземпляры объектов внешней компоненты, 
                                     указанные в ПараметрыПодключения.ИдентификаторыСозданияОбъектов,
                                     Ключ - Идентификатор, Значение - экземпляр объекта.
          ** ОписаниеОшибки     - Строка - краткое описание ошибки. При отмене пользователем пустая строка.
      * ДополнительныеПараметры - Структура - значение, которое было указано при создании объекта ОписаниеОповещения.
  Идентификатор        - Строка                  - идентификатор объекта внешней компоненты.
  ПолноеИмяМакета      - Строка                  - полное имя макета, используемое как местоположение компоненты.
  ПараметрыПодключения - Структура, Неопределено - см. функцию ПараметрыПодключенияКомпоненты.
Пример вызова
  Оповещение = Новый ОписаниеОповещения("ПодключитьКомпонентуЗавершение", ЭтотОбъект);
  ПараметрыПодключения = ОбщегоНазначенияКлиент.ПараметрыПодключенияКомпоненты();
  ПараметрыПодключения.ТекстПояснения = НСтр("ru = 'Для оформления заявления на выпуск сертификата требуется
                                             |внешняя компонента «Криптография (CryptS)».'");
  ОбщегоНазначенияКлиент.ПодключитьКомпонентуИзМакета(Оповещение, 
      "CryptS",
      "Обработка.ЗаявлениеНаВыпускНовогоКвалифицированногоСертификата.Макет.КомпонентаОбмена",
      ПараметрыПодключения);
  &НаКлиенте
  Процедура ПодключитьКомпонентуЗавершение(Результат, ДополнительныеПараметры) Экспорт
      ПодключаемыйМодуль = Неопределено;
      Если Результат.Подключено Тогда 
          ПодключаемыйМодуль = Результат.ПодключаемыйМодуль;
      Иначе
          Если Не ПустаяСтрока(Результат.ОписаниеОшибки) Тогда
              ПоказатьПредупреждение(, Результат.ОписаниеОшибки);
          КонецЕсли;
      КонецЕсли;
      Если ПодключаемыйМодуль <> Неопределено Тогда 
          // ПодключаемыйМодуль содержит созданный экземпляр подключенной компоненты.
      КонецЕсли;
      ПодключаемыйМодуль = Неопределено;
  КонецПроцедуры
Доступность
 Тонкий клиент, Толстый клиент

2. Для вызова с сервера
 Подключает компоненту, выполненную по технологии Native API и COM.
 Компонента должна храниться в макете конфигурации в виде ZIP-архива.
Синтаксис
 Функция ПодключитьКомпонентуИзМакета(Идентификатор, ПолноеИмяМакета) Экспорт
Параметры
  Идентификатор   - Строка - идентификатор объекта внешней компоненты.
  ПолноеИмяМакета - Строка - полное имя макета конфигурации, хранящего ZIP-архив.
Возвращаемое значение
  AddIn, Неопределено - экземпляр объекта внешней компоненты или Неопределено, если не удалось создать.
Пример вызова
  ПодключаемыйМодуль = ОбщегоНазначения.ПодключитьКомпонентуИзМакета(
      "CNameDecl",
      "ОбщийМакет.КомпонентаСклоненияФИО");
  Если ПодключаемыйМодуль <> Неопределено Тогда 
      // ПодключаемыйМодуль содержит созданный экземпляр подключенной компоненты.
  КонецЕсли;
  ПодключаемыйМодуль = Неопределено;
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПодсистемаСуществует
1. Для вызова с клиента
 Возвращает Истина, если "функциональная" подсистема существует в конфигурации.
 Предназначена для реализации вызова необязательной подсистемы (условного вызова).
 У "функциональной" подсистемы снят флажок "Включать в командный интерфейс".
Синтаксис
 Функция ПодсистемаСуществует(ПолноеИмяПодсистемы) Экспорт
Параметры
  ПолноеИмяПодсистемы - Строка - полное имя объекта метаданных подсистема
                        без слов "Подсистема." и с учетом регистра символов.
                        Например: "СтандартныеПодсистемы.ВариантыОтчетов".
Возвращаемое значение
  Булево - Истина, если существует.
Пример вызова
  Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВариантыОтчетов") Тогда
   МодульВариантыОтчетовКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ВариантыОтчетовКлиент");
   МодульВариантыОтчетовКлиент.<Имя метода>();
  КонецЕсли;
Доступность
 Тонкий клиент, Толстый клиент

2. Для вызова с сервера
 Возвращает Истина, если "функциональная" подсистема существует в конфигурации.
 Предназначена для реализации вызова необязательной подсистемы (условного вызова).
 У "функциональной" подсистемы снят флажок "Включать в командный интерфейс".
Синтаксис
 Функция ПодсистемаСуществует(ПолноеИмяПодсистемы) Экспорт
Параметры
  ПолноеИмяПодсистемы - Строка - полное имя объекта метаданных подсистема
                        без слов "Подсистема." и с учетом регистра символов.
                        Например: "СтандартныеПодсистемы.ВариантыОтчетов".
Возвращаемое значение
  Булево - Истина, если существует.
Пример вызова
  Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВариантыОтчетов") Тогда
   МодульВариантыОтчетов = ОбщегоНазначения.ОбщийМодуль("ВариантыОтчетов");
   МодульВариантыОтчетов.<Имя метода>();
  КонецЕсли;
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПодставитьПараметрыВСтроку
 Подставляет параметры в строку. Максимально возможное число параметров - 9.
 Параметры в строке задаются как %<номер параметра>. Нумерация параметров начинается с единицы.
Синтаксис
 Функция ПодставитьПараметрыВСтроку(Знач ШаблонСтроки,
	Знач Параметр1, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено) Экспорт
Параметры
  ШаблонСтроки  - Строка - шаблон строки с параметрами (вхождениями вида "%<номер параметра>", 
                           например, "%1 пошел в %2");
  Параметр<n>   - Строка - значение подставляемого параметра.
Возвращаемое значение
  Строка   - текстовая строка с подставленными параметрами.
Пример вызова
  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 пошел в %2'"), "Вася", "Зоопарк") = "Вася пошел
  в Зоопарк".
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПодставитьПараметрыВСтрокуИзМассива
 Подставляет параметры в строку. Число параметров в строке не ограничено.
 Параметры в строке задаются как %<номер параметра>. Нумерация параметров
 начинается с единицы.
Синтаксис
 Функция ПодставитьПараметрыВСтрокуИзМассива(Знач ШаблонСтроки, Знач Параметры) Экспорт
Параметры
  ШаблонСтроки  - Строка - шаблон строки с параметрами (вхождениями вида "%<номер параметра>", 
                           например, "%1 пошел в %2");
  Параметры     - Массив - значения параметров в строке ШаблонСтроки.
Возвращаемое значение
   Строка - строка с подставленными значениями параметрами.
Пример вызова
  ЗначенияПараметров = Новый Массив;
  ЗначенияПараметров.Добавить("Вася");
  ЗначенияПараметров.Добавить("Зоопарк");
  Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтрокуИзМассива(НСтр("ru='%1 пошел в %2'"), ЗначенияПараметров);
  - вернет строку "Вася пошел в Зоопарк".
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами
 Предлагает пользователю установить расширение работы с файлами в веб-клиенте.
 Предназначена для использования в начале участков кода, в которых ведется работа с файлами.
Синтаксис
 Процедура ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещенияОЗакрытии, ТекстПредложения = "", 
	ВозможноПродолжениеБезУстановки = Истина) Экспорт
Параметры
   ОписаниеОповещенияОЗакрытии    - ОписаниеОповещения - описание процедуры,
                                    которая будет вызвана после закрытия формы со следующими параметрами:
                                      РасширениеПодключено    - Булево - Истина, если расширение было подключено.
                                      ДополнительныеПараметры - Произвольный - параметры, заданные в
                                                                               ОписаниеОповещенияОЗакрытии.
   ТекстПредложения                - Строка - текст сообщения. Если не указан, то выводится текст по умолчанию.
   ВозможноПродолжениеБезУстановки - Булево - если Истина, будет показана кнопка ПродолжитьБезУстановки,
                                              если Ложь, будет показана кнопка Отмена.
Пример вызова
    Оповещение = Новый ОписаниеОповещения("ПечатьДокументаЗавершение", ЭтотОбъект);
    ТекстСообщения = НСтр("ru = 'Для печати документа необходимо установить расширение работы с файлами.'");
    ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Оповещение, ТекстСообщения);
    Процедура ПечатьДокументаЗавершение(РасширениеПодключено, ДополнительныеПараметры) Экспорт
      Если РасширениеПодключено Тогда
        // код печати документа, рассчитывающий на то, что расширение подключено.
        // ...
      Иначе
        // код печати документа, который работает без подключенного расширения.
        // ...
      КонецЕсли;
Доступность
 Тонкий клиент, Толстый клиент

ПоказатьВопросПользователю
 Показать форму вопроса.
Синтаксис
 Процедура ПоказатьВопросПользователю(ОписаниеОповещенияОЗавершении, ТекстВопроса, Кнопки, ДополнительныеПараметры = Неопределено) Экспорт
Параметры
   ОписаниеОповещенияОЗавершении - ОписаниеОповещения - описание процедуры, которая будет вызвана после закрытия окна
                                                        вопроса со следующими параметрами:
                                                          РезультатВопроса - Структура - структура со свойствами:
                                                            Значение - результат выбора пользователя: значение
                                                                       системного перечисления или значение,
                                                                       связанное с нажатой кнопкой. В случае закрытия
                                                                       диалога по истечении времени - значение
                                                                       Таймаут.
                                                            БольшеНеЗадаватьЭтотВопрос - Булево - результат выбора
                                                                                                  пользователя в
                                                                                                  одноименном флажке.
                                                          ДополнительныеПараметры - Структура 
   ТекстВопроса                  - Строка             - текст задаваемого вопроса. 
   Кнопки                        - РежимДиалогаВопрос, СписокЗначений - может быть задан список значений, в котором.
                                       Значение - содержит значение, связанное с 
                                                  кнопкой и возвращаемое при выборе кнопки. В качестве значения может
                                                  использоваться значение
                                                  перечисления КодВозвратаДиалога, а также другие значения,
                                                  поддерживающее XDTO-сериализацию.
                                       Представление - задает текст кнопки.
   ДополнительныеПараметры       - Структура          - см. СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю.
Возвращаемое значение
   Результат выбора пользователя будет передан в метод, описанный параметром ОписаниеОповещенияОЗавершении. 
Пример вызова
СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(ОписаниеОповещенияОЗавершении, ТекстВопроса, Кнопки, ДополнительныеПараметры)
Доступность
 Тонкий клиент, Толстый клиент

ПоказатьПодтверждениеЗакрытияПроизвольнойФормы
 Задает вопрос о продолжении действия, которое приведет к закрытию формы.
 Для использования в обработчиках события ПередЗакрытием модулей форм.
 Для отображения вопроса в форме, которая  возможно записать в информационную базу, используйте: 
  см. процедуру ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы().
Синтаксис
 Процедура ПоказатьПодтверждениеЗакрытияПроизвольнойФормы(Знач Форма, Отказ, Знач ЗавершениеРаботы, 
	Знач ТекстПредупреждения, Знач ИмяРеквизитаЗакрытьФормуБезПодтверждения, Знач ОписаниеОповещенияЗакрыть = Неопределено) Экспорт
Параметры
  Форма                        - УправляемаяФорма - форма, которая вызывает диалог предупреждения.
  Отказ                        - Булево - возвращаемый параметр, признак отказа от выполняемого действия.
  ЗавершениеРаботы             - Булево - признак завершения работы программы.
  ТекстПредупреждения          - Строка - текст предупреждения, выводимый пользователю.
  ИмяРеквизитаЗакрытьФормуБезПодтверждения - Строка - имя реквизита, содержащего в себе признак того, нужно
                                 выводить предупреждение или нет.
  ОписаниеОповещенияЗакрыть    - ОписаниеОповещения - содержит имя процедуры, вызываемой при нажатии на кнопку да.
Пример вызова
  ТекстПредупреждения = НСтр("ru = 'Закрыть помощник?'");
  ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияПроизвольнойФормы(
      ЭтотОбъект, Отказ, ТекстПредупреждения, "ЗакрытьФормуБезПодтверждения");
Доступность
 Тонкий клиент, Толстый клиент

ПоказатьПодтверждениеЗакрытияФормы
 Задает вопрос о продолжении действия, которое приведет к потере изменений:
 "Данные были изменены. Сохранить изменения?" 
 Для использования в обработчиках события ПередЗакрытием модулей форм объектов,
 которые возможно записать в информационную базу.
 Отображение вопроса зависит свойства модифицированности формы.
 Для отображения вопроса произвольной формы используйте: 
  см. процедуру ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияПроизвольнойФормы().
Синтаксис
 Процедура ПоказатьПодтверждениеЗакрытияФормы(Знач ОповещениеСохранитьИЗакрыть, Отказ, 
	Знач ЗавершениеРаботы, Знач ТекстПредупреждения = "", ТекстПредупрежденияПриЗавершении = Неопределено) Экспорт
Параметры
  ОповещениеСохранитьИЗакрыть  - ОписаниеОповещения - содержит имя процедуры, вызываемой при нажатии на кнопку OK.
  Отказ                        - Булево - возвращаемый параметр, признак отказа от выполняемого действия.
  ЗавершениеРаботы             - Булево - признак того, что форма закрывается в процессе завершения работы приложения.
  ТекстПредупреждения          - Строка - текст предупреждения, выводимый пользователю. По умолчанию, выводится текст
                                          "Данные были изменены. Сохранить изменения?"
  ТекстПредупрежденияПриЗавершении - Строка - возвращаемый параметр с текстом предупреждения, выводимым пользователю 
                                          при завершении приложения. Если параметр указан, то возвращается текст
                                          "Данные были изменены. Все изменения будут потеряны.".
Пример вызова
  &НаКлиенте
  Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
    Оповещение = Новый ОписаниеОповещения("ВыбратьИЗакрыть", ЭтотОбъект);
    ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
  КонецПроцедуры
  &НаКлиенте
  Процедура ВыбратьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
     // записываем данные формы.
     // ...
     Модифицированность = Ложь; // не выводить подтверждение о закрытии формы еще раз.
     Закрыть(<РезультатВыбораВФорме>);
  КонецПроцедуры
Доступность
 Тонкий клиент, Толстый клиент

ПоказатьФормуРедактированияКомментария
 Открывает форму редактирования многострочного комментария.
Синтаксис
 Процедура ПоказатьФормуРедактированияКомментария(Знач МногострочныйТекст, Знач ФормаВладелец, Знач ИмяРеквизита, 
	Знач Заголовок = Неопределено) Экспорт
Параметры
  МногострочныйТекст      - Строка - произвольный текст, который необходимо отредактировать.
  ФормаВладелец           - УправляемаяФорма - форма, в поле которой выполняется ввод комментария.
  ИмяРеквизита            - Строка - имя реквизита формы, в который будет помещен введенный пользователем
                                     комментарий.
  Заголовок               - Строка - текст, который необходимо отобразить в заголовке формы.
                                     По умолчанию: "Комментарий".
Пример вызова
  ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
Доступность
 Тонкий клиент, Толстый клиент

ПоказатьФормуРедактированияМногострочногоТекста
 Открывает форму редактирования произвольного многострочного текста.
Синтаксис
 Процедура ПоказатьФормуРедактированияМногострочногоТекста(Знач ОповещениеОЗакрытии, 
	Знач МногострочныйТекст, Знач Заголовок = Неопределено) Экспорт
Параметры
  ОповещениеОЗакрытии     - ОписаниеОповещения - содержит описание процедуры, которая будет вызвана 
                            после закрытия формы ввода текста с теми же параметрами, что и для метода
                            ПоказатьВводСтроки.
  МногострочныйТекст      - Строка - произвольный текст, который необходимо отредактировать;
  Заголовок               - Строка - текст, который необходимо отобразить в заголовке формы.
Пример вызова
   Оповещение = Новый ОписаниеОповещения("КомментарийЗавершениеВвода", ЭтотОбъект);
   ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(Оповещение, Элемент.ТекстРедактирования);
   &НаКлиенте
   Процедура КомментарийЗавершениеВвода(Знач ВведенныйТекст, Знач ДополнительныеПараметры) Экспорт
      Если ВведенныйТекст = Неопределено Тогда
     Возврат;
    КонецЕсли; 
    Объект.МногострочныйКомментарий = ВведенныйТекст;
    Модифицированность = Истина;
   КонецПроцедуры
Доступность
 Тонкий клиент, Толстый клиент

ПолучитьВерсииИнтерфейса
 Возвращает номера версий программных интерфейсов удаленной системы, доступной через веб-сервис.
 Позволяет обеспечивать полную обратную совместимость при изменениях в программных интерфейсах
 с помощью их явного версионирования. Например, если программный интерфейс выше определенной версии,
 то только в этом случае допустимо вызывать у него новую функцию.
 В целях экономии трафика при интенсивном взаимодействии между вызывающей и вызываемой сторонами 
 сведения о версиях кэшируются на одни сутки. Если для целей отладки требуется сбросить кэш раньше этого времени,
 следует удалить соответствующие записи из регистра сведений КэшПрограммныхИнтерфейсов.
Синтаксис
 Функция ПолучитьВерсииИнтерфейса(Знач Адрес, Знач Пользователь, Знач Пароль = Неопределено, Знач Интерфейс = Неопределено) Экспорт
Параметры
  Адрес        - Строка - адрес веб-сервиса версионирования интерфейсов InterfaceVersion;
  Пользователь - Строка - имя пользователя веб-сервиса;
  Пароль       - Строка - пароль пользователя веб-сервиса;
  Интерфейс    - Строка - имя запрашиваемого программного интерфейса, например, "СервисПередачиФайлов".
Возвращаемое значение
   ФиксированныйМассив - массив строк, каждая строка является представлением номера версии интерфейса. 
                         Например, "1.0.2.1".
Пример вызова
   Версии = ПолучитьВерсииИнтерфейса("http://vsrvx/sm", "ivanov",, "СервисПередачиФайлов");
    Также для обратной совместимости поддерживается устаревший вариант вызова:
   ПараметрыПодключения = Новый Структура;
   ПараметрыПодключения.Вставить("URL", "http://vsrvx/sm");
   ПараметрыПодключения.Вставить("UserName", "ivanov");
   ПараметрыПодключения.Вставить("Password", "");
   Версии = ПолучитьВерсииИнтерфейса(ПараметрыПодключения, "СервисПередачиФайлов");
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПолучитьВерсииИнтерфейсаЧерезВнешнееСоединение
 Возвращает номера версий программных интерфейсов удаленной системы, подключенной через внешнее соединение.
 Позволяет обеспечивать полную обратную совместимость при изменениях в программных интерфейсах
 с помощью их явного версионирования. Например, если программный интерфейс выше определенной версии,
 то только в этом случае допустимо вызывать у него новую функцию.
Синтаксис
 Функция ПолучитьВерсииИнтерфейсаЧерезВнешнееСоединение(ВнешнееСоединение, Знач ИмяИнтерфейса) Экспорт
Параметры
   ВнешнееСоединение - COMОбъект - внешнее соединение, которое используется для работы с удаленной системой.
   ИмяИнтерфейса     - Строка    - имя запрашиваемого программного интерфейса, например, "СервисПередачиФайлов".
Возвращаемое значение
   ФиксированныйМассив - массив строк, каждая строка является представлением номера версии интерфейса. 
                         Например, "1.0.2.1".
Пример вызова
  Версии = ОбщегоНазначения.ПолучитьВерсииИнтерфейсаЧерезВнешнееСоединение(ВнешнееСоединение, "СервисПередачиФайлов");
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПолучитьИдентификаторСтрокиДереваПоЗначениюПоля
 Получает идентификатор (метод ПолучитьИдентификатор()) строки дерева значений для заданного значения поля строки
 дерева.
 Используется для позиционирования курсора в иерархических списках.
Синтаксис
 Процедура ПолучитьИдентификаторСтрокиДереваПоЗначениюПоля(ИмяПоля, ИдентификаторСтроки, КоллекцияЭлементовДерева, КлючСтроки, ПрекратитьПоиск) Экспорт
Параметры
  ИмяПоля - Строка - Имя колонки дерева значений, по которому выполняется поиск.
  ИдентификаторСтроки - Число - полученный в результате поиска идентификатор строки дерева значений.
  КоллекцияЭлементовДерева - ДанныеФормыКоллекцияЭлементовДерева - коллекция, в которой следует выполнять поиск.
  КлючСтроки - Произвольный - искомое значение поля.
  ПрекратитьПоиск - Булево - признак прекращения поиска.
Пример вызова
ОбщегоНазначенияКлиентСервер.ПолучитьИдентификаторСтрокиДереваПоЗначениюПоля(ИмяПоля, ИдентификаторСтроки, КоллекцияЭлементовДерева, КлючСтроки, ПрекратитьПоиск)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПолучитьИмяСРасширением
 Возвращает имя файла с расширением.
 Если расширение пустое, тогда точка не добавляется.
Синтаксис
 Функция ПолучитьИмяСРасширением(ИмяБезРасширения, Расширение) Экспорт
Параметры
  ИмяБезРасширения - Строка - имя файла без расширения.
  Расширение       - Строка - расширение.
Возвращаемое значение
  Строка - имя файла с расширением.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ПолучитьИмяСРасширением(ИмяБезРасширения, Расширение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПолучитьНедопустимыеСимволыВИмениФайла
 Возвращает строку недопустимых символов.
 Согласно http://en.wikipedia.org/wiki/Filename - в разделе "Reserved characters and words".
Синтаксис
 Функция ПолучитьНедопустимыеСимволыВИмениФайла() Экспорт
Возвращаемое значение
   Строка - строка недопустимых символов.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ПолучитьНедопустимыеСимволыВИмениФайла()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПолучитьПараметрыПодключенияИзСтрокиСоединенияИнформационнойБазы
 Извлекает из строки соединения с информационной базой параметры подключения
 и передает параметры в структуру для установки внешнего соединения.
Синтаксис
 Функция ПолучитьПараметрыПодключенияИзСтрокиСоединенияИнформационнойБазы(Знач СтрокаСоединения) Экспорт
Параметры
  СтрокаСоединения - Строка - строка соединения ИБ.
Возвращаемое значение
  Структура - см. СтруктураПараметровДляУстановкиВнешнегоСоединения.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ПолучитьПараметрыПодключенияИзСтрокиСоединенияИнформационнойБазы(СтрокаСоединения)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПолучитьПолноеИмяФайла
 Составляет полное имя файла из имени каталога и имени файла.
Синтаксис
 Функция ПолучитьПолноеИмяФайла(Знач ИмяКаталога, Знач ИмяФайла) Экспорт
Параметры
  ИмяКаталога  - Строка - путь к каталогу файла на диске.
  ИмяФайла     - Строка - имя файла, без имени каталога.
Возвращаемое значение
   Строка - полное имя файла с учетом каталога.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла(ИмяКаталога, ИмяФайла)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПолучитьРасширениеИмениФайла
 Выделяет из имени файла его расширение (набор символов после последней точки).
Синтаксис
 Функция ПолучитьРасширениеИмениФайла(Знач ИмяФайла) Экспорт
Параметры
  ИмяФайла - Строка - имя файла с именем каталога или без.
Возвращаемое значение
   Строка - расширение файла.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПолучитьРегламентноеЗадание
 Возвращает РегламентноеЗадание из информационной базы.
 Не предназначена для использования в модели сервиса.
Синтаксис
 Функция ПолучитьРегламентноеЗадание(Знач Идентификатор) Экспорт
Параметры
  Идентификатор - ОбъектМетаданных - объект метаданных регламентного задания для поиска
                  предопределенного регламентного задания.
                - УникальныйИдентификатор - идентификатор регламентного задания.
                - Строка - строка уникального идентификатора регламентного задания.
                - РегламентноеЗадание - регламентное задание из которого нужно получить
                  уникальный идентификатор для получения свежей копии регламентного задания.
Возвращаемое значение
  РегламентноеЗадание - прочитано из базы данных.
Пример вызова
Результат = РегламентныеЗаданияСервер.ПолучитьРегламентноеЗадание(Идентификатор)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПолучитьРеквизитФормыПоПути
 Получает значение реквизита формы.
Синтаксис
 Функция ПолучитьРеквизитФормыПоПути(Форма, ПутьРеквизита) Экспорт
Параметры
  Форма - УправляемаяФорма - форма.
  ПутьРеквизита - Строка - путь к данным реквизита формы, например: "Объект.МесяцНачисления".
Возвращаемое значение
  Произвольный - реквизит формы.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ПутьРеквизита)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПредлагатьСоздаватьРезервныеКопии
 Проверяет, возможно ли выполнить резервное копирование в пользовательском режиме.
Синтаксис
 Функция ПредлагатьСоздаватьРезервныеКопии() Экспорт
Возвращаемое значение
  Булево - Истина, если предлагать.
Пример вызова
Результат = ОбщегоНазначенияКлиент.ПредлагатьСоздаватьРезервныеКопии()
Доступность
 Тонкий клиент, Толстый клиент

ПредлагатьУстановкуРасширенияРаботыСФайлами
 Возвращает пользовательскую настройку "Предлагать установку расширения работы с файлами".
Синтаксис
 Функция ПредлагатьУстановкуРасширенияРаботыСФайлами() Экспорт
Возвращаемое значение
  Булево - Истина, если предлагать.
Пример вызова
Результат = ОбщегоНазначенияКлиент.ПредлагатьУстановкуРасширенияРаботыСФайлами()
Доступность
 Тонкий клиент, Толстый клиент

ПредложитьПользователюСоздатьРезервнуюКопию
 Предлагает пользователю создать резервную копию.
Синтаксис
 Процедура ПредложитьПользователюСоздатьРезервнуюКопию() Экспорт
Пример вызова
ОбщегоНазначенияКлиент.ПредложитьПользователюСоздатьРезервнуюКопию()
Доступность
 Тонкий клиент, Толстый клиент

ПредметСтрокой
 Возвращает описание предмета в виде текстовой строки.
Синтаксис
 Функция ПредметСтрокой(СсылкаНаПредмет) Экспорт
Параметры
  СсылкаНаПредмет - ЛюбаяСсылка - объект ссылочного типа.
Возвращаемое значение
   Строка - представление предмета.
Пример вызова
Результат = ОбщегоНазначения.ПредметСтрокой(СсылкаНаПредмет)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПредопределенныйЭлемент
 Получает ссылку предопределенного элемента по его полному имени.
 Предопределенные элементы могут содержаться только в следующих объектах:
   - Справочники;
   - Планы видов характеристик;
   - Планы счетов;
   - Планы видов расчета.
 После изменения состава предопределенных следует выполнить метод
 ОбновитьПовторноИспользуемыеЗначения(), который сбросит кэш ПовтИсп в текущем сеансе.
Синтаксис
 Функция ПредопределенныйЭлемент(ПолноеИмяПредопределенного) Экспорт
Параметры
   ПолноеИмяПредопределенного - Строка - Полный путь к предопределенному элементу, включая его имя.
     Формат аналогичен функции глобального контекста ПредопределенноеЗначение().
     Например:
       "Справочник.ВидыКонтактнойИнформации.EmailПользователя"
       "ПланСчетов.Хозрасчетный.Материалы"
       "ПланВидовРасчета.Начисления.ОплатаПоОкладу".
Возвращаемое значение
   ЛюбаяСсылка - ссылка на предопределенный элемент.
   Неопределено - если предопределенный есть в метаданных, но не создан в ИБ.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент(ПолноеИмяПредопределенного)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПредставлениеЛокальнойДатыСоСмещением
 Преобразует локальную дату к формату "YYYY-MM-DDThh:mm:ssTZD" согласно ISO 8601.
Синтаксис
 Функция ПредставлениеЛокальнойДатыСоСмещением(ЛокальнаяДата) Экспорт
Параметры
  ЛокальнаяДата - Дата - дата в часовом поясе сеанса.
Возвращаемое значение
   Строка - представление даты.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ПредставлениеЛокальнойДатыСоСмещением(ЛокальнаяДата)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПредупреждениеПриЗавершенииРаботы
 Возвращает новую структуру параметров для вывода предупреждения перед завершением работы программы.
 Для использования в ОбщегоНазначенияКлиентПереопределяемый.ПередЗавершениемРаботыСистемы.
Синтаксис
 Функция ПредупреждениеПриЗавершенииРаботы() Экспорт
Возвращаемое значение
  Структура - со свойствами:
    ТекстПредупреждения  - Строка - текст, выводимый в окне веб-браузера (или тонкого клиента) при завершении работы.
                                    Например, "Имеются редактируемые файлы, которые не помещены в программу".
                                    Остальные параметры определяют внешний вид формы предупреждений,
                                    открываемой после подтверждения в окне веб-браузера (или тонкого клиента).
    ТекстФлажка          - Строка - если задан, то в форме предупреждений выводится флажок с указанным текстом. 
                                    Например, "Завершить редактирование файлов (5)".
    ПоясняющийТекст      - Строка - текст, выводимый в форме сверху управляющего элемента (флажок или гиперссылка).
                                    Например, "Редактируемые файлы, не помещенные в программу".
    ТекстГиперссылки     - Строка - если задан, то выводится гиперссылка с указанным текстом.
                                    Например, "Редактируемые файлы (5)".
    РасширеннаяПодсказка - Строка - текст подсказки, выводимый по кнопке справа от управляющего элемента (флажок или
                                    гиперссылка). Например, "Нажмите для перехода к списку файлов, 
                                    открытых для редактирования".
    Приоритет            - Число  - относительный порядок в списке предупреждений на форме (чем больше, тем выше).
    ВывестиОдноПредупреждение - Булево - если Истина, то в списке предупреждений выводится только одно это
                                         предупреждение. Т.е. такое предупреждение не совместимо с любыми другими.
    ДействиеПриУстановленномФлажке - Структура со свойствами:
      * Форма          - Строка    - если пользователь установил флажок, то следует открыть указанную форму.
                                     Например, "Обработка.Файлы.РедактируемыеФайлы".
      * ПараметрыФормы - Структура - произвольная структура параметров для открытия формы. 
    ДействиеПриНажатииГиперссылки - Структура со свойствами:
      * Форма          - Строка    - путь к форме, которая должна открываться по нажатию на гиперссылку.
                                     Например, "Обработка.Файлы.РедактируемыеФайлы".
      * ПараметрыФормы - Структура - произвольная структура параметров для открываемой формы.
      * ПрикладнаяФормаПредупреждения - Строка - путь к форме, которая должна открываться сразу
                                        вместо универсальной формы в случае, когда в списке 
                                        предупреждений оказывается только одно данное предупреждение.
                                        Например, "Обработка.Файлы.РедактируемыеФайлы".
      * ПараметрыПрикладнойФормыПредупреждения - Структура - произвольная структура
                                                 параметров для вышеописанной формы.
      * РежимОткрытияОкна - РежимОткрытияОкнаФормы - режим открытия форм Форма или ПрикладнаяФормаПредупреждения.
Пример вызова
Результат = СтандартныеПодсистемыКлиент.ПредупреждениеПриЗавершенииРаботы()
Доступность
 Тонкий клиент, Толстый клиент

ПреобразоватьЧислоВАрабскуюНотацию
 Выполняет преобразование римского числа в арабское.
Синтаксис
 Функция ПреобразоватьЧислоВАрабскуюНотацию(РимскоеЧисло, ИспользоватьКириллицу = Истина) Экспорт
Параметры
  РимскоеЧисло - Строка - число, записанное римскими цифрами;
  ИспользоватьКириллицу - Булево - использовать в качестве арабских цифр кириллицу или латиницу.
Возвращаемое значение
  Число - преобразованное число.
Пример вызова
  СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВАрабскуюНотацию("ХVII") = 17.
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПреобразоватьЧислоВРимскуюНотацию
 Выполняет преобразование арабского числа в римское.
Синтаксис
 Функция ПреобразоватьЧислоВРимскуюНотацию(АрабскоеЧисло, ИспользоватьКириллицу = Истина) Экспорт
Параметры
  АрабскоеЧисло - Число - число, целое, от 0 до 999;
  ИспользоватьКириллицу - Булево - использовать в качестве арабских цифр кириллицу или латиницу.
Возвращаемое значение
  Строка - число в римской нотации.
Пример вызова
  СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВРимскуюНотацию(17) = "ХVII".
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПриНачалеВыполненияРегламентногоЗадания
 Выполняет действия перед продолжением выполнения обработчика регламентного задания.
 Например, проверяет возможность выполнения обработчика регламентного задания.
 Если администратор не заблокировал выполнение регламентных заданий до
 окончания обновления ИБ, тогда требуется прекратить выполнение обработчика.
Синтаксис
 Процедура ПриНачалеВыполненияРегламентногоЗадания(РегламентноеЗадание = Неопределено) Экспорт
Параметры
  РегламентноеЗадание - ОбъектМетаданных.РегламентноеЗадание - регламентное задание,
    из которого был вызван данный метод. Необходимо передавать для проверки доступности
    по функциональным опциям.
Пример вызова
ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(РегламентноеЗадание)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПриНачалеРаботыСистемы
 Выполнить стандартные действия при начале работы пользователя
 с областью данных, либо в локальном режиме работы.
 Предназначена для вызова из обработчика ПриНачалеРаботыСистемы модулей управляемого и обычного приложения.
Синтаксис
 Процедура ПриНачалеРаботыСистемы(Знач ОповещениеЗавершения = Неопределено, НепрерывноеВыполнение = Истина) Экспорт
Параметры
  ОповещениеЗавершения - ОписаниеОповещения - не задается при вызове из обработчика ПриНачалеРаботыСистемы 
                         модулей управляемого и обычного приложения. В других случаях, после запуска будет вызвано
                         оповещение с параметром типа Структура со свойствами:
                         - Отказ - Булево - Ложь, если запуск выполнен успешно, или Истина, если вход в программу не
                         выполнен;
                         - Перезапустить - Булево - если требуется перезапуск программы;
                         - ДополнительныеПараметрыКоманднойСтроки - Строка - для перезапуска.
  НепрерывноеВыполнение - Булево - Только для внутреннего использования.
                          Для перехода из обработчика ПередНачаломРаботыСистемы
                          выполненного в режиме интерактивной обработки.
Пример вызова
СтандартныеПодсистемыКлиент.ПриНачалеРаботыСистемы(ОповещениеЗавершения, НепрерывноеВыполнение)
Доступность
 Тонкий клиент, Толстый клиент

Проверить
 Вызывает исключение с текстом Сообщение, если Условие не равно Истина.
 Применяется для самодиагностики кода.
Синтаксис
 Процедура Проверить(Знач Условие, Знач Сообщение = "", Знач КонтекстПроверки = "") Экспорт
Параметры
   Условие                - Булево - если не равно Истина, то вызывается исключение.
   КонтекстПроверки       - Строка - например, имя процедуры или функции, в которой выполняется проверка.
   Сообщение              - Строка - текст сообщения. Если не задан, то исключение вызывается с сообщением по
                                     умолчанию.
Пример вызова
ОбщегоНазначенияКлиентСервер.Проверить(Условие, Сообщение, КонтекстПроверки)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПроверитьВыводТабличногоДокумента
 Проверяет, умещаются ли переданные табличные документы на страницу при печати.
Синтаксис
 Функция ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти, РезультатПриОшибке = Истина) Экспорт
Параметры
  ТабДокумент        - ТабличныйДокумент - табличный документ.
  ВыводимыеОбласти   - Массив, ТабличныйДокумент - массив из проверяемых таблиц или табличный документ. 
  РезультатПриОшибке - Булево - какой возвращать результат при возникновении ошибки.
Возвращаемое значение
   Булево   - умещаются или нет переданные документы.
Пример вызова
Результат = ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти, РезультатПриОшибке)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПроверитьПараметр
 Вызывает исключение, если тип значения параметра ИмяПараметра процедуры или функции ИмяПроцедурыИлиФункции
 отличается от ожидаемого.
 Для быстрой диагностики типов параметров, передаваемых в процедуры и функции программного интерфейса.
Синтаксис
 Процедура ПроверитьПараметр(Знач ИмяПроцедурыИлиФункции, Знач ИмяПараметра, Знач ЗначениеПараметра, 
	Знач ОжидаемыеТипы, Знач ОжидаемыеТипыСвойств = Неопределено) Экспорт
Параметры
   ИмяПроцедурыИлиФункции - Строка             - имя процедуры или функции, параметр которой проверяется.
   ИмяПараметра           - Строка             - имя проверяемого параметра процедуры или функции.
   ЗначениеПараметра      - Произвольный       - фактическое значение параметра.
   ОжидаемыеТипы  - ОписаниеТипов, Тип, Массив - тип(ы) параметра процедуры или функции.
   ОжидаемыеТипыСвойств   - Структура          - если ожидаемый тип - структура, то 
                                                 в этом параметре можно указать типы ее свойств.
Пример вызова
ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(ИмяПроцедурыИлиФункции, ИмяПараметра, ЗначениеПараметра, ОжидаемыеТипы, ОжидаемыеТипыСвойств)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПроверитьПараметрыАдминистрирования
 Проверяет корректность параметров администрирования.
Синтаксис
 Процедура ПроверитьПараметрыАдминистрирования(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено,
	ПроверятьПараметрыАдминистрированияКластера = Истина,
	ПроверятьПараметрыАдминистрированияИнформационнойБазы = Истина) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
  ПроверятьПараметрыАдминистрированияКластера - Булево - флаг необходимости проверки параметров администрирования кластера,
  ПроверятьПараметрыАдминистрированияИнформационнойБазы - Булево - флаг необходимости проверки параметров
                                                                   администрирования кластера.
Пример вызова
АдминистрированиеКластераКлиентСервер.ПроверитьПараметрыАдминистрирования(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ, ПроверятьПараметрыАдминистрированияКластера, ПроверятьПараметрыАдминистрированияИнформационнойБазы)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПроверитьПроведенностьДокументов
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ПроверитьПроведенностьДокументов.
Синтаксис
 Функция ПроверитьПроведенностьДокументов(Знач Документы) Экспорт
Пример вызова
Результат = ОбщегоНазначенияВызовСервера.ПроверитьПроведенностьДокументов(Документы)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Проверяет статус проведения переданных документов и возвращает
 те из них, которые не проведены.
Синтаксис
 Функция ПроверитьПроведенностьДокументов(Знач Документы) Экспорт
Параметры
  Документы - Массив - документы, статус проведения которых необходимо проверить.
Возвращаемое значение
  Массив - непроведенные документы.
Пример вызова
Результат = ОбщегоНазначения.ПроверитьПроведенностьДокументов(Документы)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПроверитьРасширениеРаботыСФайламиПодключено
 Предлагает пользователю подключить расширение работы с файлами в веб-клиенте,
 и в случае отказа выдает предупреждение о невозможности продолжения операции.
 Предназначена для использования в начале участков кода, в которых ведется работа с файлами
 только при подключенном расширении.
Синтаксис
 Процедура ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещенияОЗакрытии, Знач ТекстПредложения = "", 
	Знач ТекстПредупреждения = "") Экспорт
Параметры
  ОписаниеОповещенияОЗакрытии - ОписаниеОповещения - описание процедуры, которая будет вызвана, если расширение
                                                     подключено со следующими параметрами:
                                                      Результат               - Булево - всегда Истина.
                                                      ДополнительныеПараметры - Неопределено
  ТекстПредложения    - Строка - текст с предложением подключить расширение работы с файлами. 
                                 Если не указан, то выводится текст по умолчанию.
  ТекстПредупреждения - Строка - текст предупреждения о невозможности продолжения операции. 
                                 Если не указан, то выводится текст по умолчанию.
Возвращаемое значение
  Булево - Истина, если расширение подключено.
Пример вызова
    Оповещение = Новый ОписаниеОповещения("ПечатьДокументаЗавершение", ЭтотОбъект);
    ТекстСообщения = НСтр("ru = 'Для печати документа необходимо установить расширение работы с файлами.'");
    ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(Оповещение, ТекстСообщения);
    Процедура ПечатьДокументаЗавершение(Результат, ДополнительныеПараметры) Экспорт
        // код печати документа, рассчитывающий на то, что расширение подключено.
        // ...
Доступность
 Тонкий клиент, Толстый клиент

ПроверитьТипПараметраКоманды
 Проверяет, что в параметре команды Параметр передан объект ожидаемого типа ОжидаемыйТип.
 В противном случае, выдает стандартное сообщение и возвращает Ложь.
 Такая ситуация возможна, например, если в списке выделена строка группировки.
 Для использования в командах, работающих с элементами динамических списков в формах.
Синтаксис
 Функция ПроверитьТипПараметраКоманды(Знач Параметр, Знач ОжидаемыйТип) Экспорт
Параметры
  Параметр     - Массив, ЛюбаяСсылка - параметр команды.
  ОжидаемыйТип - Тип                 - ожидаемый тип параметра.
Возвращаемое значение
  Булево - Истина, если параметр ожидаемого типа.
Пример вызова
   Если НЕ ПроверитьТипПараметраКоманды(Элементы.Список.ВыделенныеСтроки, 
      Тип("ЗадачаСсылка.ЗадачаИсполнителя")) Тогда
      Возврат;
   КонецЕсли;
   ...
Доступность
 Тонкий клиент, Толстый клиент

ПровестиДокументы
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ПровестиДокументы.
Синтаксис
 Функция ПровестиДокументы(Документы) Экспорт
Пример вызова
Результат = ОбщегоНазначенияВызовСервера.ПровестиДокументы(Документы)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Выполняет попытку проведения документов.
Синтаксис
 Функция ПровестиДокументы(Документы) Экспорт
Параметры
   Документы - Массив - документы, которые необходимо провести.
Возвращаемое значение
   Массив - массив структур со свойствами:
      * Ссылка         - ДокументСсылка - документ, который не удалось провести.
      * ОписаниеОшибки - Строка         - текст описания ошибки при проведении.
Пример вызова
Результат = ОбщегоНазначения.ПровестиДокументы(Документы)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПропуститьПредупреждениеПередЗавершениемРаботыСистемы
 Отключает выдачу предупреждения пользователю при завершении работы программы.
Синтаксис
 Процедура ПропуститьПредупреждениеПередЗавершениемРаботыСистемы() Экспорт
Пример вызова
СтандартныеПодсистемыКлиент.ПропуститьПредупреждениеПередЗавершениемРаботыСистемы()
Доступность
 Тонкий клиент, Толстый клиент

ПрофильБезопасности
 Возвращает свойства профиля безопасности.
Синтаксис
 Функция ПрофильБезопасности(Знач ПараметрыАдминистрированияКластера, Знач ИмяПрофиля) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ИмяПрофиля - Строка - имя профиля безопасности.
Возвращаемое значение
   Структура - см. АдминистрированиеКластераКлиентСервер.СвойстваПрофиляБезопасности.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.ПрофильБезопасности(ПараметрыАдминистрированияКластера, ИмяПрофиля)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПрофильБезопасностиБезопасногоРежимаИнформационнойБазы
 Возвращает имя профиля безопасности, назначенного для информационной базы в качестве профиля безопасности
  безопасного режима.
Синтаксис
 Функция ПрофильБезопасностиБезопасногоРежимаИнформационнойБазы(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
Возвращаемое значение
  Строка - имя профиля безопасности, назначенного для информационной базы в качестве профиля
  безопасности безопасного режима. Если для информационной базы не назначен профиль безопасности - возвращается пустая
  строка.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.ПрофильБезопасностиБезопасногоРежимаИнформационнойБазы(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение
ПрофильБезопасностиИнформационнойБазы
 Возвращает имя профиля безопасности, назначенного для информационной базы.
Синтаксис
 Функция ПрофильБезопасностиИнформационнойБазы(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
Возвращаемое значение
  Строка - имя профиля безопасности, назначенного для информационной базы. Если
  для информационной базы не назначен профиль безопасности - возвращается пустая строка.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.ПрофильБезопасностиИнформационнойБазы(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПрофильБезопасностиСуществует
 Проверяет существование в кластере серверов профиля безопасности.
Синтаксис
 Функция ПрофильБезопасностиСуществует(Знач ПараметрыАдминистрированияКластера, Знач ИмяПрофиля) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ИмяПрофиля - Строка - имя профиля безопасности, существование которого проверяется.
Возвращаемое значение
   Булево - Истина если профиль с указанным именем существует, Ложь - если не существует.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.ПрофильБезопасностиСуществует(ПараметрыАдминистрированияКластера, ИмяПрофиля)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПрочитатьXMLВТаблицу
 Преобразует текст указанного формата XML в таблицу значений,
 при этом колонки таблицы формируются на основе описания в XML.
 Схема XML:
 <?xml version="1.0" encoding="utf-8"?>
  <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:element name="Items">
    <xs:complexType>
     <xs:sequence>
      <xs:element maxOccurs="unbounded" name="Item">
       <xs:complexType>
        <xs:attribute name="Code" type="xs:integer" use="required" />
        <xs:attribute name="Name" type="xs:string" use="required" />
        <xs:attribute name="Socr" type="xs:string" use="required" />
        <xs:attribute name="Index" type="xs:string" use="required" />
       </xs:complexType>
      </xs:element>
     </xs:sequence>
    <xs:attribute name="Description" type="xs:string" use="required" />
    <xs:attribute name="Columns" type="xs:string" use="required" />
   </xs:complexType>
  </xs:element>
 </xs:schema>
Синтаксис
 Функция ПрочитатьXMLВТаблицу(Знач XML) Экспорт
Параметры
  XML - Строка, ЧтениеXML - текст в формате XML или ЧтениеXML.
Возвращаемое значение
  Структура - со свойствами:
   * ИмяТаблицы - Строка          - имя таблицы.
   * Данные     - ТаблицаЗначений - преобразованная из XML таблица.
Пример вызова
   КлассификаторТаблица = ПрочитатьXMLВТаблицу(
     Обработки.ЗагрузкаКурсовВалют.ПолучитьМакет("ОбщероссийскийКлассификаторВалют").ПолучитьТекст()).Данные;
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПрочитатьДанныеИзБезопасногоХранилища
 Возвращает данные из безопасного хранилища.
 Вызывающий код должен самостоятельно устанавливать привилегированный режим.
 Безопасное хранилище недоступно для чтения пользователям (кроме администраторов),
 а доступно только коду, который делает обращения только к своей части данных и
 в том контексте, который предполагает чтение или запись конфиденциальных данных.
Синтаксис
 Функция ПрочитатьДанныеИзБезопасногоХранилища(Владелец, Ключи = "Пароль", ОбщиеДанные = Неопределено) Экспорт
Параметры
  Владелец    - ПланОбменаСсылка, СправочникСсылка, Строка - ссылка на объект информационной базы,
                  представляющий объект-владелец сохраняемого пароля или строка до 128 символов.
  Ключи       - Строка - Содержит список имен сохраненных данных, указанных через запятую.
  ОбщиеДанные - Булево - Истина, если требуется в модели сервиса получить данные из общих данных в разделенном режиме.
Возвращаемое значение
  Произвольный, Структура, Неопределенно - Данные из безопасного хранилища. Если указан один ключ,
                            то возвращается его значение, иначе структура.
                            Если данные отсутствуют - Неопределенно.
Пример вызова
 Процедура ПриЧтенииНаСервере(ТекущийОбъект)
  Если ТекущийПользовательМожетИзменятьПароль Тогда
   УстановитьПривилегированныйРежим(Истина);
   Логин  = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ТекущийОбъект.Ссылка, "Логин");
   Пароль = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ТекущийОбъект.Ссылка);
   УстановитьПривилегированныйРежим(Ложь);
  Иначе
   Элементы.ГруппаЛогинИПароль.Видимость = Ложь;
  КонецЕсли;
 КонецПроцедуры
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПрочитатьПрогресс
 Считывает информацию о ходе выполнения длительной операции, 
 записанную процедурой ДлительныеОперации.СообщитьПрогресс.
Синтаксис
 Функция ПрочитатьПрогресс(Знач ИдентификаторЗадания) Экспорт
Параметры
   ИдентификаторЗадания - УникальныйИдентификатор - идентификатор фонового задания.
Возвращаемое значение
   Неопределено, Структура - информация о ходе выполнения фонового задания, записанная процедурой СообщитьПрогресс:
    * Процент                 - Число  - Необязательный. Процент выполнения.
    * Текст                   - Строка - Необязательный. Информация о текущей операции.
    * ДополнительныеПараметры - Произвольный - Необязательный. Любая дополнительная информация.
Пример вызова
Результат = ДлительныеОперации.ПрочитатьПрогресс(ИдентификаторЗадания)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПустойБуферОбмена
 Проверяет наличие сохраненных данных во внутренний буфере обмена.
Синтаксис
 Функция ПустойБуферОбмена(Источник = Неопределено) Экспорт
Параметры
  Источник - Строка - Если передан, то проверяется наличие данных
             в внутреннем буфере обмена с этим ключем.
             По умолчанию - Неопределено.
Возвращаемое значение
  Булево - Истина, если пустой.
Пример вызова
Результат = ОбщегоНазначения.ПустойБуферОбмена(Источник)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ПутьККлиентуСервераАдминистрирования
 Возвращает путь к консольному клиенту сервера администрирования.
Синтаксис
 Функция ПутьККлиентуСервераАдминистрирования(Знач ПараметрыАдминистрированияКластера) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера.
Возвращаемое значение
  Строка - путь к консольному клиенту сервера администрирования.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.ПутьККлиентуСервераАдминистрирования(ПараметрыАдминистрированияКластера)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ПутьКТабличнойЧасти
 Формирует путь к заданной строке НомерСтроки и колонке ИмяРеквизита 
 табличной части ИмяТабличнойЧасти для выдачи сообщений в форме.
 Для совместного использования с процедурой СообщитьПользователю
 (для передачи в параметры Поле или ПутьКДанным). 
Синтаксис
 Функция ПутьКТабличнойЧасти(Знач ИмяТабличнойЧасти, Знач НомерСтроки, 
	Знач ИмяРеквизита) Экспорт
Параметры
  ИмяТабличнойЧасти - Строка - имя табличной части.
  НомерСтроки       - Число - номер строки табличной части.
  ИмяРеквизита      - Строка - имя реквизита.
Возвращаемое значение
  Строка - путь к ячейке таблицы.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, НомерСтроки, ИмяРеквизита)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

РаботаСВнешнимиРесурсамиЗаблокирована
 Возвращает признак установленной блокировки работы с внешними ресурсами.
Синтаксис
 Функция РаботаСВнешнимиРесурсамиЗаблокирована() Экспорт
Возвращаемое значение
   Булево   - Истина, если работа с внешними ресурсами заблокирована.
Пример вызова
Результат = РегламентныеЗаданияСервер.РаботаСВнешнимиРесурсамиЗаблокирована()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

РабочаяДатаПользователя
 Возвращает значение настройки рабочей даты для пользователя.
Синтаксис
 Функция РабочаяДатаПользователя(ИмяПользователя = Неопределено) Экспорт
Параметры
 ИмяПользователя - Строка - Имя пользователя, для которого запрашивается рабочая дата.
  Если не задано, то устанавливается для текущего пользователя.
Возвращаемое значение
 Дата - Значение настройки рабочей даты пользователя или пустая дата, если настройка не задана.
Пример вызова
Результат = ОбщегоНазначения.РабочаяДатаПользователя(ИмяПользователя)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

РазблокироватьРаботуСВнешнимиРесурсами
 Разрешает работу с внешними ресурсами.
Синтаксис
 Процедура РазблокироватьРаботуСВнешнимиРесурсами() Экспорт
Пример вызова
РегламентныеЗаданияСервер.РазблокироватьРаботуСВнешнимиРесурсами()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

РазделениеВключено
 Возвращает признак работы в режиме разделения данных по областям
 (технически это признак условного разделения).
 Возвращает Ложь, если конфигурация не может работать в режиме разделения данных
 (не содержит общих реквизитов, предназначенных для разделения данных).
Синтаксис
 Функция РазделениеВключено() Экспорт
Возвращаемое значение
  Булево - Истина, если разделение включено.
         - Ложь,   если разделение выключено или не поддерживается.
Пример вызова
Результат = ОбщегоНазначения.РазделениеВключено()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

РазделительПакетаЗапросов
 Возвращает фрагмент текста запроса, отделяющего один запрос от другого.
Синтаксис
 Функция РазделительПакетаЗапросов() Экспорт
Возвращаемое значение
  Строка - разделитель запросов.
Пример вызова
Результат = ОбщегоНазначения.РазделительПакетаЗапросов()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

РазложитьПолноеИмяФайла
 Раскладывает полное имя файла на составляющие.
Синтаксис
 Функция РазложитьПолноеИмяФайла(Знач ПолноеИмяФайла, ЭтоПапка = Ложь) Экспорт
Параметры
  ПолноеИмяФайла - Строка - полный путь к файлу.
  ЭтоПапка - Булево - признак того, что требуется разложить полное имя папки, а не файла.
Возвращаемое значение
   Структура - имя файла, разложенное на составные части(аналогично свойствам объекта Файл):
  ПолноеИмя - Содержит полный путь к файлу, т.е. полностью соответствует входному параметру ПолноеИмяФайла.
  Путь - Содержит путь к каталогу, в котором лежит файл.
  Имя - Содержит имя файла с расширением, без пути к файлу.
  Расширение - Содержит расширение файла.
  ИмяБезРасширения - Содержит имя файла без расширения и без пути к файлу.
   Пример: если ПолноеИмяФайла = "c:\temp\test.txt", то структура заполнится следующим образом:
    ПолноеИмя: "c:\temp\test.txt".
    Путь: "c:\temp\"
    Имя: "test.txt"
    Расширение: ".txt"
    ИмяБезРасширения: "test".
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПолноеИмяФайла, ЭтоПапка)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

РазложитьСтрокуВМассивПодстрок
 Разбивает строку на несколько строк по указанному разделителю. Разделитель может иметь любую длину.
 В случаях, когда разделителем является строка из одного символа, и не используется параметр СокращатьНепечатаемыеСимволы,
 рекомендуется использовать функцию платформы СтрРазделить.
Синтаксис
 Функция РазложитьСтрокуВМассивПодстрок(Знач Значение, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, 
	СокращатьНепечатаемыеСимволы = Ложь) Экспорт
Параметры
  Значение               - Строка - текст с разделителями;
  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
       включаются в результат.
     - если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
       случае разделителя-пробела результатом функции будет массив, содержащий одно значение "" (пустая строка), а
       при других разделителях результатом функции будет пустой массив.
  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
Возвращаемое значение
  Массив - массив строк.
Пример вызова
  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(",один,,два,", ",")
  - возвратит массив из 5 элементов, три из которых  - пустые: "", "один", "", "два", "";
  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(",один,,два,", ",", Истина)
  - возвратит массив из двух элементов: "один", "два";
  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(" один   два  ", " ")
  - возвратит массив из двух элементов: "один", "два";
  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("")
  - возвратит пустой массив;
  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("",,Ложь)
  - возвратит массив с одним элементом: ""(пустая строка);
  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("", " ")
  - возвратит массив с одним элементом: "" (пустая строка).
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

РазложитьСтрокуВМассивСлов
 Разбивает строку на несколько строк, используя заданный набор разделителей.
 Если параметр РазделителиСлов не задан, то разделителем слов считается любой из символов, 
 не относящихся к символам латиницы, кириллицы, цифры, подчеркивания.
Синтаксис
 Функция РазложитьСтрокуВМассивСлов(Знач Значение, РазделителиСлов = Неопределено) Экспорт
Параметры
  Значение        - Строка - исходная строка, которую необходимо разложить на слова.
  РазделителиСлов - Строка - перечень символов-разделителей. Например, ".,;".
Возвращаемое значение
  Массив - список слов.
Пример вызова
  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов("один-@#два2_!три") возвратит массив значений: "один",
  "два2_", "три"; СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов("один-@#два2_!три", "#@!_") возвратит массив
  значений: "один-", "два2", "три".
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

РазложитьСтрокуПоТочкамИСлэшам
 Функция раскладывает Строку в массив строк, используя "./\" как разделитель.
Синтаксис
 Функция РазложитьСтрокуПоТочкамИСлэшам(Знач Строка) Экспорт
Параметры
  Строка - Строка - исходная строка.
Возвращаемое значение
  Массив - коллекция фрагментов строки.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.РазложитьСтрокуПоТочкамИСлэшам(Строка)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

РазностьМассивов
 Вычисляет разность массивов. Разностью массивов А и В является массив, содержащий
 все элементы массива А не существующие в массиве В.
Синтаксис
 Функция РазностьМассивов(Массив, МассивВычитания) Экспорт
Параметры
  Массив - Массив - массив элементов, из которого необходимо выполнить вычитание;
  МассивВычитания - Массив - массив элементов, который будет вычитаться.
Возвращаемое значение
  Массив - дополнение массива В до А.
Пример вызова
 //А = [1, 3, 5, 7];
 //В = [3, 7, 9];
 Результат = РазностьМассивов(А, В);
 //Результат = [1, 5];
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

РазобратьСтрокуСПочтовымиАдресами
 Функция проверяет, что введенная строка с e-mail адресами введена правильно.
  Формат строки:
  Z = ИмяПользователя|[Имя Пользователя] [<]пользователь@почтовый_сервер[>], Строка = Z[<разделитель*>Z].
   Прим.: разделитель* - имеется ввиду любой разделитель адресов.
Синтаксис
 Функция РазобратьСтрокуСПочтовымиАдресами(Знач СтрокаПереданныхАдресов, ВызыватьИсключение = Истина) Экспорт
Параметры
  СтрокаПереданныхАдресов - Строка - правильная строка с почтовыми адресами.
  ВызыватьИсключение - Булево - необходимо передать Ложь, чтобы в случае неуспешного разбора не выдавалось исключение.
Возвращаемое значение
  Структура - результат разбора:
   * Статус - Булево - успех или неуспех преобразования
   * Значение - Массив - (параметр доступен, если Статус = Истина) коллекция адресов в виде структур:
    ** Адрес - Строка - e-mail получателя.
    ** Представление - Строка - имя получателя.
   * СообщениеОбОшибке - Строка - (параметр доступен, если Статус = Ложь) информация об ошибке.
  ВАЖНО: Функция возвращает массив структур, в которых одно поле (любое)
         может быть незаполнено. Может использоваться различными
         подсистемами для собственного сопоставления имени пользователя
         некому e-mail адресу. Поэтому, необходимо перед непосредственной
         отправкой проверить, что поле почтового адреса заполнено.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(СтрокаПереданныхАдресов, ВызыватьИсключение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

РазорватьСоединенияСИнформационнойБазой
 Разрывает соединения с информационной базой по фильтру.
Синтаксис
 Процедура РазорватьСоединенияСИнформационнойБазой(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено, Знач Фильтр = Неопределено) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
  Фильтр - Массив - массив структур, описывающих условия фильтрации соединений. Поля структур, входящих в массив:
              * Свойство - Строка - имя свойства, по которому осуществляется фильтрация (см. АдминистрированиеКластераКлиентСервер.СвойстваСоединения),
              * ВидСравнения - ВидСравнения - значение системного перечисления ВидСравнения, вид сравнения значений
                соединений с указанным в условии фильтра,
              * Значение - Число, Строка, Дата, Булево, СписокЗначений, Массив, Структура - значение, с которым
                сравнивается значение соответствующего свойства соединения,
         - Структура - структура: ключ - Имя свойства соединения (см. выше), значение - значение, с которым
           выполняется сравнение. При использовании данного варианта описания фильтра сравнение всегда выполняется на равенство.
Пример вызова
АдминистрированиеКластераКлиентСервер.РазорватьСоединенияСИнформационнойБазой(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ, Фильтр)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

РасписаниеВСтруктуру
 Преобразует РасписаниеРегламентногоЗадания в структуру.
Синтаксис
 Функция РасписаниеВСтруктуру(Знач Расписание) Экспорт
Параметры
  Расписание - РасписаниеРегламентногоЗадания - исходное расписание.
Возвращаемое значение
  Структура - расписание в виде структуры.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.РасписаниеВСтруктуру(Расписание)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

РасписаниеРегламентногоЗадания
 Возвращает расписание регламентного задания.
 Перед вызовом требуется иметь право Администрирования или УстановитьПривилегированныйРежим.
 Не предназначена для использования в модели сервиса.
Синтаксис
 Функция РасписаниеРегламентногоЗадания(Знач Идентификатор, Знач ВСтруктуре = Ложь) Экспорт
Параметры
  Идентификатор - ОбъектМетаданных - объект метаданных регламентного задания для поиска
                  предопределенного регламентного задания.
                - УникальныйИдентификатор - идентификатор регламентного задания.
                - Строка - строка уникального идентификатора регламентного задания.
                - РегламентноеЗадание - регламентное задание.
  ВСтруктуре    - Булево - если Истина, тогда расписание будет преобразовано
                  в структуру, которую можно передать на клиент.
Возвращаемое значение
  РасписаниеРегламентногоЗадания, Структура - структура содержит те же свойства, что и расписание.
Пример вызова
Результат = РегламентныеЗаданияСервер.РасписаниеРегламентногоЗадания(Идентификатор, ВСтруктуре)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

РасписанияОдинаковые
 Сравнивает два расписания между собой.
Синтаксис
 Функция РасписанияОдинаковые(Знач Расписание1, Знач Расписание2) Экспорт
Параметры
 Расписание1 - РасписаниеРегламентногоЗадания - первое расписание.
  Расписание2 - РасписаниеРегламентногоЗадания - второе расписание.
Возвращаемое значение
  Булево - Истина, если одинаковые.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.РасписанияОдинаковые(Расписание1, Расписание2)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

РаспределитьСуммуПропорциональноКоэффициентам
1. Для вызова с сервера
 Делит сумму на требуемое количество частей, размеры частей задаются коэффициентами.
 Остатки от округления распределяется на часть с наибольшим коэффициентом.
Синтаксис
 Функция РаспределитьСуммуПропорциональноКоэффициентам(Знач РаспределяемаяСумма, КоэффициентыРаспределения, Знач Точность = 2) Экспорт
Параметры
  РаспределяемаяСумма - Число - сумма, которую надо распределить;
  КоэффициентыРаспределения - Массив - список коэффициентов (типа Число);
  Точность - Число - количество знаков дробной части, до которых производится округление. Если параметр отрицательный,
                     то число округляется до соответствующего разряда в целой части, начиная с младших разрядов.
Возвращаемое значение
  Массив - список чисел, полученный в результате распределения суммы.
           В случае если распределить не удалось (сумма = 0, кол-во коэффициентов = 0,
           или суммарный вес коэффициентов = 0), то возвращается значение Неопределено.
Пример вызова
Результат = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(РаспределяемаяСумма, КоэффициентыРаспределения, Точность)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

2. Для вызова с клиента и сервера
 Выполняет пропорциональное распределение суммы в соответствии
 с заданными коэффициентами распределения.
Синтаксис
 Функция РаспределитьСуммуПропорциональноКоэффициентам(Знач РаспределяемаяСумма, Знач Коэффициенты, Знач Точность = 2) Экспорт
Параметры
  РаспределяемаяСумма - Число  - сумма, которую надо распределить, если сумма равна 0 - то возвращается Неопределено;
                                 Если передана отрицательная - расчет по модулю и после инверсия знаков результата.
  Коэффициенты        - Массив - коэффициенты распределения, должны быть положительны или отрицательными одновременно
  Точность            - Число  - точность округления при распределении. Необязателен.
Возвращаемое значение
  Массив - массив размерностью равный массиву коэффициентов, содержит
           суммы в соответствии с весом коэффициента (из массива коэффициентов).
           В случае, если распределить невозможно (кол-во коэффициентов = 0,
           есть коэффициенты с отрицательным значением или суммарный вес коэффициентов = 0),
           тогда будет возвращено Неопределено.
Пример вызова
 Коэффициенты = Новый Массив;
 Коэффициенты.Добавить(1);
 Коэффициенты.Добавить(2);
 Результат = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(1, Коэффициенты);
 // Результат = [0.33, 0.67]
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

РасширениеБезТочки
 Преобразует расширение файла в нижний регистр без точки.
Синтаксис
 Функция РасширениеБезТочки(Знач Расширение) Экспорт
Параметры
  Расширение - Строка - Расширение для преобразования.
Возвращаемое значение
  Строка - преобразованное расширение.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(Расширение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение
РегламентноеЗаданиеИспользуется
 Возвращает использование регламентного задания.
 Перед вызовом требуется иметь право Администрирования или УстановитьПривилегированныйРежим.
 Не предназначена для использования в модели сервиса.
Синтаксис
 Функция РегламентноеЗаданиеИспользуется(Знач Идентификатор) Экспорт
Параметры
  Идентификатор - ОбъектМетаданных - объект метаданных регламентного задания для поиска
                  предопределенного регламентного задания.
                - УникальныйИдентификатор - идентификатор регламентного задания.
                - Строка - строка уникального идентификатора регламентного задания.
                - РегламентноеЗадание - регламентное задание.
Возвращаемое значение
  Булево - если Истина, регламентное задание используется.
Пример вызова
Результат = РегламентныеЗаданияСервер.РегламентноеЗаданиеИспользуется(Идентификатор)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

РедакцияКонфигурации
 Возвращает редакцию конфигурации.
 Редакцией принято называть две первые группы цифр полной версии конфигурации.
 Например, у версии "1.2.3.4" редакция "1.2".
Синтаксис
 Функция РедакцияКонфигурации() Экспорт
Возвращаемое значение
  Строка - номер редакции конфигурации.
Пример вызова
Результат = ОбщегоНазначения.РедакцияКонфигурации()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

РежимОтладки
 Возвращает Истина, если включен режим отладки.
Синтаксис
 Функция РежимОтладки() Экспорт
Возвращаемое значение
  Булево - Истина, если включен режим отладки.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.РежимОтладки()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвернутьМассив
 Удаляет повторяющиеся элементы массива.
Синтаксис
 Функция СвернутьМассив(Массив) Экспорт
Параметры
  Массив - Массив - массив произвольных значений.
Возвращаемое значение
  Массив - коллекция уникальных элементов.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Массив)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваCOMКласса
 Конструктор структуры, описывающей свойства COM-класса.
Синтаксис
 Функция СвойстваCOMКласса() Экспорт
Возвращаемое значение
   Структура - структура с полями:
     * Имя - Строка - имя COM-класса, используется в качестве ключа при поиске,
     * Описание - Строка - описание COM-класса,
     * ФайлМоникер - Строка - имя файла, по которому создается объект методом глобального 
       контекста ПолучитьCOMОбъект() с пустым значением второго параметра,
     * CLSID - Строка - представление идентификатора COM-класса в формате системного реестра MS Windows 
       без фигурных скобок, по которому он может быть создан операционной системой,
     * Компьютер - Строка - имя компьютера, на котором может быть создан COM-объект.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваCOMКласса()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваБлокировкиСеансовИРегламентныхЗаданий
 Конструктор структуры, описывающей свойства блокировки сеансов и регламентных заданий
  информационной базы.
Синтаксис
 Функция СвойстваБлокировкиСеансовИРегламентныхЗаданий() Экспорт
Возвращаемое значение
  Структура - структура с полями:
    * БлокировкаСеансов - Булево - флаг установки блокировки новых сеансов с информационной базой,
    * ДатаС - Дата - (Дата и время) момент начала блокировки новых сеансов с информационной базой,
    * ДатаПо - Дата - (Дата и время) момент окончания блокировки новых сеансов с информационной базой,
    * Сообщение - Строка - сообщение, отображаемое пользователю при попытке установки нового сеанса
      с информационной базой при установленной блокировке новых сеансов,
    * КодРазрешения - Строка - код обхода блокировки новых сеансов с информационной базой,
    * БлокировкаРегламентныхЗаданий - Булево - флаг блокировки выполнения регламентных заданий
      информационной базы.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваБлокировкиСеансовИРегламентныхЗаданий()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваВиртуальногоКаталога
 Конструктор структуры, описывающей свойства виртуального каталога.
Синтаксис
 Функция СвойстваВиртуальногоКаталога() Экспорт
Возвращаемое значение
   Структура - структура с полями:
     * ЛогическийURL - Строка - логический URL каталога,
     * ФизическийURL - Строка - физический URL каталога на сервере для размещения данных
       виртуального каталога,
     * Описание - Строка - описание виртуального каталога,
     * ЧтениеДанных - Булево - флаг разрешения чтения данных из виртуального каталога,
     * ЗаписьДанных - Булево - флаг разрешения записи данных в виртуальный каталог.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваВиртуальногоКаталога()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваВнешнегоМодуля
 Конструктор структуры, описывающей свойства внешнего модуля.
Синтаксис
 Функция СвойстваВнешнегоМодуля() Экспорт
Возвращаемое значение
   Структура - структура с полями:
     * Имя - Строка - имя внешнего модуля, используется в качестве ключа для поиска,
     * Описание - Строка - описание внешнего модуля,
     * ХэшСумма - Строка - контрольная сумма разрешенного внешнего модуля, вычисленная алгоритмом
       SHA-1 и преобразованная к строке base64.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваВнешнегоМодуля()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваВнешнейКомпоненты
 Конструктор структуры, описывающей свойства внешней компоненты.
Синтаксис
 Функция СвойстваВнешнейКомпоненты() Экспорт
Возвращаемое значение
   Структура - структура с полями:
     * Имя - Строка - имя внешней компоненты, используется в качестве ключа для поиска,
     * Описание - Строка -описание внешней компоненты,
     * ХэшСумма - Строка - контрольная сумма разрешенной внешней компоненты, вычисленная алгоритмом
       SHA-1 и преобразованная к строке base64.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваВнешнейКомпоненты()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваИнтернетРесурса
 Конструктор структуры, описывающей Интернет-ресурс.
Синтаксис
 Функция СвойстваИнтернетРесурса() Экспорт
Возвращаемое значение
   Структура - структура с полями:
     * Имя - Строка - имя Интернет-ресурса, используется в качестве ключа для поиска,
     * Описание - Строка - описание Интернет-ресурса,
     * Протокол - Строка - разрешаемый сетевой протокол. Возможные значения:
         HTTP,
         HTTPS,
         FTP,
         FTPS,
         POP3,
         SMTP,
         IMAP,
     * Адрес - Строка - сетевой адрес Интернет-ресурса без указания протокола и порта,
     * Порт - Число - сетевой порт Интернет-ресурса.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваИнтернетРесурса()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваИнформационныхБаз
 Возвращает описания информационных баз.
Синтаксис
 Функция СвойстваИнформационныхБаз(Знач ИдентификаторКластера, Знач ПараметрыАдминистрированияКластера, Знач Фильтр = Неопределено) Экспорт
Параметры
  ИдентификаторКластера - Строка - внутренний идентификатор кластера серверов,
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  Фильтр - Структура - параметры фильтрации информационных баз.
Возвращаемое значение
  Массив - массив структур (свойств информационной базы).
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваИнформационныхБаз(ИдентификаторКластера, ПараметрыАдминистрированияКластера, Фильтр)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваКластеров
 Возвращает описания кластеров серверов.
Синтаксис
 Функция СвойстваКластеров(Знач ПараметрыАдминистрированияКластера, Знач Фильтр = Неопределено) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  Фильтр - Структура - параметры фильтрации кластеров серверов.
Возвращаемое значение
   Массив - массив структур (свойств кластеров).
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваКластеров(ПараметрыАдминистрированияКластера, Фильтр)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваПриложенияОС
 Конструктор структуры, описывающей свойства приложения операционной системы.
Синтаксис
 Функция СвойстваПриложенияОС() Экспорт
Возвращаемое значение
   Структура - структура с полями:
     * Имя - Строка - имя приложения операционной системы, используется в качестве ключа для поиска,
     * Описание - Строка - описание приложения операционной системы,
     * ШаблонСтрокиЗапуска - Строка - шаблон строки запуска приложения (состоит из последовательности
       шаблонных слов, разделенных пробелами).
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваПриложенияОС()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваПрофиляБезопасности
 Конструктор структуры, описывающей свойства профиля безопасности.
Синтаксис
 Функция СвойстваПрофиляБезопасности() Экспорт
Возвращаемое значение
   Структура - структура с полями:
     * Имя - Строка - имя профиля безопасности,
     * Описание - Строка - описание профиля безопасности,
     * ПрофильБезопасногоРежима - Булево - определяет возможность использования профиля безопасности
       в качестве профиля безопасности безопасного режима (как при указании в качестве профиля
       безопасного режима для информационной базы, так и при вызове УстановитьБезопасныйРежим(<Имя профиля>) из кода конфигурации,
     * ПолныйДоступКПривилегированномуРежиму - Булево - определяет возможность установки
       привилегированного режима из безопасного режима данного профиля безопасности,
     * ПолныйДоступКФайловойСистеме - Булево - определяет наличие ограничений на доступ к файловой
       системе. При установке значения равным Ложь, доступ будет предоставлен только к каталогам файловой
       системы, перечисленным в свойстве ВиртуальныеКаталоги,
     * ПолныйДоступКCOMОбъектам - Булево - определяет наличие ограничений на доступ к использованию
       COMОбъектов. При установке значения равным Ложь, доступ будет предоставлен только к COM-классам,
       перечисленным в свойстве COMКлассы,
     * ПолныйДоступКВнешнимКомпонентам - Булево - определяет наличие ограничений на доступ к использованию
       внешних компонент. При установке значения равным Ложь, доступ будет предоставлен только к внешним
       компонентам, перечисленным в свойстве ВнешниеКомпоненты,
     * ПолныйДоступКВнешнимМодулям - Булево - определяет наличие ограничений на доступ к использованию
       внешних модулей (внешние отчеты и обработки, вызовы Выполнить() и Вычислить()) в небезопасном режиме.
       При установке значения равным Ложь, будет предоставлена возможность использовать в небезопасном
       режиме только внешние модули, перечисленные в свойстве ВнешниеМодули,
     * ПолныйДоступКПриложениямОперационнойСистемы - Булево - определяет наличие ограничений на доступ к
       использованию приложений операционной системы. При установке значения равным Ложь, будет предоставлена
       возможность использовать только приложения операционной системы, перечисленные в свойстве ПриложенияОС,
     * ПолныйДоступКИнтернетРесурсам - Булево - определяет наличие ограничений на доступ к использованию
       Интернет-ресурсов. При установке значения равным Ложь, будет предоставлена возможность использовать
       только Интернет-ресурсы, перечисленные в свойстве ИнтернетРесурсы,
     * ВиртуальныеКаталоги - Массив - массив структур (см. АдминистрированиеКластераКлиентСервер.СвойстваВиртуальногоКаталога),
       описывающих виртуальные каталоги, к которых предоставляется доступ при установке ПолныйДоступКФайловойСистеме =
       Ложь,
     * COMКлассы - Массив - массив структур (см. АдминистрированиеКластераКлиентСервер.СвойстваCOMКласса),
       описывающих COM-классы, к которым предоставляется доступ при установке ПолныйДоступКCOMОбъектам = Ложь,
     * ВнешниеКомпоненты - Массив - массив структур (см. АдминистрированиеКластераКлиентСервер.СвойстваВнешнейКомпоненты),
       описывающих внешние компоненты, к которым предоставляется доступ при установке ПолныйДоступКВнешнимКомпонентам
       = Ложь,
     * ВнешниеМодули - Массив - массив структур (см. АдминистрированиеКластераКлиентСервер.СвойстваВнешнегоМодуля),
       описывающих внешние модули, к которым предоставляется доступ в небезопасном режиме при установке
       ПолныйДоступКВнешнимМодулям = Ложь,
     * ПриложенияОС - Массив - массив структур (см. АдминистрированиеКластераКлиентСервер.СвойстваПриложенияОС),
       описывающих приложения операционной системы, к которым предоставляется доступ при установке
       ПолныйДоступКПриложениямОперационнойСистемы = Ложь,
     * ИнтернетРесурсы - Массив - массив структур (см. АдминистрированиеКластераКлиентСервер.СвойстваИнтернетРесурса),
       описывающих Интернет-ресурсы, к которым предоставляется доступ при установке ПолныйДоступКИнтернетРесурсам = Ложь.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваПрофиляБезопасности()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваРабочихПроцессов
 Возвращает описания рабочих процессов.
Синтаксис
 Функция СвойстваРабочихПроцессов(Знач ИдентификаторКластера, Знач ПараметрыАдминистрированияКластера, Знач Фильтр = Неопределено) Экспорт
Параметры
  ИдентификаторКластера - Строка - внутренний идентификатор кластера серверов,
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  Фильтр - Структура - параметры фильтрации рабочих процессов.
Возвращаемое значение
   Массив - массив структур (свойств рабочих процессов).
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваРабочихПроцессов(ИдентификаторКластера, ПараметрыАдминистрированияКластера, Фильтр)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваРабочихСерверов
 Возвращает описания рабочих серверов.
Синтаксис
 Функция СвойстваРабочихСерверов(Знач ИдентификаторКластера, Знач ПараметрыАдминистрированияКластера, Знач Фильтр = Неопределено) Экспорт
Параметры
  ИдентификаторКластера - Строка - внутренний идентификатор кластера серверов,
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  Фильтр - Структура - параметры фильтрации рабочих серверов.
Возвращаемое значение
   Массив - массив структур (свойств рабочих процессов).
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваРабочихСерверов(ИдентификаторКластера, ПараметрыАдминистрированияКластера, Фильтр)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваСеанса
 Конструктор структуры, описывающей свойства сеанса информационной базы.
Синтаксис
 Функция СвойстваСеанса() Экспорт
Возвращаемое значение
  Структура - структура с полями:
   * Номер - Число - номер сеанса. Уникален среди всех сеансов информационной базы,
   * ИмяПользователя - Строка - имя аутентифицированного пользователя информационной базы,
   * ИмяКлиентскогоКомпьютера - Строка - имя или сетевой адрес компьютера, установившего
     сеанс с информационной базой,
   * ИдентификаторКлиентскогоПриложения - Строка - идентификатор приложения, установившего сеанс
     (см. описание к функции глобального контекста ПредставлениеПриложения),
   * ИдентификаторЯзыка - Строка - идентификатор языка интерфейса,
   * МоментСозданияСеанса - Дата - (Дата и время) момент установки сеанса,
   * МоментПоследнейАктивностиСеанса - Дата - (Дата и время) момент последней активности сеанса,
   * Блокировка - Число - номер сеанса, который является причиной ожидания управляемой транзакционной
     блокировки, в том случае, если сеанс выполняет установку управляемых транзакционных блокировок
     и ожидает снятия блокировок, установленных другим сеансом (иначе - значение равно 0),
   * БлокировкаСУБД - Число - номер сеанса, который является причиной ожидания транзакционной
     блокировки, в том случае, если сеанс исполняет запрос к СУБД и ожидает транзакционную
     блокировку, установленную другим сеансом (иначе - значение равно 0),
   * Передано - Число - объем данных, переданных меду сервером 1С:Предприятия и клиентским приложением
     данного сеанса с момента начала сеанса (в байтах),
   * ПереданоЗа5Минут - Число - объем данных, переданных между сервером 1С:Предприятия и клиентским
     приложением данного сеанса за последние 5 минут (в байтах),
   * СерверныхВызовов - Число - количество вызовов сервера 1С:Предприятия от имена данного сеанса с
     момента начала сеанса,
   * СерверныхВызововЗа5Минут - Число - количество вызовов сервера 1С:Предприятия от имени данного сеанса
     за последние 5 минут,
   * ДлительностьСерверныхВызовов - Число - время исполнения вызовов сервера 1С:Предприятия от имени
     данного сеанса с момента начала сеанса (в секундах),
   * ДлительностьТекущегоСерверногоВызова - Число - интервал времени в миллисекундах, прошедший с момента начала
     обращения, в случае, если сеанс выполняется вызов сервера 1С:Предприятия (иначе - значение равно 0),
   * ДлительностьСерверныхВызововЗа5Минут - Число - время исполнения вызовов сервера 1С:Предприятия от имени
     данного сеанса за последние 5 минут (в миллисекундах),
   * ПереданоСУБД - Число - количество данных, переданных и полученных от СУБД от имени данного сеанса с
     момента начала сеанса (в байтах),
   * ПереданоСУБДЗа5Минут - Число - количество данных, переданных и полученных от СУБД от имени данного сеанса
     за последние 5 минут (в байтах),
   * ДлительностьВызововСУБД - Число - время исполнения запросов к СУБД от имени данного сеанса с момента начала
     сеанса (в миллисекундах),
   * ДлительностьТекущегоВызоваСУБД - Число - интервал времени в миллисекундах, прошедший с начала выполнения
     запроса в случае, если сеанс выполняет запрос к СУБД (иначе - значение равно 0),
   * ДлительностьВызововСУБДЗа5Минут - Число - суммарное время исполнения запросов к СУБД от имени данного сеанса
     за последние 5 минут (в миллисекундах),
   * СоединениеСУБД - Строка - номер соединения с СУБД в терминах СУБД в том случае, если в момент получения списка
     сеансов выполняется запрос к СУБД, открыта транзакция или определены временные таблицы (т.е. захвачено
     соединение с СУБД). Если соединение с СУБД не захвачено - значение равно пустой строке,
   * ВремяСоединенияСУБД - Число - время соединения с СУБД с момента захвата (в миллисекундах). Если соединение с.
     СУБД не захвачено - значение равно 0,
   * МоментЗахватаСоединенияСУБД - Дата - (Дата и время) момент времени, когда соединение с СУБД было последний раз
     захвачено другим сеансом.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваСеанса()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваСеансов
 Возвращает описания сеансов информационной базы.
Синтаксис
 Функция СвойстваСеансов(Знач ИдентификаторКластера, Знач ПараметрыАдминистрированияКластера, Знач ИдентификаторИнформационнойБазы, Знач Фильтр = Неопределено, Знач ИспользоватьСловарь = Истина) Экспорт
Параметры
  ИдентификаторКластера - Строка - внутренний идентификатор кластера серверов,
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ИдентификаторИнформационнойБазы - Строка - внутренний идентификатор информационной базы,
  Фильтр - Массив - массив структур, описывающих условия фильтрации сеансов. Поля структур, входящих в массив:
             * Свойство - Строка - имя свойства, по которому осуществляется фильтрация (см. АдминистрированиеКластераКлиентСервер.СвойстваСеанса),
             * ВидСравнения - ВидСравнения - значение системного перечисления ВидСравнения,
             * Значение - Число, Строка, Дата, Булево, СписокЗначений, Массив, Структура - значение, с которым
               сравнивается значение соответствующего свойства сеанса.
         - Структура - структура: ключ - Имя свойства сеанса (см. выше), значение - значение, с которым
           выполняется сеанс. При использовании данного варианта описания фильтра сравнение всегда выполняется на
           равенство.
  ИспользоватьСловарь - Булево - если Истина, то возвращаемый результат будет заполнен с использован словаря, иначе - без
    использования.
Возвращаемое значение
   - Массив(Структура) - Массив - структур (см. АдминистрированиеКластераКлиентСервер.СвойстваСеанса), описывающих
                                  свойства сеансов,
   - Массив(Соответствие) - Массив - соответствий (см. АдминистрированиеКластераКлиентСервер.СвойстваСеанса),
     описывающих свойства сеансов в нотации утилиты rac (при ИспользоватьСловарь = Ложь).
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваСеансов(ИдентификаторКластера, ПараметрыАдминистрированияКластера, ИдентификаторИнформационнойБазы, Фильтр, ИспользоватьСловарь)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваСоединений
 Возвращает описания соединений с информационной базой.
Синтаксис
 Функция СвойстваСоединений(Знач ИдентификаторКластера, Знач ПараметрыАдминистрированияКластера, Знач ИдентификаторИнформационнойБазы, Знач ПараметрыАдминистрированияИнформационнойБазы, Знач Фильтр = Неопределено, Знач ИспользоватьСловарь = Ложь) Экспорт
Параметры
  ИдентификаторКластера - Строка - внутренний идентификатор кластера серверов,
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ИдентификаторИнформационнойБазы - Строка - внутренний идентификатор информационной базы,
  ПараметрыАдминистрированияИнформационнойБазы - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
  Фильтр - Массив - массив структур, описывающих условия фильтрации соединений. Поля структур, входящих в массив:
             * Свойство - Строка - имя свойства, по которому осуществляется фильтрация (см. АдминистрированиеКластераКлиентСервер.СвойстваСоединений),
             * ВидСравнения - ВидСравнения - значение системного перечисления ВидСравнения,
             * Значение - Число, Строка, Дата, Булево, СписокЗначений, Массив, Структура - значение, с которым
               сравнивается значение соответствующего свойства соединения.
         - Структура - структура: ключ - Имя свойства соединения (см. выше), значение - значение, с которым
           выполняется соединение. При использовании данного варианта описания фильтра сравнение всегда выполняется на
           равенство.
  ИспользоватьСловарь - Булево - если Истина - возвращаемый результат будет заполнен с использован словаря, иначе - без
    использования.
Возвращаемое значение
   - Массив(Структура) - Массив - структур (см. АдминистрированиеКластераКлиентСервер.СвойстваСоединений), описывающих
                                  свойства соединений,
   - Массив(Соответствие) - Массив - соответствий (см. АдминистрированиеКластераКлиентСервер.СвойстваСоединений),
     описывающих свойства соединений в нотации утилиты rac (при ИспользоватьСловарь = Ложь).
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваСоединений(ИдентификаторКластера, ПараметрыАдминистрированияКластера, ИдентификаторИнформационнойБазы, ПараметрыАдминистрированияИнформационнойБазы, Фильтр, ИспользоватьСловарь)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойстваСоединения
 Конструктор структуры, описывающей свойства соединения с информационной базой.
Синтаксис
 Функция СвойстваСоединения() Экспорт
Возвращаемое значение
  Структура - структура с полями:
    * Номер - Число - номер соединения с информационной базой,
    * ИмяПользователя - Строка - имя пользователя 1С:Предприятия, подсоединенного к информационной базе,
    * ИмяКлиентскогоКомпьютера - Строка - имя компьютера, с которого установлено соединение,
    * ИдентификаторКлиентскогоПриложения - Строка - идентификатор приложения, установившего соединение (см. описание к
                                                    функции глобального контекста ПредставлениеПриложения),
    * МоментУстановкиСоединения - Дата - (Дата и время) момент установки соединения,
    * РежимСоединенияСИнформационнойБазой - Число - режим соединения с информационной базой (0 -
      разделяемый, 1 - монопольный),
    * РежимСоединенияСБазойДанных - Число - режим соединения с базой данных (0 - соединение не установлено,
      1 - разделяемый, 2 - монопольный),
    * БлокировкаСУБД - Число - идентификатор соединения, блокирующего работу данного соединения в СУБД,
    * Передано - Число - объем данных, полученных и отправленных соединением,
    * ПереданоЗа5Минут - Число - объем данных, полученных и отправленных соединением за последние 5 минут,
    * СерверныхВызовов - Число - количество серверных вызовов,
    * СерверныхВызововЗа5Минут - Число - количество серверных вызовов соединения за последние 5 минут,
    * ПереданоСУБД - Число - объем данных, переданных между сервером 1С:Предприятия и сервером баз данных,
      с момента установки данного соединения,
    * ПереданоСУБДЗа5Минут - Число - объем данных, переданных между сервером 1С:Предприятия и сервером баз
        данных за последние 5 минут,
    * СоединениеСУБД - Строка - идентификатор процесса соединения с СУБД (если на момент получения списка
      соединений данное соединение выполняло обращение к серверу СУБД, в противном случае - значение равно пустой
      строке). Идентификатор возвращается в терминах сервера СУБД,
    * ВремяСУБД - Число - время в секундах, в течении которого выполняется обращение к серверу СУБД (если на момент
      получения списка соединений данное соединение выполняло обращение к серверу СУБД, в противном случае - значение
      равно 0),
    * МоментЗахватаСоединенияСУБД - Дата - (Дата и время) момент последнего захвата соединения с сервером СУБД,
    * ДлительностьСерверныхВызовов - Число - длительность всех серверных вызовов соединения,
    * ДлительностьВызововСУБД - Число - время вызовов СУБД, инициированных соединением,
    * ДлительностьТекущегоСерверногоВызова - Число - длительность текущего серверного вызова,
    * ДлительностьТекущегоВызоваСУБД - Число - длительность текущего вызова сервера СУБД,
    * ДлительностьСерверныхВызововЗа5Минут - Число - длительность серверных вызовов соединения за последние 5 минут,
    * ДлительностьВызововСУБДЗа5Минут - Число - длительность вызовов соединения СУБД за последние 5 минут.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СвойстваСоединения()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СвойствоСтруктуры
 Возвращает значение свойства структуры.
Синтаксис
 Функция СвойствоСтруктуры(Структура, Ключ, ЗначениеПоУмолчанию = Неопределено) Экспорт
Параметры
   Структура - Структура, ФиксированнаяСтруктура - Объект, из которого необходимо прочитать значение ключа.
   Ключ - Строка - Имя свойства структуры, для которого необходимо прочитать значение.
   ЗначениеПоУмолчанию - Произвольный - Необязательный. Возвращается когда в структуре нет значения по указанному
                                        ключу.
       Для скорости рекомендуется передавать только быстро вычисляемые значения (например примитивные типы),
       а инициализацию более тяжелых значений выполнять после проверки полученного значения (только если это
       требуется).
Возвращаемое значение
   Произвольный - Значение свойства структуры. ЗначениеПоУмолчанию если в структуре нет указанного свойства.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Структура, Ключ, ЗначениеПоУмолчанию)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СеансыИнформационнойБазы
 Возвращает описания сеансов информационной базы.
Синтаксис
 Функция СеансыИнформационнойБазы(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено, Знач Фильтр = Неопределено) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
  Фильтр - Массив - массив структур, описывающих условия фильтрации сеансов. Поля структур, входящих в массив:
             * Свойство - Строка - имя свойства, по которому осуществляется фильтрация (см. АдминистрированиеКластераКлиентСервер.СвойстваСеанса),
             * ВидСравнения - ВидСравнения - значение системного перечисления ВидСравнения,
             * Значение - Число, Строка, Дата, Булево, СписокЗначений, Массив, Структура - значение, с которым
               сравнивается значение соответствующего свойства сеанса.
         - Структура - структура: ключ - Имя свойства сеанса (см. выше), значение - значение, с которым
           выполняется сеанс. При использовании данного варианта описания фильтра сравнение всегда выполняется на
           равенство.
Возвращаемое значение
   Массив - массив структур (см. АдминистрированиеКластераКлиентСервер.СвойстваСеанса).
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СеансыИнформационнойБазы(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ, Фильтр)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СкопироватьВБуферОбмена
 Помещает произвольные данные во внутренний буфер обмена, откуда их можно получить с помощью СтрокиИзБуфераОбмена.
Синтаксис
 Процедура СкопироватьВБуферОбмена(Данные, Источник = Неопределено) Экспорт
Параметры
  Данные           - Произвольный - Данные, которые необходимо поместить в внутренний буфер обмена.
  Источник         - Строка       - Произвольный строковый идентификатор, например, имя объекта,
                                    строки табличной части которого помещаются во внутренний буфер обмена.
Пример вызова
ОбщегоНазначения.СкопироватьВБуферОбмена(Данные, Источник)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СкопироватьМассив
 Создает копию значения типа Массив, рекурсивно, с учетом типов значений элементов массива.
 Если элементы массива содержат значения объектных типов (СправочникОбъект, ДокументОбъект и т.п.),
 то их содержимое не копируются, а возвращаются ссылки на исходный объект.
Синтаксис
 Функция СкопироватьМассив(МассивИсточник) Экспорт
Параметры
  МассивИсточник - Массив - массив, копию которого необходимо получить.
Возвращаемое значение
  Массив - копия исходного массива.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(МассивИсточник)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СкопироватьРекурсивно
 Создает полную копию структуры, соответствия, массива, списка или таблицы значений, рекурсивно, 
 с учетом типов дочерних элементов. При этом содержимое значений объектных типов 
 (СправочникОбъект, ДокументОбъект и т.п.) не копируются, а возвращаются ссылки на исходный объект.
Синтаксис
 Функция СкопироватьРекурсивно(Источник) Экспорт
Параметры
  Источник - Структура, Соответствие, Массив, СписокЗначений, ТаблицаЗначений - объект, который необходимо 
             скопировать.
Возвращаемое значение
  Структура, Соответствие, Массив, СписокЗначений, ТаблицаЗначений - копия объекта, переданного в параметре Источник.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Источник)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СкопироватьСоответствие
 Создает копию значения типа Соответствие, рекурсивно, с учетом типов значений.
 Если значения соответствия содержат значения объектных типов (СправочникОбъект, ДокументОбъект и т.п.),
 то их содержимое не копируются, а возвращаются ссылки на исходный объект.
Синтаксис
 Функция СкопироватьСоответствие(СоответствиеИсточник) Экспорт
Параметры
  СоответствиеИсточник - Соответствие - соответствие, копию которого необходимо получить.
Возвращаемое значение
  Соответствие - копия исходного соответствия.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СкопироватьСоответствие(СоответствиеИсточник)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СкопироватьСписокЗначений
 Создает копию значения типа СписокЗначений, рекурсивно, с учетом типов его значений.
 Если в списке значений есть значения объектных типов (СправочникОбъект, ДокументОбъект и т.п.),
 то их содержимое не копируются, а возвращаются ссылки на исходный объект.
Синтаксис
 Функция СкопироватьСписокЗначений(СписокИсточник) Экспорт
Параметры
  СписокИсточник - СписокЗначений - список значений, копию которого необходимо получить.
Возвращаемое значение
  СписокЗначений - копия исходного списка значений.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СкопироватьСписокЗначений(СписокИсточник)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СкопироватьСтрокиВБуферОбмена
 Помещает выделенные строки табличной части во внутренний буфер обмена
 откуда их можно получить с помощью СтрокиИзБуфераОбмена.
Синтаксис
 Процедура СкопироватьСтрокиВБуферОбмена(ТабличнаяЧасть, ВыделенныеСтроки, Источник = Неопределено) Экспорт
Параметры
  ТабличнаяЧасть   - ДанныеФормыКоллекция - Табличная часть, строки которой
                                            необходимо поместить во внутренний буфер обмена.
  ВыделенныеСтроки - Массив - Массив идентификаторов выделенных строк.
  Источник         - Строка - Произвольный строковый идентификатор, например, имя объекта,
                              строки табличной части которого помещаются во внутренний буфер обмена.
Пример вызова
ОбщегоНазначения.СкопироватьСтрокиВБуферОбмена(ТабличнаяЧасть, ВыделенныеСтроки, Источник)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СкопироватьСтруктуру
 Создает копию значения типа Структура, рекурсивно, с учетом типов значений свойств. 
 Если свойства структуры содержат значения объектных типов (СправочникОбъект, ДокументОбъект и т.п.),
 то их содержимое не копируются, а возвращаются ссылки на исходный объект.
Синтаксис
 Функция СкопироватьСтруктуру(СтруктураИсточник) Экспорт
Параметры
  СтруктураИсточник - Структура - копируемая структура.
Возвращаемое значение
  Структура - копия исходной структуры.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураИсточник)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СнятьБлокировкуСеансовИЗаданийИнформационнойБазы
 Снимает блокировку сеансов и регламентных заданий для информационной базы.
Синтаксис
 Процедура СнятьБлокировкуСеансовИЗаданийИнформационнойБазы(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
Пример вызова
АдминистрированиеКластераКлиентСервер.СнятьБлокировкуСеансовИЗаданийИнформационнойБазы(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СнятьУсловноеОформлениеСпискаЗначений
 Снимает один элемент условного оформления, если это список значений.
Синтаксис
 Процедура СнятьУсловноеОформлениеСпискаЗначений(УсловноеОформление, Знач ИдентификаторПользовательскойНастройки, 
	Знач Значение) Экспорт
Параметры
  УсловноеОформление - УсловноеОформление - условное оформление элемента формы;
  ИдентификаторПользовательскойНастройки - Строка - идентификатор настройки;
  Значение - Произвольный -  значение, которое требуется удалить из списка оформления.
Пример вызова
ОбщегоНазначенияКлиентСервер.СнятьУсловноеОформлениеСпискаЗначений(УсловноеОформление, ИдентификаторПользовательскойНастройки, Значение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СоединенияСИнформационнойБазой
 Возвращает описания соединений с информационной базой.
Синтаксис
 Функция СоединенияСИнформационнойБазой(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено, Знач Фильтр = Неопределено) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
  Фильтр - Массив - массив структур, описывающих условия фильтрации соединений. Поля структур, входящих в массив:
             * Свойство - Строка - имя свойства, по которому осуществляется фильтрация (см. АдминистрированиеКластераКлиентСервер.СвойстваСоединения),
             * ВидСравнения - ВидСравнения - значение системного перечисления ВидСравнения, вид сравнения значений
               соединений с указанным в условии фильтра,
             * Значение - Число, Строка, Дата, Булево, СписокЗначений, Массив, Структура - значение, с которым
               сравнивается значение соответствующего свойства соединения,
         - Структура - структура: ключ - Имя свойства соединения (см. выше), значение - значение, с которым
           выполняется сравнение. При использовании данного варианта описания фильтра сравнение всегда выполняется на равенство.
Возвращаемое значение
   Массив - см. АдминистрированиеКластераКлиентСервер.СвойстваСоединения.
Пример вызова
Результат = АдминистрированиеКластераКлиентСервер.СоединенияСИнформационнойБазой(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ, Фильтр)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СоздатьWSПрокси
 Конструктор объекта WSПрокси.
 Отличия от конструктора Новый WSПрокси:
  - встроенный конструктор WSОпределения;
  - кэширует файл WSDL;
  - не требуется указание ИнтернетПрокси (используется автоматически, если настроен);
  - умеет делать быструю проверку доступности сервиса.
Синтаксис
 Функция СоздатьWSПрокси(ПереданныеПараметры) Экспорт
Параметры
  ПереданныеПараметры             - Структура - настройки подключения (необходимо использовать функцию ПараметрыПодключенияWSПрокси):
   * АдресWSDL                    - Строка - месторасположение wsdl.
   * URIПространстваИмен          - Строка - URI пространства имен web-сервиса.
   * ИмяСервиса                   - Строка - имя сервиса.
   * ИмяТочкиПодключения          - Строка - (необязательный) если не задано, образуется как <ИмяСервиса>Soap.
   * ИмяПользователя              - Строка - (необязательный) имя пользователя для входа на сервер.
   * Пароль                       - Строка - (необязательный) пароль пользователя.
   * Таймаут                      - Число  - (необязательный) таймаут на операции выполняемые через полученное прокси.
   * Местоположение               - Строка - (необязательный) фактический адрес сервиса. Используется, если адрес реального
                                             расположения сервиса отличается от адреса, который указан в WSDL-файле.
   * ИспользоватьАутентификациюОС - Булево - (необязательный) включает использование авторизации NTLM или Negotiate на
                                             сервере.
   * ДелатьКонтрольныйВызов       - Булево - (необязательный) выполнять проверку доступности сервиса (требуется 
                                             поддержка этой команды веб-сервисом).
   * ЗащищенноеСоединение         - ЗащищенноеСоединениеOpenSSL, Неопределено - (необязательный) параметры защищенного
                                                                                соединения.
Возвращаемое значение
  WSПрокси  - объект WSПрокси.
Пример вызова
Результат = ОбщегоНазначения.СоздатьWSПрокси(ПереданныеПараметры)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СоздатьВременныйКаталог
1. Для вызова с клиента
 Получение имени временного каталога.
Синтаксис
 Процедура СоздатьВременныйКаталог(Знач Оповещение, Расширение = "") Экспорт 
Параметры
  Оповещение - ОписаниеОповещения - оповещение о результате получения.
      * ИмяКаталога             - Строка - путь к созданному каталогу.
      * ДополнительныеПараметры - Структура - значение, которое было указано при создании объекта ОписаниеОповещения.
  Расширение - Строка - суффикс в имени каталога, который поможет идентифицировать каталог при анализе.
Пример вызова
ОбщегоНазначенияКлиент.СоздатьВременныйКаталог(Оповещение, Расширение)
Доступность
 Тонкий клиент, Толстый клиент

2. Для вызова с сервера
 Создает временный каталог. После окончания работы с временным каталогом его необходимо удалить 
 с помощью ОбщегоНазначения.УдалитьВременныйКаталог.
Синтаксис
 Функция СоздатьВременныйКаталог(Знач Расширение = "") Экспорт
Параметры
   Расширение - Строка - Расширение каталога, которое идентифицирует назначение временного каталога
                         и подсистему, которая его создала.
                         Рекомендуется указывать на английском языке.
Возвращаемое значение
   Строка - Полный путь к каталогу с разделителем пути.
Пример вызова
Результат = ОбщегоНазначения.СоздатьВременныйКаталог(Расширение)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СоздатьГруппуЭлементовОтбора
 Добавить группу отбора в коллекцию КоллекцияЭлементов.
Синтаксис
 Функция СоздатьГруппуЭлементовОтбора(Знач КоллекцияЭлементов, Представление, ТипГруппы) Экспорт
Параметры
  КоллекцияЭлементов - ОтборКомпоновкиДанных, КоллекцияЭлементовОтбораКомпоновкиДанных,
                       ГруппаЭлементовОтбораКомпоновкиДанных - контейнер
                       с элементами и группами отбора, например Список.Отбор или группа в отборе.
  Представление      - Строка - представление группы.
  ТипГруппы          - ТипГруппыЭлементовОтбораКомпоновкиДанных - тип группы.
Возвращаемое значение
  ГруппаЭлементовОтбораКомпоновкиДанных - группа отбора.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(КоллекцияЭлементов, Представление, ТипГруппы)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СоздатьПрофильБезопасности
 Создает профиль безопасности по переданному описанию.
Синтаксис
 Процедура СоздатьПрофильБезопасности(Знач ПараметрыАдминистрированияКластера, Знач СвойстваПрофиляБезопасности) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  СвойстваПрофиляБезопасности - Структура - см. АдминистрированиеКластераКлиентСервер.СвойстваПрофиляБезопасности.
Пример вызова
АдминистрированиеКластераКлиентСервер.СоздатьПрофильБезопасности(ПараметрыАдминистрированияКластера, СвойстваПрофиляБезопасности)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СократитьДвойныеКавычки
 Удаляет двойные кавычки с начала и конца строки, если они есть.
Синтаксис
 Функция СократитьДвойныеКавычки(Знач Значение) Экспорт
Параметры
  Значение - Строка - входная строка.
Возвращаемое значение
  Строка - строка без двойных кавычек.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.СократитьДвойныеКавычки(Значение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СократитьСтрокуКонтрольнойСуммой
 Сокращает строку до нужной длины, при этом обрезанная часть хешируется,
 обеспечивая уникальность строки. Проверяет длину строки на входе и, в случае
 превышения максимальной длины, преобразует ее конец по алгоритму MD5 в
 уникальную строку из 32 символов.
Синтаксис
 Функция СократитьСтрокуКонтрольнойСуммой(Строка, МаксимальнаяДлина) Экспорт
Параметры
  Строка            - Строка - исходная строка произвольной длины.
  МаксимальнаяДлина - Число  - требуемое максимальное количество символов в строке,
                               минимальное значение: 32.
Возвращаемое значение
   Строка - строка, не превышающая максимальную длину.
Пример вызова
Результат = ОбщегоНазначения.СократитьСтрокуКонтрольнойСуммой(Строка, МаксимальнаяДлина)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СообщенияПользователю
 Получает сообщения пользователю, отфильтровывает служебные сообщения о состоянии длительной операции.
Синтаксис
 Функция СообщенияПользователю(УдалятьПолученные = Ложь, ИдентификаторЗадания = Неопределено) Экспорт
Параметры
  УдалятьПолученные    - Булево                  - Признак необходимости удаления полученных сообщений.
  ИдентификаторЗадания - УникальныйИдентификатор - Идентификатор фонового задания, соответствующего длительной 
                                                   операции, у которой требуется получить сообщения пользователю. 
                                                   Если не задан, то сообщения пользователю возвращаются
                                                   из сеанса текущего пользователя.
Возвращаемое значение
  ФиксированныйМассив - объекты СообщениеПользователю, которые были сформированы в фоновом задании.
Пример вызова
   Операция = ДлительныеОперации.ВыполнитьВФоне(...);
   ...
   Сообщения = ДлительныеОперации.СообщенияПользователю(Истина, Операция.ИдентификаторЗадания);
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СообщитьОшибкиПользователю
 Выводит накопленные методом ДобавитьОшибкуПользователю ошибки, при этом использует нужные шаблоны текстов ошибок
 в зависимости от количества однотипных ошибок.
Синтаксис
 Процедура СообщитьОшибкиПользователю(Ошибки, Отказ = Ложь) Экспорт
Параметры
  Ошибки  - Неопределено, Структура - коллекция ошибок.
  Отказ   - Булево - устанавливается Истина, если ошибки сообщались.
Пример вызова
ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СообщитьПользователю
 Формирует и выводит сообщение, которое может быть связано с элементом 
 управления формы.
Синтаксис
 Процедура СообщитьПользователю(
		Знач ТекстСообщенияПользователю,
		Знач КлючДанных = Неопределено,
		Знач Поле = "",
		Знач ПутьКДанным = "",
		Отказ = Ложь) Экспорт
Параметры
  ТекстСообщенияПользователю - Строка - текст сообщения.
  КлючДанных                 - ЛюбаяСсылка - объект или ключ записи информационной базы, к которому это сообщение относится.
  Поле                       - Строка - наименование реквизита формы.
  ПутьКДанным                - Строка - путь к данным (путь к реквизиту формы).
  Отказ                      - Булево - выходной параметр, всегда устанавливается в значение Истина.
Пример вызова
  1. Для вывода сообщения у поля управляемой формы, связанного с реквизитом объекта:
  ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
   НСтр("ru = 'Сообщение об ошибке.'"), ,
   "ПолеВРеквизитеФормыОбъект",
   "Объект");
  Альтернативный вариант использования в форме объекта:
  ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
   НСтр("ru = 'Сообщение об ошибке.'"), ,
   "Объект.ПолеВРеквизитеФормыОбъект");
  2. Для вывода сообщения рядом с полем управляемой формы, связанным с реквизитом формы:
  ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
   НСтр("ru = 'Сообщение об ошибке.'"), ,
   "ИмяРеквизитаФормы");
  3. Для вывода сообщения связанного с объектом информационной базы:
  ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
   НСтр("ru = 'Сообщение об ошибке.'"), ОбъектИнформационнойБазы, "Ответственный",,Отказ);
  4. Для вывода сообщения по ссылке на объект информационной базы:
  ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
   НСтр("ru = 'Сообщение об ошибке.'"), Ссылка, , , Отказ);
  Случаи некорректного использования:
   1. Передача одновременно параметров КлючДанных и ПутьКДанным.
   2. Передача в параметре КлючДанных значения типа отличного от допустимых.
   3. Установка ссылки без установки поля (и/или пути к данным).
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СообщитьПрогресс
 Регистрирует информацию о ходе выполнения длительной операции.
 В дальнейшем ее можно считать при помощи функции ДлительныеОперации.ПрочитатьПрогресс.
 Во избежание избыточного потребления памяти и ее утечек при выполнении одной длительной операции 
 не следует сообщать прогресс более 100 раз.
Синтаксис
 Процедура СообщитьПрогресс(Знач Процент = Неопределено, Знач Текст = Неопределено, Знач ДополнительныеПараметры = Неопределено) Экспорт
Параметры
  Процент                 - Число        - Процент выполнения.
  Текст                   - Строка       - Информация о текущей операции.
  ДополнительныеПараметры - Произвольный - Любая дополнительная информация, которую необходимо передать на клиент. 
                                           Значение должно быть простым (сериализуемым в XML строку).
Пример вызова
ДлительныеОперации.СообщитьПрогресс(Процент, Текст, ДополнительныеПараметры)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СохранитьПерсональныеНастройки
1. Для вызова с клиента
 Сохраняет персональные настройки пользователя.
Синтаксис
 Процедура СохранитьПерсональныеНастройки(Настройки) Экспорт
Параметры
 Настройки - Структура - коллекция настроек:
  * НапоминатьОбУстановкеРасширенияРаботыСФайлами  - Булево - Признак необходимости
                                                               напоминания об установке расширения.
  * ЗапрашиватьПодтверждениеПриЗавершенииПрограммы - Булево - Запрашивать подтверждение по завершении работы.
Пример вызова
ОбщегоНазначенияКлиент.СохранитьПерсональныеНастройки(Настройки)
Доступность
 Тонкий клиент, Толстый клиент

2. Для вызова с сервера
 Сохраняет персональные настройки пользователя, относящиеся к подсистеме БазоваяФункциональность.
 Для получения настроек предусмотрены следующие функции:
  - ОбщегоНазначенияКлиент.ПредлагатьУстановкуРасширенияРаботыСФайлами(),
  - СтандартныеПодсистемыСервер.ЗапрашиватьПодтверждениеПриЗавершенииПрограммы().
Синтаксис
 Процедура СохранитьПерсональныеНастройки(Настройки) Экспорт
Параметры
 Настройки - Структура - коллекция настроек:
  * НапоминатьОбУстановкеРасширенияРаботыСФайлами  - Булево - Признак необходимости
                                                               напоминания об установке расширения.
  * ЗапрашиватьПодтверждениеПриЗавершенииПрограммы - Булево - Запрашивать подтверждение по завершении работы.
Пример вызова
ОбщегоНазначения.СохранитьПерсональныеНастройки(Настройки)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СпискиЗначенийИдентичны
 Сравнивает элементы списков значений или массивов по значениям.
Синтаксис
 Функция СпискиЗначенийИдентичны(Список1, Список2) Экспорт
Параметры
  Список1 - Массив, СписокЗначений - сравниваемая коллекция элементов.
  Список2 - Массив, СписокЗначений - сравниваемая коллекция элементов.
Возвращаемое значение
  Булево - Истина, если идентичны.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СпискиЗначенийИдентичны(Список1, Список2)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СравнитьВерсии
 Сравнить две строки версий.
Синтаксис
 Функция СравнитьВерсии(Знач СтрокаВерсии1, Знач СтрокаВерсии2) Экспорт
Параметры
  СтрокаВерсии1  - Строка - номер версии в формате РР.{П|ПП}.ЗЗ.СС.
  СтрокаВерсии2  - Строка - второй сравниваемый номер версии.
Возвращаемое значение
   Число   - больше 0, если СтрокаВерсии1 > СтрокаВерсии2; 0, если версии равны.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СравнитьВерсии(СтрокаВерсии1, СтрокаВерсии2)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СравнитьВерсииБезНомераСборки
 Сравнить две строки версий.
Синтаксис
 Функция СравнитьВерсииБезНомераСборки(Знач СтрокаВерсии1, Знач СтрокаВерсии2) Экспорт
Параметры
  СтрокаВерсии1  - Строка - номер версии в формате РР.{П|ПП}.ЗЗ.
  СтрокаВерсии2  - Строка - второй сравниваемый номер версии.
Возвращаемое значение
   Число   - больше 0, если СтрокаВерсии1 > СтрокаВерсии2; 0, если версии равны.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СравнитьВерсииБезНомераСборки(СтрокаВерсии1, СтрокаВерсии2)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СсылкаСуществует
 Проверяет физическое наличие записи в информационной базе данных о переданном значении ссылки.
Синтаксис
 Функция СсылкаСуществует(ПроверяемаяСсылка) Экспорт
Параметры
  ПроверяемаяСсылка - ЛюбаяСсылка - значение любой ссылки информационной базы данных.
Возвращаемое значение
  Булево - Истина, если существует.
Пример вызова
Результат = ОбщегоНазначения.СсылкаСуществует(ПроверяемаяСсылка)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СтраховойНомерПФРСоответствуетТребованиям
 Проверяет номер страхового свидетельства на соответствие требованиям ПФР.
Синтаксис
 Функция СтраховойНомерПФРСоответствуетТребованиям(Знач СтраховойНомер, ТекстСообщения) Экспорт
Параметры
  СтраховойНомер - Строка - страховой номер ПФР. Строка должна быть ведена по шаблону "999-999-999 99".
  ТекстСообщения - Строка - текст сообщения об ошибке ввода страхового номера.
Возвращаемое значение
  Булево - Истина, если соответствует.
Пример вызова
Результат = РегламентированныеДанныеКлиентСервер.СтраховойНомерПФРСоответствуетТребованиям(СтраховойНомер, ТекстСообщения)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СтрокаВДату
 Преобразует исходную строку в дату.
Синтаксис
 Функция СтрокаВДату(Знач Значение) Экспорт
Параметры
  Значение - Строка - Строка, которую необходимо привести к дате.
                      Формат даты должен быть в виде "ДД.ММ.ГГГГ" или "ДД/ММ/ГГ" или "ДД-ММ-ГГ",
                      Например, "23.02.1980" или "23/02/80".
Возвращаемое значение
  Дата - полученная дата.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.СтрокаВДату(Значение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СтрокаВЧисло
 Преобразует исходную строку в число без вызова исключений.
Синтаксис
 Функция СтрокаВЧисло(Знач Значение) Экспорт
Параметры
   Значение - Строка - Строка, которую необходимо привести к числу.
                       Например, "10", "+10", "010", вернет 10;
                                 "(10)", "-10",вернет -10;
                                 "10,2", "10.2",вернет 10.2;
                                 "000", " ", "",вернет 0;
                                 "10текст", вернет Неопределено.
Возвращаемое значение
   Число, Неопределено - Полученное число, либо Неопределено, если строка не является числом.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Значение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СтрокаЛатиницей
 Преобразует исходную строку в транслит.
 Может использоваться для отправки SMS сообщений латиницей или для сохранения
 файлов и папок, чтобы обеспечить возможность их переноса между разными операционными системами.
 Обратное преобразование из латинских символов не предусмотрено.
Синтаксис
 Функция СтрокаЛатиницей(Знач Значение) Экспорт
Параметры
  Значение - Строка - произвольная строка.
Возвращаемое значение
  Строка - строка, в которой кириллица заменена на транслит.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.СтрокаЛатиницей(Значение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СтрокаСЧисломДляЛюбогоЯзыка
 Формирует представление числа для определенного языка и параметров числа.
Синтаксис
 Функция СтрокаСЧисломДляЛюбогоЯзыка(Шаблон, Число, Вид = Неопределено, ФорматнаяСтрока = Неопределено) Экспорт
Параметры
  Шаблон          - Строка - Строка, содержит перечисленные через точку с запятой 6 форм строки
                             для каждой категории числительного: 
                             - %1 обозначает позицию числа;
  Число           - Число - Число, которое будет подставлено в строку вместо параметра "%1".
  Вид             - ВидЧисловогоЗначения - Определяет вид числового значения, для которого формируется представление. 
                             - Количественное (по умолчанию) или Порядковое.
  ФорматнаяСтрока - Строка - Строка параметров форматирования. См. аналогичный параметр в СтрокаСЧислом. 
Возвращаемое значение
  Строка - Представление строки числа в требуемой форме.
Пример вызова
  // Представление параметров:
  //
  // Lang | Zero | One             | Two            | Few               | Many                  | Other
  // ============================================================================================================
  // ru   |      | XX1 / X11       |                | XX2-XX4 / X12-X14 | XX0, XX5-XX9, X11-X14 | дробные
  // Card.|      | остался %1 день |                | осталось %1 дня   | осталось %1 дней      | осталось %1 дня
  //      |      | вижу %1 рыбу    |                | вижу %1-х рыб     | вижу %5 рыб           | вижу %1 рыбы
  // ------------------------------------------------------------------------------------------------------------
  // ru   |      |                 |                |                   |                       | других нет
  // Ord. |      |                 |                |                   |                       | %1-й день 
  // ------------------------------------------------------------------------------------------------------------
  // en   |      | для 1           |                |                   |                       | остальное
  // Card.|      | left %1 day     |                |                   |                       | left %1 days
  // ------------------------------------------------------------------------------------------------------------
  // en   |      | XX1 / X11       | XX2 / X12      | XX3 / X13         |                       | остальное
  // Ord. |      | %1st day        | %1nd day       | %1rd day          |                       | %1th day.
  // Card. - Cardinal - Количественное;
  // Ord.  - Ordinal  - Порядковое;
  // X - любая цифра;
  // / - кроме.
  Строка = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
  НСтр("ru=';остался %1 день;;осталось %1 дня;осталось %1 дней;осталось %1 дня';
       |en=';left %1 day;;;;left %1 days'"), 
  0.05,, "ЧДЦ=1");
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СтрокаТаблицыЗначенийВСтруктуру
 Преобразует строку таблицы значений в структуру.
 Свойства структуры и их значения совпадают с колонками переданной строки.
Синтаксис
 Функция СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицыЗначений) Экспорт
Параметры
  СтрокаТаблицыЗначений - СтрокаТаблицыЗначений - строка таблицы значений.
Возвращаемое значение
  Структура - преобразованная строка таблицы значений.
Пример вызова
Результат = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицыЗначений)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СтрокиИзБуфераОбмена
 Получает строки табличной части, помещенные во внутренний буфер обмена с помощью СкопироватьСтрокиВБуферОбмена.
Синтаксис
 Функция СтрокиИзБуфераОбмена() Экспорт
Возвращаемое значение
  Структура - со свойствами:
     * Данные   - Произвольный - Данные из внутреннего буфера обмена.
                                 Например, ТаблицаЗначений при вызове СкопироватьСтрокиВБуферОбмена.
     * Источник - Строка       - Объект, к которому относятся данные.
                                 Если при помещении во внутренний буфер не был указан, то Неопределено.
Пример вызова
Результат = ОбщегоНазначения.СтрокиИзБуфераОбмена()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СтроковоеПредставлениеТипа
 Возвращает строковое представление типа. 
 Для ссылочных типов возвращает в формате "СправочникСсылка.ИмяОбъекта" или "ДокументСсылка.ИмяОбъекта".
 Для остальных типов приводит тип к строке, например "Число".
Синтаксис
 Функция СтроковоеПредставлениеТипа(Тип) Экспорт
Параметры
  Тип - Тип - для которого надо получить представление.
Возвращаемое значение
  Строка - представление типа.
Пример вызова
Результат = ОбщегоНазначения.СтроковоеПредставлениеТипа(Тип)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СтруктураURI
 Разбирает строку URI на составные части и возвращает в виде структуры.
 На основе RFC 3986.
Синтаксис
 Функция СтруктураURI(Знач СтрокаURI) Экспорт
Параметры
  СтрокаURI - Строка - ссылка на ресурс в формате:
                       <схема>://<логин>:<пароль>@<хост>:<порт>/<путь>?<параметры>#<якорь>.
Возвращаемое значение
  Структура - составные части URI согласно формату:
   * Схема         - Строка - схема из URI.
   * Логин         - Строка - логин из URI.
   * Пароль        - Строка - пароль из URI.
   * ИмяСервера    - Строка - часть <хост>:<порт> из URI.
   * Хост          - Строка - хост из URI.
   * Порт          - Строка - порт из URI.
   * ПутьНаСервере - Строка - часть <путь>?<параметры>#<якорь> из URI.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СтруктураURI(СтрокаURI)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СтруктураВРасписание
 Преобразует структуру в РасписаниеРегламентногоЗадания.
Синтаксис
 Функция СтруктураВРасписание(Знач СтруктураРасписания) Экспорт
Параметры
  СтруктураРасписания - Структура - расписание в виде структуры.
Возвращаемое значение
  РасписаниеРегламентногоЗадания - расписание.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СтруктураВРасписание(СтруктураРасписания)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СтруктураПараметровДляУстановкиВнешнегоСоединения
 Возвращает шаблон структуры параметров для установки внешнего соединения.
 Параметрам необходимо задать требуемые значения и передать.
 В метод ОбщегоНазначения.УстановитьВнешнееСоединение().
Синтаксис
 Функция СтруктураПараметровДляУстановкиВнешнегоСоединения() Экспорт
Возвращаемое значение
  Структура - коллекция параметров.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.СтруктураПараметровДляУстановкиВнешнегоСоединения()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

СтруктураПоМенеджеруЗаписи
 Создает структуру, содержащую имена и значения измерений, ресурсов и реквизитов
 переданного менеджера записи регистра сведений.
Синтаксис
 Функция СтруктураПоМенеджеруЗаписи(МенеджерЗаписи, МетаданныеРегистра) Экспорт
Параметры
  МенеджерЗаписи     - РегистрСведенийМенеджерЗаписи - менеджер записи, из которого надо получить структуру.
  МетаданныеРегистра - ОбъектМетаданных - метаданные регистра сведений.
Возвращаемое значение
  Структура - коллекция измерений, ресурсов и реквизитов переданного менеджеру записи.
Пример вызова
Результат = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(МенеджерЗаписи, МетаданныеРегистра)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СтруктураСвойствДинамическогоСписка
 Создать структуру свойств динамического списка для вызова УстановитьСвойстваДинамическогоСписка().
Синтаксис
 Функция СтруктураСвойствДинамическогоСписка() Экспорт
Возвращаемое значение
  Структура - любое поле может иметь значение неопределено, если оно не устанавливается:
     * ТекстЗапроса - Строка - новый текст запроса.
     * ОсновнаяТаблица - Строка - имя основной таблицы.
     * ДинамическоеСчитываниеДанных - Булево - признак использования динамического считывания.
Пример вызова
Результат = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СформироватьСтрокуДляПоискаВЗапросе
 Подготавливает строку для использования в качестве шаблона поиска в запросе.
 Экранирует служебные символы, если они есть в строке.
Синтаксис
 Функция СформироватьСтрокуДляПоискаВЗапросе(Знач СтрокаПоиска) Экспорт
Параметры
  СтрокаПоиска - Строка - произвольная строка.
Возвращаемое значение
  Строка - строка подготовленная для поиска данных в запросе.
Пример вызова
Результат = ОбщегоНазначения.СформироватьСтрокуДляПоискаВЗапросе(СтрокаПоиска)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

СформироватьСтрокуСимволов
 Формирует строку повторяющихся символов заданной длины.
Синтаксис
 Функция СформироватьСтрокуСимволов(Знач Символ, Знач ДлинаСтроки) Экспорт
Параметры
  Символ      - Строка - символ, из которого будет формироваться строка.
  ДлинаСтроки - Число  - требуемая длина результирующей строки.
Возвращаемое значение
  Строка - строка, состоящая из повторяющихся символов.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов(Символ, ДлинаСтроки)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ТаблицаЗначенийВМассив
 Преобразует таблицу значений в массив структур.
 Может использоваться для передачи на клиент данных в том случае, если таблица
 значений содержит только такие значения, которые могут
 быть переданы с сервера на клиент.
 Полученный массив содержит структуры, каждая из которых повторяет
 структуру колонок таблицы значений.
 Не рекомендуется использовать для преобразования таблиц значений
 с большим количеством строк.
Синтаксис
 Функция ТаблицаЗначенийВМассив(ТаблицаЗначений) Экспорт
Параметры
  ТаблицаЗначений - ТаблицаЗначений - исходная таблица значений.
Возвращаемое значение
  Массив - коллекция строк таблицы в виде структур.
Пример вызова
Результат = ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаЗначений)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ТекстОшибкиЗаполнения
 Формирует текст ошибок заполнения полей и списков.
Синтаксис
 Функция ТекстОшибкиЗаполнения(ВидПоля = "Поле", ВидСообщения = "Заполнение",
	ИмяПоля = "", НомерСтроки = "", ИмяСписка = "", ТекстСообщения = "") Экспорт
Параметры
  ВидПоля       - Строка - может принимать значения:
                  Поле, Колонка, Список;
  ВидСообщения  - Строка - может принимать значения:
                  Заполнение, Корректность;
  ИмяПоля        - Строка - имя поля;
  НомерСтроки    - Строка, Число - номер строки;
  ИмяСписка      - Строка - имя списка;
  ТекстСообщения - Строка - детальная расшифровка ошибки заполнения.
Возвращаемое значение
   Строка - текст ошибки заполнения.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(ВидПоля, ВидСообщения, ИмяПоля, НомерСтроки, ИмяСписка, ТекстСообщения)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ТекущаяДатаПользователя
 Возвращает значение настройки рабочей даты для пользователя или текущей даты сеанса,
 если рабочая дата пользователя не задана.
Синтаксис
 Функция ТекущаяДатаПользователя(ИмяПользователя = Неопределено) Экспорт
Параметры
 ИмяПользователя - Строка - Имя пользователя, для которого запрашивается рабочая дата.
  Если не задано, то устанавливается для текущего пользователя.
Возвращаемое значение
 Дата - Значение настройки рабочей даты пользователя или текущая дата сеанса, если настройка не задана.
Пример вызова
Результат = ОбщегоНазначения.ТекущаяДатаПользователя(ИмяПользователя)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ТипПлатформыКлиента
 Возвращает тип платформы клиента.
Синтаксис
 Функция ТипПлатформыКлиента() Экспорт
Возвращаемое значение
  ТипПлатформы, Неопределено - тип платформы на которой запущен клиент. В режиме веб-клиента, если тип 
                               платформы иной, чем описан в типе ТипПлатформы, то возвращается Неопределено.
Пример вызова
Результат = ОбщегоНазначенияКлиент.ТипПлатформыКлиента()
Доступность
 Тонкий клиент, Толстый клиент

ТолькоКириллицаВСтроке
 Проверяет, содержит ли строка только символы кириллического алфавита.
Синтаксис
 Функция ТолькоКириллицаВСтроке(Знач СтрокаПроверки, Знач УчитыватьРазделителиСлов = Истина, ДопустимыеСимволы = "") Экспорт
Параметры
  СтрокаПроверки - Строка - проверяемая строка.
  УчитыватьРазделителиСлов - Булево - учитывать ли разделители слов или они являются исключением.
  ДопустимыеСимволы - Строка - дополнительные разрешенные символы, кроме кириллицы.
Возвращаемое значение
  Булево - Истина, если строка содержит только кириллические (или допустимые) символы или пустая;
           Ложь, если строка содержит иные символы.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(СтрокаПроверки, УчитыватьРазделителиСлов, ДопустимыеСимволы)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ТолькоЛатиницаВСтроке
 Проверяет, содержит ли строка только символы латинского алфавита.
Синтаксис
 Функция ТолькоЛатиницаВСтроке(Знач СтрокаПроверки, Знач УчитыватьРазделителиСлов = Истина, ДопустимыеСимволы = "") Экспорт
Параметры
  СтрокаПроверки - Строка - проверяемая строка.
  УчитыватьРазделителиСлов - Булево - учитывать ли разделители слов или они являются исключением.
  ДопустимыеСимволы - Строка - дополнительные разрешенные символы, кроме латиницы.
Возвращаемое значение
  Булево - Истина, если строка содержит только латинские (или допустимые) символы;
         - Ложь, если строка содержит иные символы.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(СтрокаПроверки, УчитыватьРазделителиСлов, ДопустимыеСимволы)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ТолькоЦифрыВСтроке
 Проверяет, содержит ли строка только цифры.
Синтаксис
 Функция ТолькоЦифрыВСтроке(Знач Значение, Знач Устаревший = Истина, Знач ПробелыЗапрещены = Истина) Экспорт
Параметры
  Значение         - Строка - проверяемая строка.
  Устаревший       - Булево - устаревший параметр, не используется.
  ПробелыЗапрещены - Булево - если Ложь, то в строке допустимо наличие пробелов.
Возвращаемое значение
   Булево - Истина - строка содержит только цифры или пустая, Ложь - строка содержит иные символы.
Пример вызова
  Результат = СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке("0123"); // Истина
  Результат = СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке("0123abc"); // Ложь
  Результат = СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке("01 2 3",, Ложь); // Истина
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ТребуетсяОбновлениеКонфигурацииПодчиненногоУзлаРИБ
 Возвращает Истина при необходимости обновления конфигурации информационной базы подчиненного узла РИБ.
 В главном узле всегда Ложь.
Синтаксис
 Функция ТребуетсяОбновлениеКонфигурацииПодчиненногоУзлаРИБ() Экспорт
Возвращаемое значение
  Булево - Истина, если требуется.
Пример вызова
Результат = ОбщегоНазначения.ТребуетсяОбновлениеКонфигурацииПодчиненногоУзлаРИБ()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УдалитьВременныйКаталог
 Удаляет временный каталог вместе с его содержимым, если возможно.
 Если временный каталог не может быть удален (например, он занят каким-то процессом),
 то в журнал регистрации записывается соответствующее предупреждение, а процедура завершается.
 Для совместного использования с ОбщегоНазначения.СоздатьВременныйКаталог, 
 после окончания работы с временным каталогом.
Синтаксис
 Процедура УдалитьВременныйКаталог(Знач ПутьККаталогу) Экспорт
Параметры
   ПутьККаталогу - Строка - Полный путь к временному каталогу.
Пример вызова
ОбщегоНазначения.УдалитьВременныйКаталог(ПутьККаталогу)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УдалитьВсеВхожденияЗначенияИзМассива
 Удаляет все вхождения переданного значения из массива.
Синтаксис
 Процедура УдалитьВсеВхожденияЗначенияИзМассива(Массив, Значение) Экспорт
Параметры
  Массив - Массив - массив, из которого необходимо удалить значение;
  Значение - Произвольный - удаляемое значение из массива.
Пример вызова
ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(Массив, Значение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УдалитьВсеВхожденияТипаИзМассива
 Удаляет все вхождения значений указанного типа.
Синтаксис
 Процедура УдалитьВсеВхожденияТипаИзМассива(Массив, Тип) Экспорт
Параметры
  Массив - Массив - массив, из которого необходимо удалить значения;
  Тип - Тип - тип значений, которые подлежат удалению из массива.
Пример вызова
ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияТипаИзМассива(Массив, Тип)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УдалитьДанныеИзБезопасногоХранилища
 Удаляет конфиденциальные данные в безопасное хранилище.
 Вызывающий код должен самостоятельно устанавливать привилегированный режим.
 Безопасное хранилище недоступно для чтения пользователям (кроме администраторов),
 а доступно только коду, который делает обращения только к своей части данных и
 в том контексте, который предполагает чтение или запись конфиденциальных данных.
Синтаксис
 Процедура УдалитьДанныеИзБезопасногоХранилища(Владелец, Ключи = Неопределено) Экспорт
Параметры
  Владелец - ПланОбменаСсылка, СправочникСсылка, Строка - ссылка на объект информационной базы,
               представляющий объект-владелец сохраняемого пароля или строка до 128 символов.
  Ключи    - Строка - Содержит список имен удаляемых данных, указанных через запятую. 
               Неопределенно - удаляет все данные.
Пример вызова
 Процедура ПередУдалением(Отказ)
  // Проверка значения свойства ОбменДанными.Загрузка отсутствует, так как удалять данные
  // из безопасного хранилища нужно даже при удалении объекта при обмене данными.
  УстановитьПривилегированныйРежим(Истина);
  ОбщегоНазначения.УдалитьДанныеИзБезопасногоХранилища(Ссылка);
  УстановитьПривилегированныйРежим(Ложь);
 КонецПроцедуры
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УдалитьЗадание
 Удаляет РегламентноеЗадание из информационной базы.
Синтаксис
 Процедура УдалитьЗадание(Знач Идентификатор) Экспорт
Параметры
  Идентификатор - ОбъектМетаданных - объект метаданных регламентного задания для поиска
                  не предопределенного регламентного задания.
                - УникальныйИдентификатор - идентификатор регламентного задания.
                - Строка - строка уникального идентификатора регламентного задания.
                - РегламентноеЗадание - регламентное задание, которое нужно получить
                  уникальный идентификатор для получения свежей копии регламентного задания.
Пример вызова
РегламентныеЗаданияСервер.УдалитьЗадание(Идентификатор)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УдалитьЗаписиКэшаВерсий
 Удаляет записи кэша версий программных интерфейсов, содержащих в идентификаторе указанную подстроку. 
 В качестве подстроки может использоваться, например, имя интерфейса, более не используемого в конфигурации.
Синтаксис
 Процедура УдалитьЗаписиКэшаВерсий(Знач ПодстрокаПоискаИдентификаторов) Экспорт
Параметры
  ПодстрокаПоискаИдентификаторов - Строка - подстрока поиска идентификаторов. 
                                            Не может содержать символов %, _ и [.
Пример вызова
ОбщегоНазначения.УдалитьЗаписиКэшаВерсий(ПодстрокаПоискаИдентификаторов)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УдалитьЗначениеИзМассива
 Удаляет одно значение из массива.
Синтаксис
 Процедура УдалитьЗначениеИзМассива(Массив, Значение) Экспорт
Параметры
  Массив - Массив - массив, из которого необходимо удалить значение;
  Значение - Массив - удаляемое значение из массива.
Пример вызова
ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(Массив, Значение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УдалитьНедопустимыеСимволыXML
 Удаляет недопустимые символы в XML-строке.
Синтаксис
 Функция УдалитьНедопустимыеСимволыXML(Знач Текст) Экспорт
Параметры
  Текст - Строка - строка, в которой требуется удалить недопустимые символы.
Возвращаемое значение
  Строка - Строка, полученная при удалении недопустимых символов в XML-строке.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.УдалитьНедопустимыеСимволыXML(Текст)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УдалитьНепроверяемыеРеквизитыИзМассива
 Процедура удаляет из массива МассивРеквизитов элементы, соответствующие именам 
 реквизитов объекта из массива МассивНепроверяемыхРеквизитов.
 Для использования в обработчиках события ОбработкаПроверкиЗаполнения.
Синтаксис
 Процедура УдалитьНепроверяемыеРеквизитыИзМассива(МассивРеквизитов, МассивНепроверяемыхРеквизитов) Экспорт
Параметры
  МассивРеквизитов              - Массив - коллекция имен реквизитов объекта.
  МассивНепроверяемыхРеквизитов - Массив - коллекция имен реквизитов объекта, не требующих проверки.
Пример вызова
ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(МассивРеквизитов, МассивНепроверяемыхРеквизитов)
Доступность
 Сервер, Толстый клиент, Внешнее соединение
УдалитьПовторяющиесяСимволы
 Удаляет крайние повторяющиеся символы слева или справа в строке.
Синтаксис
 Функция УдалитьПовторяющиесяСимволы(Знач Значение, Знач УдаляемыйСимвол, Знач Режим = "Слева") Экспорт
Параметры
  Значение        - Строка - исходная строка, из которой необходимо удалить крайние повторяющиеся символы;
  УдаляемыйСимвол - Строка - искомый символ для удаления;
  Режим           - Строка - "Слева" или "Справа" - режим удаления символов в исходной строке.
Возвращаемое значение
  Строка - обрезанная строка.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Значение, УдаляемыйСимвол, Режим)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УдалитьПоследнийСимволВСтроке
 Удаляет из строки указанное количество символов справа.
Синтаксис
 Процедура УдалитьПоследнийСимволВСтроке(Текст, ЧислоСимволов = 1) Экспорт
Параметры
  Текст         - Строка - строка, в которой необходимо удалить последние символы;
  ЧислоСимволов - Число  - количество удаляемых символов.
Пример вызова
СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(Текст, ЧислоСимволов)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УдалитьПрофильБезопасности
 Удаляет профиль безопасности.
Синтаксис
 Процедура УдалитьПрофильБезопасности(Знач ПараметрыАдминистрированияКластера, Знач ИмяПрофиля) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ИмяПрофиля - Строка - имя профиля безопасности.
Пример вызова
АдминистрированиеКластераКлиентСервер.УдалитьПрофильБезопасности(ПараметрыАдминистрированияКластера, ИмяПрофиля)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УдалитьСеансыИнформационнойБазы
 Удаляет сеансы с информационной базой по фильтру.
Синтаксис
 Процедура УдалитьСеансыИнформационнойБазы(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено, Знач Фильтр = Неопределено) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
  Фильтр - Массив - массив структур, описывающих условия фильтрации соединений. Поля структур, входящих в массив:
             * Свойство - Строка - имя свойства, по которому осуществляется фильтрация (см. АдминистрированиеКластераКлиентСервер.СвойстваСеанса),
             * ВидСравнения - ВидСравнения - значение системного перечисления ВидСравнения,
             * Значение - Число, Строка, Дата, Булево, СписокЗначений, Массив, Структура - значение, с которым
               сравнивается значение соответствующего свойства сеанса,
         - Структура - структура: ключ - Имя свойства сеанса (см. выше), значение - значение, с которым
           выполняется сеанс. При использовании данного варианта описания фильтра сравнение всегда выполняется на равенство.
Пример вызова
АдминистрированиеКластераКлиентСервер.УдалитьСеансыИнформационнойБазы(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ, Фильтр)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УдалитьЭлементыГруппыОтбора
 Удалить элементы отбора с заданным именем поля или представлением.
Синтаксис
 Процедура УдалитьЭлементыГруппыОтбора(Знач ОбластьУдаления, Знач ИмяПоля = Неопределено, Знач Представление = Неопределено) Экспорт
Параметры
  ОбластьУдаления - КоллекцияЭлементовОтбораКомпоновкиДанных - контейнер с элементами и группами отбора,
                                                               например, Список.Отбор или группа в отборе..
  ИмяПоля         - Строка - имя поля компоновки (не используется для групп).
  Представление   - Строка - представление поля компоновки.
Пример вызова
ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ОбластьУдаления, ИмяПоля, Представление)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УдалитьЭлементыГруппыОтбораДинамическогоСписка
 Удалить элемент группы отбора динамического списка.
Синтаксис
 Процедура УдалитьЭлементыГруппыОтбораДинамическогоСписка(ДинамическийСписок, ИмяПоля = Неопределено, Представление = Неопределено) Экспорт
Параметры
  ДинамическийСписок - ДинамическийСписок - реквизит формы, для которого требуется установить отбор.
  ИмяПоля         - Строка - имя поля компоновки (не используется для групп).
  Представление   - Строка - представление поля компоновки.
Пример вызова
ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(ДинамическийСписок, ИмяПоля, Представление)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УникальныйИдентификатор
 Возвращает уникальный идентификатор регламентного задания.
  Перед вызовом требуется иметь право Администрирования или УстановитьПривилегированныйРежим.
Синтаксис
 Функция УникальныйИдентификатор(Знач Идентификатор) Экспорт
Параметры
  Идентификатор - ОбъектМетаданных - объект метаданных регламентного задания для поиска
                  регламентного задания.
                - УникальныйИдентификатор - идентификатор регламентного задания.
                - Строка - строка уникального идентификатора регламентного задания.
                - РегламентноеЗадание - регламентное задание.
Возвращаемое значение
  УникальныйИдентификатор - УИ объекта регламентного задания.
Пример вызова
Результат = РегламентныеЗаданияСервер.УникальныйИдентификатор(Идентификатор)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УстановитьБлокировкуРегламентныхЗаданийИнформационнойБазы
 Устанавливает новое состояние блокировки регламентных заданий для информационной базы.
Синтаксис
 Процедура УстановитьБлокировкуРегламентныхЗаданийИнформационнойБазы(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ, Знач БлокировкаРегламентныхЗаданий) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера,
  БлокировкаРегламентныхЗаданий - Булево - флаг установки блокировки регламентных заданий информационной базы.
Пример вызова
АдминистрированиеКластераКлиентСервер.УстановитьБлокировкуРегламентныхЗаданийИнформационнойБазы(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ, БлокировкаРегламентныхЗаданий)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьБлокировкуСеансовИЗаданийИнформационнойБазы
 Устанавливает новое состояние блокировки сеансов и регламентных заданий для информационной базы.
Синтаксис
 Процедура УстановитьБлокировкуСеансовИЗаданийИнформационнойБазы(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ, Знач СвойстваБлокировкиСеансовИЗаданий) Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
  СвойстваБлокировкиСеансовИЗаданий - Структура - см. АдминистрированиеКластераКлиентСервер.СвойстваБлокировкиСеансовИРегламентныхЗаданий.
Пример вызова
АдминистрированиеКластераКлиентСервер.УстановитьБлокировкуСеансовИЗаданийИнформационнойБазы(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ, СвойстваБлокировкиСеансовИЗаданий)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьВнешнееСоединение
 Устанавливает внешнее соединение с информационной базой по переданным параметрам подключения и возвращает указатель
 на это соединение.
Синтаксис
 Функция УстановитьВнешнееСоединение(Параметры, СтрокаСообщенияОбОшибке = "", ОшибкаПодключенияКомпоненты = Ложь) Экспорт
Параметры
  Параметры - Структура - параметры для установки внешнего соединения с информационной базой.
                          Свойства см. в функции
                          ОбщегоНазначенияКлиентСервер.СтруктураПараметровДляУстановкиВнешнегоСоединения):
    * ВариантРаботыИнформационнойБазы             - Число - Вариант работы информационной базы: 0 - файловый; 1 -
                                                            клиент-серверный;
    * КаталогИнформационнойБазы                   - Строка - Каталог информационной базы для файлового режима работы;
    * ИмяСервера1СПредприятия                     - Строка - Имя сервера1С:Предприятия;
    * ИмяИнформационнойБазыНаСервере1СПредприятия - Строка - Имя информационной базы на сервере1С:Предприятия;
    * АутентификацияОперационнойСистемы           - Булево - Признак аутентификации операционной системы при создании
                                                             внешнего подключения к информационной базе;
    * ИмяПользователя                             - Строка - Имя пользователя информационной базы;
    * ПарольПользователя                          - Строка - Пароль пользователя информационной базы.
  СтрокаСообщенияОбОшибке - Строка - если в процессе установки внешнего соединения возникает ошибка,
                                     то подробное описание ошибки помещается в этот параметр.
  ОшибкаПодключенияКомпоненты - Булево - (возвращаемый параметр) устанавливается Истина, если была ошибка при подключении.
Возвращаемое значение
  COMОбъект, Неопределенно - в случае успешной установки внешнего соединения возвращается указатель на COM-объект соединения;
    в случае ошибки возвращается Неопределенно.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.УстановитьВнешнееСоединение(Параметры, СтрокаСообщенияОбОшибке, ОшибкаПодключенияКомпоненты)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьВнешнееСоединениеСБазой
 Устанавливает внешнее соединение с информационной базой по переданным параметрам подключения и возвращает указатель
 на это соединение.
Синтаксис
 Функция УстановитьВнешнееСоединениеСБазой(Параметры) Экспорт
Параметры
  Параметры - Структура - параметры для установки внешнего соединения с информационной базой.
                          Свойства см. в функции
                          ОбщегоНазначенияКлиентСервер.СтруктураПараметровДляУстановкиВнешнегоСоединения):
   * ВариантРаботыИнформационнойБазы             - Число  - Вариант работы информационной базы: 0 - файловый; 1 -
                                                            клиент-серверный;
   * КаталогИнформационнойБазы                   - Строка - Каталог информационной базы для файлового режима работы;
   * ИмяСервера1СПредприятия                     - Строка - Имя сервера1С:Предприятия;
   * ИмяИнформационнойБазыНаСервере1СПредприятия - Строка - Имя информационной базы на сервере1С:Предприятия;
   * АутентификацияОперационнойСистемы           - Булево - Признак аутентификации операционной системы при создании
                                                            внешнего подключения к информационной базе;
   * ИмяПользователя                             - Строка - Имя пользователя информационной базы;
   * ПарольПользователя                          - Строка - Пароль пользователя информационной базы.
Возвращаемое значение
  Структура - информация о соединении:
    * Соединение                  - COMОбъект, Неопределено - указатель на COM-объект соединения или Неопределено в
                                    случае ошибки;
    * КраткоеОписаниеОшибки       - Строка - краткое описание ошибки;
    * ПодробноеОписаниеОшибки     - Строка - подробное описание ошибки;
    * ОшибкаПодключенияКомпоненты - Булево - флаг ошибки подключения COM.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.УстановитьВнешнееСоединениеСБазой(Параметры)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьИспользованиеРегламентногоЗадания
 Устанавливает использование регламентного задания.
 Перед вызовом требуется иметь право Администрирования или УстановитьПривилегированныйРежим.
 Не предназначена для использования в модели сервиса.
Синтаксис
 Процедура УстановитьИспользованиеРегламентногоЗадания(Знач Идентификатор, Знач Использование) Экспорт
Параметры
  Идентификатор - ОбъектМетаданных        - объект метаданных регламентного задания для поиска
                                            предопределенного регламентного задания.
                - УникальныйИдентификатор - идентификатор регламентного задания.
                - Строка                  - строка уникального идентификатора регламентного задания.
                - РегламентноеЗадание     - регламентное задание.
  Использование - Булево                  - значение использования которое нужно установить.
Пример вызова
РегламентныеЗаданияСервер.УстановитьИспользованиеРегламентногоЗадания(Идентификатор, Использование)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УстановитьКомпонентуИзМакета
 Устанавливает компоненту, выполненную по технологии Native API и COM асинхронном режиме.
 Компонента должна храниться в макете конфигурации в виде ZIP-архива.
Синтаксис
 Процедура УстановитьКомпонентуИзМакета(Оповещение, ПолноеИмяМакета, ПараметрыУстановки = Неопределено) Экспорт
Параметры
  Оповещение - ОписаниеОповещения - Описание оповещения об установке внешней компоненты:
      * Результат - Структура - результат установки компоненты:
          ** Установлено    - Булево - признак установки.
          ** ОписаниеОшибки - Строка - краткое описание ошибки. При отмене пользователем пустая строка.
      * ДополнительныеПараметры - Структура - значение, которое было указано при создании объекта ОписаниеОповещения.
  ПолноеИмяМакета    - Строка                  - полное имя макета, используемое как местоположение компоненты.
  ПараметрыУстановки - Структура, Неопределено - см. функцию ПараметрыУстановкиКомпоненты.
Пример вызова
  Оповещение = Новый ОписаниеОповещения("УстановитьКомпонентуЗавершение", ЭтотОбъект);
  ПараметрыУстановки = ОбщегоНазначенияКлиент.ПараметрыУстановкиКомпоненты();
  ПараметрыУстановки.ТекстПояснения = НСтр("ru = 'Для оформления заявления на выпуск сертификата требуется
                                           |внешняя компонента «Криптография (CryptS)».'");
  ОбщегоНазначенияКлиент.УстановитьКомпонентуИзМакета(Оповещение,
      "Обработка.ЗаявлениеНаВыпускНовогоКвалифицированногоСертификата.Макет.КомпонентаОбмена",
      ПараметрыУстановки);
  &НаКлиенте
  Процедура УстановитьКомпонентуЗавершение(Результат, ДополнительныеПараметры) Экспорт
      Если Не Результат.Установлено И Не ПустаяСтрока(Результат.ОписаниеОшибки) Тогда 
          ПоказатьПредупреждение(, Результат.ОписаниеОшибки);
      КонецЕсли;
  КонецПроцедуры
Доступность
 Тонкий клиент, Толстый клиент

УстановитьОтображениеЗаголовковГрупп
 Устанавливает жирное оформление шрифта заголовков групп формы для их корректного отображения в интерфейсе 8.2.
 В интерфейсе Такси заголовки групп с обычным выделением и без выделения выводится большим шрифтом.
 В интерфейсе 8.2 такие заголовки выводятся как обычные надписи и не ассоциируются с заголовками.
 Эта функция предназначена для визуального выделения (жирным шрифтом) заголовков групп в режиме интерфейса 8.2.
Синтаксис
 Процедура УстановитьОтображениеЗаголовковГрупп(Форма, ИменаГрупп = "") Экспорт
Параметры
  Форма - УправляемаяФорма - форма для изменения шрифта заголовков групп;
  ИменаГрупп - Строка - список имен групп формы, разделенных запятыми. Если имена групп не указаны,
                        то оформление будет применено ко всем группам на форме.
Пример вызова
  Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    СтандартныеПодсистемыСервер.УстановитьОтображениеЗаголовковГрупп(ЭтотОбъект);
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УстановитьПараметрДинамическогоСписка
 Установить или обновить значение параметра ИмяПараметра динамического списка Список.
Синтаксис
 Процедура УстановитьПараметрДинамическогоСписка(Список, ИмяПараметра, Значение, Использование = Истина) Экспорт
Параметры
  Список          - ДинамическийСписок - реквизит формы, для которого требуется установить параметр.
  ИмяПараметра    - Строка             - имя параметра динамического списка.
  Значение        - Произвольный        - новое значение параметра.
  Использование   - Булево             - признак использования параметра.
Пример вызова
ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, ИмяПараметра, Значение, Использование)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьПараметрыАдминистрирования
 Сохраняет параметры администрирования информационной базы и кластера серверов.
 При сохранении поля, содержащие пароли, будут очищены в целях безопасности.
Синтаксис
 Процедура УстановитьПараметрыАдминистрирования(ПараметрыАдминистрированияИБ) Экспорт
Параметры
  ПараметрыАдминистрированияИБ - Структура - см. функция ПараметрыАдминистрирования.
Пример вызова
  ПараметрыАдминистрирования = СтандартныеПодсистемыСервер.ПараметрыАдминистрирования();
  // Вывод параметров администрирования администратору для подтверждения корректности и ввода паролей.
  // Далее выполнение действий, связанных с подключением к кластеру серверов.
  СтандартныеПодсистемыСервер.ПараметрыАдминистрирования(ПараметрыАдминистрирования);
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УстановитьПрофильБезопасностиБезопасногоРежимаИнформационнойБазы
 Назначает для информационной базы использование профиля безопасности безопасного режима.
Синтаксис
 Процедура УстановитьПрофильБезопасностиБезопасногоРежимаИнформационнойБазы(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено, Знач ИмяПрофиля = "") Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
  ИмяПрофиля - Строка - имя профиля безопасности. Если передана пустая строка - для информационной базы будет
    отключено использование профиля безопасности безопасного режима.
Пример вызова
АдминистрированиеКластераКлиентСервер.УстановитьПрофильБезопасностиБезопасногоРежимаИнформационнойБазы(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ, ИмяПрофиля)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьПрофильБезопасностиИнформационнойБазы
 Назначает для информационной базы использование профиля безопасности.
Синтаксис
 Процедура УстановитьПрофильБезопасностиИнформационнойБазы(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ = Неопределено, Знач ИмяПрофиля = "") Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  ПараметрыАдминистрированияИБ - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияИнформационнойБазыКластера.
    Параметр может быть опущен в том случае, если аналогичные поля были указаны в структуре, переданной
    в качестве значения параметра ПараметрыАдминистрированияКластера.
  ИмяПрофиля - Строка - имя профиля безопасности. Если передана пустая строка - для информационной базы будет
    отключено использование профиля безопасности.
Пример вызова
АдминистрированиеКластераКлиентСервер.УстановитьПрофильБезопасностиИнформационнойБазы(ПараметрыАдминистрированияКластера, ПараметрыАдминистрированияИБ, ИмяПрофиля)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьРабочуюДатуПользователя
 Сохраняет настройку рабочей даты пользователя.
Синтаксис
 Процедура УстановитьРабочуюДатуПользователя(НоваяРабочаяДата, ИмяПользователя = Неопределено) Экспорт
Параметры
 НоваяРабочаяДата - Дата - Дата, которую необходимо установить в качестве рабочей даты пользователя.
 ИмяПользователя - Строка - Имя пользователя, для которого устанавливается рабочая дата.
  Если не задано, то устанавливается для текущего пользователя.
Пример вызова
ОбщегоНазначения.УстановитьРабочуюДатуПользователя(НоваяРабочаяДата, ИмяПользователя)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УстановитьРасписаниеРегламентногоЗадания
 Устанавливает расписание регламентного задания.
 Перед вызовом требуется иметь право Администрирования или УстановитьПривилегированныйРежим.
 Не предназначена для использования в модели сервиса.
Синтаксис
 Процедура УстановитьРасписаниеРегламентногоЗадания(Знач Идентификатор, Знач Расписание) Экспорт
Параметры
  Идентификатор - ОбъектМетаданных - объект метаданных регламентного задания для поиска
                  предопределенного регламентного задания.
                - УникальныйИдентификатор - идентификатор регламентного задания.
                - Строка - строка уникального идентификатора регламентного задания.
                - РегламентноеЗадание - регламентное задание.
  Расписание    - РасписаниеРегламентногоЗадания - расписание.
                - Структура - значение возвращаемое функцией РасписаниеВСтруктуру
                  общего модуля ОбщегоНазначенияКлиентСервер.
Пример вызова
РегламентныеЗаданияСервер.УстановитьРасписаниеРегламентногоЗадания(Идентификатор, Расписание)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УстановитьРасширенныйЗаголовокПриложения
 Устанавливает заголовок главного окна приложения, используя значение константы
 ЗаголовокПриложения и заголовок приложения по умолчанию.
Синтаксис
 Процедура УстановитьРасширенныйЗаголовокПриложения(ПриЗапуске = Ложь) Экспорт
Параметры
   ПриЗапуске - Булево - Истина, если вызывается при начале работы программы.
Пример вызова
СтандартныеПодсистемыКлиент.УстановитьРасширенныйЗаголовокПриложения(ПриЗапуске)
Доступность
 Тонкий клиент, Толстый клиент

УстановитьРеквизитФормыПоПути
 Устанавливает значение реквизиту формы.
Синтаксис
 Процедура УстановитьРеквизитФормыПоПути(Форма, ПутьРеквизита, Значение, ТолькоЕслиНеЗаполнен = Ложь) Экспорт
Параметры
  Форма - УправляемаяФорма - форма-владелец реквизита.
  ПутьРеквизита - Строка - путь к данным, например: "Объект.МесяцНачисления".
  Значение - Произвольный - устанавливаемое значение.
  ТолькоЕслиНеЗаполнен - Булево - позволяет не устанавливать значение реквизита,
                                  если у него уже установлено какое-то значение.
Пример вызова
ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(Форма, ПутьРеквизита, Значение, ТолькоЕслиНеЗаполнен)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьСвойстваДинамическогоСписка
 Установить текст запроса, основную таблицу или динамическое считывание в динамическом списке.
 Устанавливать эти свойства следует за один вызов этой процедуры, чтобы не снижалась производительность.
Синтаксис
 Процедура УстановитьСвойстваДинамическогоСписка(Список, СтруктураПараметров) Экспорт
Параметры
  Список - ТаблицаФормы - элемент формы динамического списка, для которого устанавливаются свойства.
  СтруктураПараметров - Структура - см. СтруктураСвойствДинамическогоСписка().
Пример вызова
ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Список, СтруктураПараметров)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УстановитьСвойстваПрофиляБезопасности
 Устанавливает свойства для существующего профиля безопасности по переданному описанию.
Синтаксис
 Процедура УстановитьСвойстваПрофиляБезопасности(Знач ПараметрыАдминистрированияКластера, Знач СвойстваПрофиляБезопасности)  Экспорт
Параметры
  ПараметрыАдминистрированияКластера - Структура - см. АдминистрированиеКластераКлиентСервер.ПараметрыАдминистрированияКластера,
  СвойстваПрофиляБезопасности - Структура - см. АдминистрированиеКластераКлиентСервер.СвойстваПрофиляБезопасности.
Пример вызова
АдминистрированиеКластераКлиентСервер.УстановитьСвойстваПрофиляБезопасности(ПараметрыАдминистрированияКластера, СвойстваПрофиляБезопасности)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьСвойствоЭлементаФормы
 Устанавливает свойство ИмяСвойства элемента формы с именем ИмяЭлемента в значение Значение.
 Применяется в тех случаях, когда элемент формы может не быть на форме из-за отсутствия прав у пользователя
 на объект, реквизит объекта или команду.
Синтаксис
 Процедура УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ИмяЭлемента, ИмяСвойства, Значение) Экспорт
Параметры
  ЭлементыФормы - ВсеЭлементФормы, ЭлементыФормы - коллекция элементов управляемой формы.
  ИмяЭлемента   - Строка       - имя элемента формы.
  ИмяСвойства   - Строка       - имя устанавливаемого свойства элемента формы.
  Значение      - Произвольный - новое значение элемента.
Пример вызова
ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ИмяЭлемента, ИмяСвойства, Значение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьСостояниеПоляТабличногоДокумента
 Процедура управляет состояние поля табличного документа.
Синтаксис
 Процедура УстановитьСостояниеПоляТабличногоДокумента(ПолеТабличногоДокумента, Состояние = "НеИспользовать") Экспорт
Параметры
  ПолеТабличногоДокумента - ПолеФормы - поле формы с видом ПолеТабличногоДокумента,
                            для которого необходимо установить состояние.
  Состояние               - Строка - задает вид состояния.
Пример вызова
ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(ПолеТабличногоДокумента, Состояние)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьУсловноеОформлениеПоляДата
 Устанавливает представление поля Дата в списках, содержащих реквизит с составом даты Дата и время.
 Подробнее см. стандарт "Поле "Дата" в списках".
Синтаксис
 Процедура УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, 
	ПолноеИмяРеквизита = "Список.Дата", ИмяЭлемента = "Дата") Экспорт
Параметры
   ЭтотОбъект - УправляемаяФорма - Форма со списком.
   ПолноеИмяРеквизита - Строка - Полный путь к реквизиту типа "Дата" в формате "<ИмяСписка>.<ИмяПоля>".
   ИмяЭлемента - Строка - Имя элемента формы, связанного с реквизитом списка типа "Дата".
Пример вызова
 Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
  СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект);
Доступность
 Сервер, Толстый клиент, Внешнее соединение

УстановитьЭлементОтбора
 Добавить или заменить существующий элемент отбора.
Синтаксис
 Процедура УстановитьЭлементОтбора(ОбластьПоискаДобавления,
								Знач ИмяПоля,
								Знач ПравоеЗначение = Неопределено,
								Знач ВидСравнения = Неопределено,
								Знач Представление = Неопределено,
								Знач Использование = Неопределено,
								Знач РежимОтображения = Неопределено,
								Знач ИдентификаторПользовательскойНастройки = Неопределено) Экспорт
Параметры
  ОбластьПоискаДобавления - КоллекцияЭлементовОтбораКомпоновкиДанных - контейнер с элементами и группами отбора,
                                     например, Список.Отбор или группа в отборе.
  ИмяПоля                 - Строка - имя поля компоновки данных (заполняется всегда).
  ПравоеЗначение          - произвольный - сравниваемое значение.
  ВидСравнения            - ВидСравненияКомпоновкиДанных - вид сравнения.
  Представление           - Строка - представление элемента компоновки данных.
  Использование           - Булево - использование элемента.
  РежимОтображения        - РежимОтображенияЭлементаНастройкиКомпоновкиДанных - режим отображения.
  ИдентификаторПользовательскойНастройки - Строка - см. ОтборКомпоновкиДанных.ИдентификаторПользовательскойНастройки
                                                    в синтакс-помощнике.
Пример вызова
ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ОбластьПоискаДобавления, ИмяПоля, ПравоеЗначение, ВидСравнения, Представление, Использование, РежимОтображения, ИдентификаторПользовательскойНастройки)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьЭлементОтбораДинамическогоСписка
 Добавить или заменить существующий элемент отбора динамического списка.
Синтаксис
 Процедура УстановитьЭлементОтбораДинамическогоСписка(ДинамическийСписок, ИмяПоля,
	ПравоеЗначение = Неопределено,
	ВидСравнения = Неопределено,
	Представление = Неопределено,
	Использование = Неопределено,
	РежимОтображения = Неопределено,
	ИдентификаторПользовательскойНастройки = Неопределено) Экспорт
Параметры
   ДинамическийСписок - ДинамическийСписок - Список, в котором требуется установить отбор.
   ИмяПоля            - Строка - Поле, по которому необходимо установить отбор.
   ПравоеЗначение     - Произвольный - Значение отбора.
       Необязательный. Значение по умолчанию: Неопределено.
       Внимание! Если передать Неопределено, то значение не будет изменено.
   ВидСравнения  - ВидСравненияКомпоновкиДанных - Условие отбора.
   Представление - Строка - Представление элемента компоновки данных.
       Необязательный. Значение по умолчанию: Неопределено.
       Если указано, то выводится только флажок использования с указанным представлением (значение не выводится).
       Для очистки (чтобы значение снова выводилось) следует передать пустую строку.
   Использование - Булево - Флажок использования этого отбора.
       Необязательный. Значение по умолчанию: Неопределено.
   РежимОтображения - РежимОтображенияЭлементаНастройкиКомпоновкиДанных - Способ отображения этого отбора
                                                                          пользователю.
       * РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ - В группе быстрых настроек над списком.
       * РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный       - В настройка списка (в подменю Еще).
       * РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный   - Запретить пользователю менять этот отбор.
   ИдентификаторПользовательскойНастройки - Строка - Уникальный идентификатор этого отбора.
       Используется для связи с пользовательскими настройками.
Пример вызова
ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ДинамическийСписок, ИмяПоля, ПравоеЗначение, ВидСравнения, Представление, Использование, РежимОтображения, ИдентификаторПользовательскойНастройки)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

УстановитьЭлементОтбораДинамическогоСписка
 Добавить или заменить существующий элемент отбора динамического списка.
Синтаксис
 Процедура УстановитьЭлементОтбораДинамическогоСписка(ДинамическийСписок, ИмяПоля,
	ПравоеЗначение = Неопределено,
	ВидСравнения = Неопределено,
	Представление = Неопределено,
	Использование = Неопределено,
	РежимОтображения = Неопределено,
	ИдентификаторПользовательскойНастройки = Неопределено) Экспорт
Параметры
   ДинамическийСписок - ДинамическийСписок - Список, в котором требуется установить отбор.
   ИмяПоля            - Строка - Поле, по которому необходимо установить отбор.
   ПравоеЗначение     - Произвольный - Значение отбора.
       Необязательный. Значение по умолчанию: Неопределено.
       Внимание! Если передать Неопределено, то значение не будет изменено.
   ВидСравнения  - ВидСравненияКомпоновкиДанных - Условие отбора.
   Представление - Строка - Представление элемента компоновки данных.
       Необязательный. Значение по умолчанию: Неопределено.
       Если указано, то выводится только флажок использования с указанным представлением (значение не выводится).
       Для очистки (чтобы значение снова выводилось) следует передать пустую строку.
   Использование - Булево - Флажок использования этого отбора.
       Необязательный. Значение по умолчанию: Неопределено.
   РежимОтображения - РежимОтображенияЭлементаНастройкиКомпоновкиДанных - Способ отображения этого отбора
                                                                          пользователю.
       * РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ - В группе быстрых настроек над списком.
       * РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный       - В настройка списка (в подменю Еще).
       * РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный   - Запретить пользователю менять этот отбор.
   ИдентификаторПользовательскойНастройки - Строка - Уникальный идентификатор этого отбора.
       Используется для связи с пользовательскими настройками.
Пример вызова
ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ДинамическийСписок, ИмяПоля, ПравоеЗначение, ВидСравнения, Представление, Использование, РежимОтображения, ИдентификаторПользовательскойНастройки)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ФамилияИнициалы
 Формирует краткое представление из полного имени физического лица.
Синтаксис
 Функция ФамилияИнициалы(Знач ФамилияИмяОтчество) Экспорт
Параметры
  ФамилияИмяОтчество - Строка - полное имя в виде "Фамилия Имя Отчество";
                     - Структура - части полного имени:
                        * Фамилия  - Строка - фамилия;
                        * Имя      - Строка - имя;
                        * Отчество - Строка - отчество.
Возвращаемое значение
  Строка - фамилия и инициалы. Например, "Пупкин В. И.".
Пример вызова
  Результат = ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица("Пупкин Василий Иванович"); 
  - возвращает "Пупкин В. И.".
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ФиксированныеДанные
 Фиксирует данные типов Структура, Соответствие, Массив с учетом вложенности.
Синтаксис
 Функция ФиксированныеДанные(Данные, ВызыватьИсключение = Истина) Экспорт
Параметры
  Данные - Структура, Соответствие, Массив - коллекции, значения которых являются примитивными типами,
           хранилищем значения или не могут быть изменены. Поддерживаются типы значений:
           Булево, Строка, Число, Дата, Неопределено, УникальныйИдентификатор, Null, Тип,
           ХранилищеЗначения, ОбщийМодуль, ОбъектМетаданных, ТипЗначенияXDTO, ТипОбъектаXDTO,
           ЛюбаяСсылка.
  ВызыватьИсключение - Булево - начальное значение Истина. Когда установлено Ложь, тогда в случае наличия
                                нефиксируемых данных исключение не будет вызвано, при этом данные будут
                                зафиксированы на сколько возможно.
Возвращаемое значение
  ФиксированнаяСтруктура, ФиксированноеСоответствие, ФиксированныйМассив - фиксированные данные, аналогичные
  переданным в параметре Данные.
Пример вызова
Результат = ОбщегоНазначения.ФиксированныеДанные(Данные, ВызыватьИсключение)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ФИОНаписаноВерно
 Проверяет, верно ли написано ФИО физического лица. 
 ФИО считается верным, если содержит только кириллицу, либо только латиницу.
Синтаксис
 Функция ФИОНаписаноВерно(Знач ФИО, ТолькоКириллица = Ложь) Экспорт
Параметры
  ФИО - Строка - фамилия, имя и отчество. Например, "Пупкин Василий Иванович".
  ТолькоКириллица - Булево - при проверке допустимой будет только кириллица в ФИО.
Возвращаемое значение
  Булево - Истина, если ФИО написано верно.
Пример вызова
Результат = ФизическиеЛицаКлиентСервер.ФИОНаписаноВерно(ФИО, ТолькоКириллица)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ФорматированнаяСтрока
 Форматирует строку в соответствии с заданным шаблоном.
 Возможные значения тегов в шаблоне:
 - <b> Строка </b> - выделяет строку жирным шрифтом.
 - <a href = "Ссылка"> Строка </a> - добавляет гиперссылку.
 Например, "Минимальная версия программы <b>1.1</b>. <a href = "Обновление">Обновите</a> программу.".
Синтаксис
 Функция ФорматированнаяСтрока(Знач СтрокаСТегами) Экспорт
Параметры
  СтрокаСТегами - Строка - строка, содержащая теги форматирования.
Возвращаемое значение
  ФорматированнаяСтрока - преобразованная строка.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.ФорматированнаяСтрока(СтрокаСТегами)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ХранилищеНастроекДанныхФормЗагрузить
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ХранилищеНастроекДанныхФормЗагрузить.
Синтаксис
 Функция ХранилищеНастроекДанныхФормЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию = Неопределено,
			ОписаниеНастроек = Неопределено,
			ИмяПользователя = Неопределено) Экспорт
Пример вызова
Результат = ОбщегоНазначенияВызовСервера.ХранилищеНастроекДанныхФормЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию, ОписаниеНастроек, ИмяПользователя)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Загружает настройку из хранилища настроек данных форм, как метод платформы Загрузить,
 объектов СтандартноеХранилищеНастроекМенеджер или ХранилищеНастроекМенеджер.<Имя хранилища>,
 но с поддержкой длины ключа настроек более 128 символов путем хеширования части,
 которая превышает 96 символов.
 Кроме того, возвращает указанное значение по умолчанию, если настройки не найдены.
 Если нет права СохранениеДанныхПользователя, возвращается значение по умолчанию без ошибки.
 В возвращаемом значении очищаются ссылки на несуществующий объект в базе данных, а именно
 - возвращаемая ссылка заменяется на указанное значение по умолчанию;
 - из данных типа Массив ссылки удаляются;
 - у данных типа Структура и Соответствие ключ не меняется, а значение устанавливается Неопределено;
 - анализ значений в данных типа Массив, Структура, Соответствие выполняется рекурсивно.
Синтаксис
 Функция ХранилищеНастроекДанныхФормЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию = Неопределено, 
			ОписаниеНастроек = Неопределено, ИмяПользователя = Неопределено) Экспорт
Параметры
   КлючОбъекта          - Строка           - см. синтакс-помощник платформы.
   КлючНастроек         - Строка           - см. синтакс-помощник платформы.
   ЗначениеПоУмолчанию  - Произвольный     - значение, которое возвращается, если настройки не найдены.
                                             Если не указано, возвращается значение Неопределено.
   ОписаниеНастроек     - ОписаниеНастроек - см. синтакс-помощник платформы.
   ИмяПользователя      - Строка           - см. синтакс-помощник платформы.
Возвращаемое значение
   Произвольный - см. синтакс-помощник платформы.
Пример вызова
Результат = ОбщегоНазначения.ХранилищеНастроекДанныхФормЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию, ОписаниеНастроек, ИмяПользователя)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ХранилищеНастроекДанныхФормСохранить
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ХранилищеНастроекДанныхФормСохранить.
Синтаксис
 Процедура ХранилищеНастроекДанныхФормСохранить(КлючОбъекта, КлючНастроек, Настройки,
			ОписаниеНастроек = Неопределено,
			ИмяПользователя = Неопределено,
			ОбновитьПовторноИспользуемыеЗначения = Ложь) Экспорт
Пример вызова
ОбщегоНазначенияВызовСервера.ХранилищеНастроекДанныхФормСохранить(КлючОбъекта, КлючНастроек, Настройки, ОписаниеНастроек, ИмяПользователя, ОбновитьПовторноИспользуемыеЗначения)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Сохраняет настройку в хранилище настроек данных форм, как метод платформы Сохранить,
 объектов СтандартноеХранилищеНастроекМенеджер или ХранилищеНастроекМенеджер.<Имя хранилища>,
 но с поддержкой длины ключа настроек более 128 символов путем хеширования части,
 которая превышает 96 символов.
 Если нет права СохранениеДанныхПользователя, сохранение пропускается без ошибки.
Синтаксис
 Процедура ХранилищеНастроекДанныхФормСохранить(КлючОбъекта, КлючНастроек, Настройки,
			ОписаниеНастроек = Неопределено,
			ИмяПользователя = Неопределено, 
			ОбновитьПовторноИспользуемыеЗначения = Ложь) Экспорт
Параметры
   КлючОбъекта       - Строка           - см. синтакс-помощник платформы.
   КлючНастроек      - Строка           - см. синтакс-помощник платформы.
   Настройки         - Произвольный     - см. синтакс-помощник платформы.
   ОписаниеНастроек  - ОписаниеНастроек - см. синтакс-помощник платформы.
   ИмяПользователя   - Строка           - см. синтакс-помощник платформы.
   ОбновитьПовторноИспользуемыеЗначения - Булево - выполнить одноименный метод платформы.
Пример вызова
ОбщегоНазначения.ХранилищеНастроекДанныхФормСохранить(КлючОбъекта, КлючНастроек, Настройки, ОписаниеНастроек, ИмяПользователя, ОбновитьПовторноИспользуемыеЗначения)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ХранилищеНастроекДанныхФормУдалить
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ХранилищеНастроекДанныхФормУдалить.
Синтаксис
 Процедура ХранилищеНастроекДанныхФормУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя) Экспорт
Пример вызова
ОбщегоНазначенияВызовСервера.ХранилищеНастроекДанныхФормУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Удаляет настройку из хранилища настроек данных форм, как метод платформы Удалить,
 объектов СтандартноеХранилищеНастроекМенеджер или ХранилищеНастроекМенеджер.<Имя хранилища>,
 но с поддержкой длины ключа настроек более 128 символов путем хеширования части,
 которая превышает 96 символов.
 Если нет права СохранениеДанныхПользователя, удаление пропускается без ошибки.
Синтаксис
 Процедура ХранилищеНастроекДанныхФормУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя) Экспорт
Параметры
   КлючОбъекта     - Строка, Неопределено - см. синтакс-помощник платформы.
   КлючНастроек    - Строка, Неопределено - см. синтакс-помощник платформы.
   ИмяПользователя - Строка, Неопределено - см. синтакс-помощник платформы.
Пример вызова
ОбщегоНазначения.ХранилищеНастроекДанныхФормУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя)
Доступность
 Сервер, Толстый клиент, Внешнее соединение
ХранилищеОбщихНастроекЗагрузить
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить.
Синтаксис
 Функция ХранилищеОбщихНастроекЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию = Неопределено,
			ОписаниеНастроек = Неопределено,
			ИмяПользователя = Неопределено) Экспорт
Пример вызова
Результат = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию, ОписаниеНастроек, ИмяПользователя)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Загружает настройку из хранилища общих настроек, как метод платформы Загрузить,
 объектов СтандартноеХранилищеНастроекМенеджер или ХранилищеНастроекМенеджер.<Имя хранилища>,
 но с поддержкой длины ключа настроек более 128 символов путем хеширования части,
 которая превышает 96 символов.
 Кроме того, возвращает указанное значение по умолчанию, если настройки не найдены.
 Если нет права СохранениеДанныхПользователя, возвращается значение по умолчанию без ошибки.
 В возвращаемом значении очищаются ссылки на несуществующий объект в базе данных, а именно
 - возвращаемая ссылка заменяется на указанное значение по умолчанию;
 - из данных типа Массив ссылки удаляются;
 - у данных типа Структура и Соответствие ключ не меняется, а значение устанавливается Неопределено;
 - анализ значений в данных типа Массив, Структура, Соответствие выполняется рекурсивно.
Синтаксис
 Функция ХранилищеОбщихНастроекЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию = Неопределено, 
			ОписаниеНастроек = Неопределено, ИмяПользователя = Неопределено) Экспорт
Параметры
   КлючОбъекта          - Строка           - см. синтакс-помощник платформы.
   КлючНастроек         - Строка           - см. синтакс-помощник платформы.
   ЗначениеПоУмолчанию  - Произвольный     - значение, которое возвращается, если настройки не найдены.
                                             Если не указано, возвращается значение Неопределено.
   ОписаниеНастроек     - ОписаниеНастроек - см. синтакс-помощник платформы.
   ИмяПользователя      - Строка           - см. синтакс-помощник платформы.
Возвращаемое значение
   Произвольный - см. синтакс-помощник платформы.
Пример вызова
Результат = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию, ОписаниеНастроек, ИмяПользователя)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ХранилищеОбщихНастроекСохранить
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ХранилищеОбщихНастроекСохранить.
Синтаксис
 Процедура ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючНастроек, Настройки,
			ОписаниеНастроек = Неопределено,
			ИмяПользователя = Неопределено,
			ОбновитьПовторноИспользуемыеЗначения = Ложь) Экспорт
Пример вызова
ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючНастроек, Настройки, ОписаниеНастроек, ИмяПользователя, ОбновитьПовторноИспользуемыеЗначения)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Сохраняет настройку в хранилище общих настроек, как метод платформы Сохранить,
 объектов СтандартноеХранилищеНастроекМенеджер или ХранилищеНастроекМенеджер.<Имя хранилища>,
 но с поддержкой длины ключа настроек более 128 символов путем хеширования части,
 которая превышает 96 символов.
 Если нет права СохранениеДанныхПользователя, сохранение пропускается без ошибки.
Синтаксис
 Процедура ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючНастроек, Настройки,
			ОписаниеНастроек = Неопределено,
			ИмяПользователя = Неопределено,
			ОбновитьПовторноИспользуемыеЗначения = Ложь) Экспорт
Параметры
   КлючОбъекта       - Строка           - см. синтакс-помощник платформы.
   КлючНастроек      - Строка           - см. синтакс-помощник платформы.
   Настройки         - Произвольный     - см. синтакс-помощник платформы.
   ОписаниеНастроек  - ОписаниеНастроек - см. синтакс-помощник платформы.
   ИмяПользователя   - Строка           - см. синтакс-помощник платформы.
   ОбновитьПовторноИспользуемыеЗначения - Булево - выполнить одноименный метод платформы.
Пример вызова
ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючНастроек, Настройки, ОписаниеНастроек, ИмяПользователя, ОбновитьПовторноИспользуемыеЗначения)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ХранилищеОбщихНастроекСохранитьМассив
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ХранилищеОбщихНастроекСохранитьМассив.
Синтаксис
 Процедура ХранилищеОбщихНастроекСохранитьМассив(МассивСтруктур, ОбновитьПовторноИспользуемыеЗначения = Ложь) Экспорт
Пример вызова
ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранитьМассив(МассивСтруктур, ОбновитьПовторноИспользуемыеЗначения)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Сохраняет несколько настроек в хранилище общих настроек, как метод платформы Сохранить,
 объектов СтандартноеХранилищеНастроекМенеджер или ХранилищеНастроекМенеджер.<Имя хранилища>,
 но с поддержкой длины ключа настроек более 128 символов путем хеширования части,
 которая превышает 96 символов.
 Если нет права СохранениеДанныхПользователя, сохранение пропускается без ошибки.
Синтаксис
 Процедура ХранилищеОбщихНастроекСохранитьМассив(НесколькоНастроек,
			ОбновитьПовторноИспользуемыеЗначения = Ложь) Экспорт
Параметры
   НесколькоНастроек - Массив - со значениями:
     * Значение - Структура - со свойствами:
         * Объект    - Строка       - см. параметр КлючОбъекта  в синтакс-помощнике платформы.
         * Настройка - Строка       - см. параметр КлючНастроек в синтакс-помощнике платформы.
         * Значение  - Произвольный - см. параметр Настройки    в синтакс-помощнике платформы.
   ОбновитьПовторноИспользуемыеЗначения - Булево - выполнить одноименный метод платформы.
Пример вызова
ОбщегоНазначения.ХранилищеОбщихНастроекСохранитьМассив(НесколькоНастроек, ОбновитьПовторноИспользуемыеЗначения)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ХранилищеОбщихНастроекУдалить
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ХранилищеОбщихНастроекУдалить.
Синтаксис
 Процедура ХранилищеОбщихНастроекУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя) Экспорт
Пример вызова
ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Удаляет настройку из хранилища общих настроек, как метод платформы Удалить,
 объектов СтандартноеХранилищеНастроекМенеджер или ХранилищеНастроекМенеджер.<Имя хранилища>,
 но с поддержкой длины ключа настроек более 128 символов путем хеширования части,
 которая превышает 96 символов.
 Если нет права СохранениеДанныхПользователя, удаление пропускается без ошибки.
Синтаксис
 Процедура ХранилищеОбщихНастроекУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя) Экспорт
Параметры
   КлючОбъекта     - Строка, Неопределено - см. синтакс-помощник платформы.
   КлючНастроек    - Строка, Неопределено - см. синтакс-помощник платформы.
   ИмяПользователя - Строка, Неопределено - см. синтакс-помощник платформы.
Пример вызова
ОбщегоНазначения.ХранилищеОбщихНастроекУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ХранилищеСистемныхНастроекЗагрузить
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ХранилищеСистемныхНастроекЗагрузить.
Синтаксис
 Функция ХранилищеСистемныхНастроекЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию = Неопределено, 
			ОписаниеНастроек = Неопределено,
			ИмяПользователя = Неопределено) Экспорт
Пример вызова
Результат = ОбщегоНазначенияВызовСервера.ХранилищеСистемныхНастроекЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию, ОписаниеНастроек, ИмяПользователя)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Загружает настройку из хранилища системных настроек, как метод платформы Загрузить,
 объекта СтандартноеХранилищеНастроекМенеджер, но с поддержкой длины ключа настроек
 более 128 символов путем хеширования части, которая превышает 96 символов.
 Кроме того, возвращает указанное значение по умолчанию, если настройки не найдены.
 Если нет права СохранениеДанныхПользователя, возвращается значение по умолчанию без ошибки.
 В возвращаемом значении очищаются ссылки на несуществующий объект в базе данных, а именно
 - возвращаемая ссылка заменяется на указанное значение по умолчанию;
 - из данных типа Массив ссылки удаляются;
 - у данных типа Структура и Соответствие ключ не меняется, а значение устанавливается Неопределено;
 - анализ значений в данных типа Массив, Структура, Соответствие выполняется рекурсивно.
Синтаксис
 Функция ХранилищеСистемныхНастроекЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию = Неопределено, 
			ОписаниеНастроек = Неопределено, ИмяПользователя = Неопределено) Экспорт
Параметры
   КлючОбъекта          - Строка           - см. синтакс-помощник платформы.
   КлючНастроек         - Строка           - см. синтакс-помощник платформы.
   ЗначениеПоУмолчанию  - Произвольный     - значение, которое возвращается, если настройки не найдены.
                                             Если не указано, возвращается значение Неопределено.
   ОписаниеНастроек     - ОписаниеНастроек - см. синтакс-помощник платформы.
   ИмяПользователя      - Строка           - см. синтакс-помощник платформы.
Возвращаемое значение
   Произвольный - см. синтакс-помощник платформы.
Пример вызова
Результат = ОбщегоНазначения.ХранилищеСистемныхНастроекЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию, ОписаниеНастроек, ИмяПользователя)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ХранилищеСистемныхНастроекСохранить
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ХранилищеСистемныхНастроекСохранить.
Синтаксис
 Процедура ХранилищеСистемныхНастроекСохранить(КлючОбъекта, КлючНастроек, Настройки,
			ОписаниеНастроек = Неопределено,
			ИмяПользователя = Неопределено,
			ОбновитьПовторноИспользуемыеЗначения = Ложь) Экспорт
Пример вызова
ОбщегоНазначенияВызовСервера.ХранилищеСистемныхНастроекСохранить(КлючОбъекта, КлючНастроек, Настройки, ОписаниеНастроек, ИмяПользователя, ОбновитьПовторноИспользуемыеЗначения)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Сохраняет настройку в хранилище системных настроек, как метод платформы Сохранить
 объекта СтандартноеХранилищеНастроекМенеджер, но с поддержкой длины ключа настроек
 более 128 символов путем хеширования части, которая превышает 96 символов.
 Если нет права СохранениеДанныхПользователя, сохранение пропускается без ошибки.
Синтаксис
 Процедура ХранилищеСистемныхНастроекСохранить(КлючОбъекта, КлючНастроек, Настройки,
			ОписаниеНастроек = Неопределено,
			ИмяПользователя = Неопределено,
			ОбновитьПовторноИспользуемыеЗначения = Ложь) Экспорт
Параметры
   КлючОбъекта       - Строка           - см. синтакс-помощник платформы.
   КлючНастроек      - Строка           - см. синтакс-помощник платформы.
   Настройки         - Произвольный     - см. синтакс-помощник платформы.
   ОписаниеНастроек  - ОписаниеНастроек - см. синтакс-помощник платформы.
   ИмяПользователя   - Строка           - см. синтакс-помощник платформы.
   ОбновитьПовторноИспользуемыеЗначения - Булево - выполнить одноименный метод платформы.
Пример вызова
ОбщегоНазначения.ХранилищеСистемныхНастроекСохранить(КлючОбъекта, КлючНастроек, Настройки, ОписаниеНастроек, ИмяПользователя, ОбновитьПовторноИспользуемыеЗначения)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ХранилищеСистемныхНастроекУдалить
1. Для вызова с клиента и сервера
 См. ОбщегоНазначения.ХранилищеСистемныхНастроекУдалить.
Синтаксис
 Процедура ХранилищеСистемныхНастроекУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя) Экспорт
Пример вызова
ОбщегоНазначенияВызовСервера.ХранилищеСистемныхНастроекУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя)
Доступность
 Сервер, Вызов сервера

2. Для вызова с сервера
 Удаляет настройку из хранилища системных настроек, как метод платформы Удалить,
 объекта СтандартноеХранилищеНастроекМенеджер, но с поддержкой длины ключа настроек
 более 128 символов путем хеширования части, которая превышает 96 символов.
 Если нет права СохранениеДанныхПользователя, удаление пропускается без ошибки.
Синтаксис
 Процедура ХранилищеСистемныхНастроекУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя) Экспорт
Параметры
   КлючОбъекта     - Строка, Неопределено - см. синтакс-помощник платформы.
   КлючНастроек    - Строка, Неопределено - см. синтакс-помощник платформы.
   ИмяПользователя - Строка, Неопределено - см. синтакс-помощник платформы.
Пример вызова
ОбщегоНазначения.ХранилищеСистемныхНастроекУдалить(КлючОбъекта, КлючНастроек, ИмяПользователя)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЦветСтиля
 Функция получает цвет стиля по имени элемента стиля.
Синтаксис
 Функция ЦветСтиля(ИмяЦветаСтиля) Экспорт
Параметры
  ИмяЦветаСтиля - Строка - имя элемента стиля.
Возвращаемое значение
  Цвет - цвет стиля.
Пример вызова
Результат = ОбщегоНазначенияКлиент.ЦветСтиля(ИмяЦветаСтиля)
Доступность
 Тонкий клиент, Толстый клиент

ЧастиИмени
 Раскладывает полное имя физического лица на составные части - фамилию, имя и отчество.
 Если в конце полного имени встречаются "оглы", "улы", "уулу", "кызы" или "гызы",
 то они также считаются частью отчества.
Синтаксис
 Функция ЧастиИмени(ФамилияИмяОтчество) Экспорт
Параметры
  ФамилияИмяОтчество - Строка - полное имя в виде "Фамилия Имя Отчество".
Возвращаемое значение
  Структура - части полного имени:
   * Фамилия  - Строка - фамилия;
   * Имя      - Строка - имя;
   * Отчество - Строка - отчество.
Пример вызова
   1. ФизическиеЛицаКлиентСервер.ЧастиИмени("Иванов Иван Иванович") 
   вернет структуру со значениями свойств: "Иванов", "Иван", "Иванович".
   2. ФизическиеЛицаКлиентСервер.ЧастиИмени("Смит Джон") 
   вернет структуру со значениями свойств: "Смит", "Джон", "".
   3. ФизическиеЛицаКлиентСервер.ЧастиИмени("Алиев Ахмед Октай оглы Мамедов") 
   вернет структуру со значениями свойств: "Алиев", "Алиев", "Октай оглы Мамедов".
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ШрифтСтиля
 Функция получает шрифт стиля по имени элемента стиля.
Синтаксис
 Функция ШрифтСтиля(ИмяШрифтаСтиля) Экспорт
Параметры
  ИмяШрифтаСтиля - Строка - имя элемента стиля.
Возвращаемое значение
  Шрифт - шрифт стиля.
Пример вызова
Результат = ОбщегоНазначенияКлиент.ШрифтСтиля(ИмяШрифтаСтиля)
Доступность
 Тонкий клиент, Толстый клиент

ЭтоLinuxКлиент
 Возвращает Истина, если клиентское приложение запущено под управлением ОС Linux.
Синтаксис
 Функция ЭтоLinuxКлиент() Экспорт
Возвращаемое значение
  Булево - если нет клиентского приложения, возвращается Ложь.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ЭтоLinuxКлиент()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЭтоLinuxСервер
 Возвращает Истина, если текущий сеанс выполняется на сервере, работающим под управлением ОС Linux.
Синтаксис
 Функция ЭтоLinuxСервер() Экспорт
Возвращаемое значение
  Булево - Истина, если сервер работает под управлением ОС Linux.
Пример вызова
Результат = ОбщегоНазначения.ЭтоLinuxСервер()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоOSXКлиент
 Возвращает Истина, если клиентское приложение запущено под управлением ОС X.
Синтаксис
 Функция ЭтоOSXКлиент() Экспорт
Возвращаемое значение
  Булево - если нет клиентского приложения, возвращается Ложь.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ЭтоOSXКлиент()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЭтоWindowsКлиент
 Возвращает Истина, если клиентское приложение запущено под управлением ОС Windows.
Синтаксис
 Функция ЭтоWindowsКлиент() Экспорт
Возвращаемое значение
  Булево - если нет клиентского приложения, возвращается Ложь.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ЭтоWindowsКлиент()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЭтоАвтономноеРабочееМесто
 Возвращает Истина, если эта информационная база подключена к 1С:Fresh.
Синтаксис
 Функция ЭтоАвтономноеРабочееМесто() Экспорт
Возвращаемое значение
  Булево - признак автономного рабочего места.
Пример вызова
Результат = ОбщегоНазначения.ЭтоАвтономноеРабочееМесто()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоБазоваяВерсияКонфигурации
 Возвращает признак, является ли конфигурация базовой.
 Базовые версии конфигураций могут иметь программные ограничения, действие которых
 можно предусмотреть с помощью этой функции.
 Конфигурация считается базовой, если в ее имени есть термин "Базовая",
 например, "УправлениеТорговлейБазовая".
Синтаксис
 Функция ЭтоБазоваяВерсияКонфигурации() Экспорт
Возвращаемое значение
   Булево - Истина, если конфигурация - базовая.
Пример вызова
Результат = СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоБизнесПроцесс
 Определяет принадлежность объекта метаданных к общему типу "Бизнес-процесс".
Синтаксис
 Функция ЭтоБизнесПроцесс(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является бизнес-процессом.
Пример вызова
Результат = ОбщегоНазначения.ЭтоБизнесПроцесс(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоВебКлиент
 Возвращает Истина, если клиентское приложение является Веб-клиентом.
Синтаксис
 Функция ЭтоВебКлиент() Экспорт
Возвращаемое значение
  Булево - если нет клиентского приложения, возвращается Ложь.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЭтоВебКлиентПодMacOS
 Возвращает Истина, если это веб клиент в Mac OS.
Синтаксис
 Функция ЭтоВебКлиентПодMacOS() Экспорт
Возвращаемое значение
  Булево - Истина, если сеанс запущен под веб-клиентом и в Mac OS.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ЭтоВебКлиентПодMacOS()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЭтоДокумент
 Определяет принадлежность объекта метаданных к общему типу "Документ".
Синтаксис
 Функция ЭтоДокумент(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к документам.
Возвращаемое значение
   Булево - Истина, если объект является документом.
Пример вызова
Результат = ОбщегоНазначения.ЭтоДокумент(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоЖурналДокументов
 Определяет принадлежность объекта метаданных к общему типу "Журнал документов".
Синтаксис
 Функция ЭтоЖурналДокументов(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является журналом документов.
Пример вызова
Результат = ОбщегоНазначения.ЭтоЖурналДокументов(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоЗадача
 Определяет принадлежность объекта метаданных к общему типу "Задача".
Синтаксис
 Функция ЭтоЗадача(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является задачей.
Пример вызова
Результат = ОбщегоНазначения.ЭтоЗадача(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоКонстанта
 Определяет принадлежность объекта метаданных к общему типу "Константа".
Синтаксис
 Функция ЭтоКонстанта(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является константой.
Пример вызова
Результат = ОбщегоНазначения.ЭтоКонстанта(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоМобильныйКлиент
 Возвращает Истина, если клиентское приложение является мобильным клиентом.
Синтаксис
 Функция ЭтоМобильныйКлиент() Экспорт
Возвращаемое значение
  Булево - если нет клиентского приложения, возвращается Ложь.
Пример вызова
Результат = ОбщегоНазначенияКлиентСервер.ЭтоМобильныйКлиент()
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЭтоОбъектСсылочногоТипа
 Определяет принадлежность объекта метаданных к ссылочному типу.
Синтаксис
 Функция ЭтоОбъектСсылочногоТипа(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект ссылочного типа.
Пример вызова
Результат = ОбщегоНазначения.ЭтоОбъектСсылочногоТипа(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоПеречисление
 Определяет принадлежность объекта метаданных к общему типу "Перечисление".
Синтаксис
 Функция ЭтоПеречисление(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является перечислением.
Пример вызова
Результат = ОбщегоНазначения.ЭтоПеречисление(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоПланВидовРасчета
 Определяет принадлежность объекта метаданных к общему типу "План видов расчета".
Синтаксис
 Функция ЭтоПланВидовРасчета(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является планом видов расчета.
Пример вызова
Результат = ОбщегоНазначения.ЭтоПланВидовРасчета(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоПланВидовХарактеристик
 Определяет принадлежность объекта метаданных к общему типу "План видов характеристик".
Синтаксис
 Функция ЭтоПланВидовХарактеристик(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является планом видов характеристик.
Пример вызова
Результат = ОбщегоНазначения.ЭтоПланВидовХарактеристик(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоПланОбмена
 Определяет принадлежность объекта метаданных к общему типу "План обмена".
Синтаксис
 Функция ЭтоПланОбмена(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является планом обмена.
Пример вызова
Результат = ОбщегоНазначения.ЭтоПланОбмена(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоПланСчетов
 Определяет принадлежность объекта метаданных к общему типу "План счетов".
Синтаксис
 Функция ЭтоПланСчетов(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является планом счетов.
Пример вызова
Результат = ОбщегоНазначения.ЭтоПланСчетов(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение
ЭтоПодчиненныйУзелРИБ
 Определяет, что эта информационная база является подчиненным узлом
 распределенной информационной базы (РИБ).
Синтаксис
 Функция ЭтоПодчиненныйУзелРИБ() Экспорт
Возвращаемое значение
  Булево - Истина, если эта информационная база является подчиненным узлом РИБ.
Пример вызова
Результат = ОбщегоНазначения.ЭтоПодчиненныйУзелРИБ()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоПодчиненныйУзелРИБСФильтром
 Определяет, что эта информационная база является подчиненным узлом
 распределенной информационной базы (РИБ) с фильтром.
Синтаксис
 Функция ЭтоПодчиненныйУзелРИБСФильтром() Экспорт
Возвращаемое значение
  Булево - Истина, если эта информационная база является подчиненным узлом РИБ с фильтром.
Пример вызова
Результат = ОбщегоНазначения.ЭтоПодчиненныйУзелРИБСФильтром()
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоПоследовательность
 Определяет принадлежность объекта метаданных к общему типу "Последовательности".
Синтаксис
 Функция ЭтоПоследовательность(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является последовательностью.
Пример вызова
Результат = ОбщегоНазначения.ЭтоПоследовательность(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоРазделительСлов
 Определяет, является ли символ разделителем.
Синтаксис
 Функция ЭтоРазделительСлов(КодСимвола, РазделителиСлов = Неопределено) Экспорт
Параметры
  КодСимвола      - Число  - код проверяемого символа;
  РазделителиСлов - Строка - символы разделителей. Если параметр не указан, то 
                             разделителем считаются все символы, не являющиеся цифрами, 
                             латинскими и кириллическими буквами, а также знаком подчеркивания.
Возвращаемое значение
  Булево - Истина, если символ с кодом КодСимвола является разделителем.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.ЭтоРазделительСлов(КодСимвола, РазделителиСлов)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

ЭтоРегистр
 Определяет принадлежность объекта метаданных к типу регистр.
Синтаксис
 Функция ЭтоРегистр(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является каким-либо регистром.
Пример вызова
Результат = ОбщегоНазначения.ЭтоРегистр(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоРегистрБухгалтерии
 Определяет принадлежность объекта метаданных к общему типу "Регистр бухгалтерии".
Синтаксис
 Функция ЭтоРегистрБухгалтерии(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является регистром бухгалтерии.
Пример вызова
Результат = ОбщегоНазначения.ЭтоРегистрБухгалтерии(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоРегистрНакопления
 Определяет принадлежность объекта метаданных к общему типу "Регистр накопления".
Синтаксис
 Функция ЭтоРегистрНакопления(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является регистром накопления.
Пример вызова
Результат = ОбщегоНазначения.ЭтоРегистрНакопления(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоРегистрРасчета
 Определяет принадлежность объекта метаданных к общему типу "Регистр расчета".
Синтаксис
 Функция ЭтоРегистрРасчета(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является регистром расчета.
Пример вызова
Результат = ОбщегоНазначения.ЭтоРегистрРасчета(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоРегистрСведений
 Определяет принадлежность объекта метаданных к общему типу "Регистр сведений".
Синтаксис
 Функция ЭтоРегистрСведений(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является регистром сведений.
Пример вызова
Результат = ОбщегоНазначения.ЭтоРегистрСведений(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоРегламентноеЗадание
 Определяет принадлежность объекта метаданных к общему типу "Регламентные задания".
Синтаксис
 Функция ЭтоРегламентноеЗадание(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является регламентным заданием.
Пример вызова
Результат = ОбщегоНазначения.ЭтоРегламентноеЗадание(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоСправочник
 Определяет принадлежность объекта метаданных к общему типу "Справочник".
Синтаксис
 Функция ЭтоСправочник(ОбъектМетаданных) Экспорт
Параметры
  ОбъектМетаданных - ОбъектМетаданных - объект, для которого необходимо определить принадлежность к заданному типу.
Возвращаемое значение
   Булево - Истина, если объект является справочником.
Пример вызова
Результат = ОбщегоНазначения.ЭтоСправочник(ОбъектМетаданных)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоСсылка
 Проверка того, что переданный тип является ссылочным типом данных.
 Для типа "Неопределено" возвращается Ложь.
Синтаксис
 Функция ЭтоСсылка(ПроверяемыйТип) Экспорт
Параметры
  ПроверяемыйТип - Тип - для проверки на тип ссылка.
Возвращаемое значение
  Булево - Истина, если это ссылка.
Пример вызова
Результат = ОбщегоНазначения.ЭтоСсылка(ПроверяемыйТип)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоСтандартныйРеквизит
 Возвращает признак того, что реквизит входит в подмножество стандартных реквизитов.
Синтаксис
 Функция ЭтоСтандартныйРеквизит(СтандартныеРеквизиты, ИмяРеквизита) Экспорт
Параметры
  СтандартныеРеквизиты - ОписанияСтандартныхРеквизитов - тип и значение описывает коллекцию настроек различных
                                                         стандартных реквизитов;
  ИмяРеквизита         - Строка - реквизит который необходимо проверить на принадлежность множеству стандартных
                                  реквизитов;
Возвращаемое значение
   Булево - Истина, если реквизит входит в подмножество стандартных реквизитов.
Пример вызова
Результат = ОбщегоНазначения.ЭтоСтандартныйРеквизит(СтандартныеРеквизиты, ИмяРеквизита)
Доступность
 Сервер, Толстый клиент, Внешнее соединение

ЭтоУникальныйИдентификатор
 Проверяет, является ли строка уникальным идентификатором.
 В качестве уникального идентификатора предполагается строка вида
 "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX", где X = [0..9,a..f].
Синтаксис
 Функция ЭтоУникальныйИдентификатор(Знач Значение) Экспорт
Параметры
  Значение - Строка - проверяемая строка.
Возвращаемое значение
  Булево - Истина, если переданная строка является уникальным идентификатором.
Пример вызова
Результат = СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(Значение)
Доступность
 Сервер, Тонкий клиент, Толстый клиент, Внешнее соединение

