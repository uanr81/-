SUDO(5)                     BSD File Formats Manual                    SUDO(5)

NAME
     sudo.conf — конфигурация для внешнего интерфейса sudo

DESCRIPTION
     Файл sudo.conf используется для настройки внешнего интерфейса sudo. Он определяет
     политику безопасности и подключаемые модули для ведения журнала I/O, флаги отладки,
     а также независимые от подключаемых модулей пути и параметры.

     Файл sudo.conf поддерживает следующие директивы, подробно описанные ниже.

     Plugin    политика безопасности или подключаемый модуль I/O

     Path      плагин-независимый путь

     Set       настройки внешнего интерфейса, такие как disable_coredump или group_source

     Debug     флаги отладки для помощи в отладке sudo, sudoreplay, visudo и плагина
               sudoers.

     Знак фунта (‘#’) используется для обозначения комментария. И символ комментария,
     и любой текст после него до конца строки игнорируются.

     Длинные строки можно продолжить с обратной косой чертой (‘\’) в качестве последнего
     символа в строке. Обратите внимание, что начальный пробел удаляется из начала строк,
     даже если используется символ продолжения.

     Строки без комментариев, которые не начинаются с Plugin, Path, Debug, или Set,
     игнорируются.

     Файл sudo.conf всегда анализируется в локали “C”.

   Plugin configuration
     sudo поддерживает архитектуру плагинов для политик безопасности и ведения журнала
     ввода/вывода. Третьи стороны могут разрабатывать и распространять свою собственную
     политику и подключаемые модули I/O для бесперебойной работы с внешним интерфейсом
     sudo. Плагины загружаются динамически в зависимости от содержимого sudo.conf.

     Строка плагина состоит из ключевого слова Plugin, за которым следует symbol_name и
     путь к динамическому общему объекту, который содержит плагин. symbol_name - это имя
     символа struct policy_plugin или struct io_plugin, содержащегося в плагине. Путь
     может быть полностью полным или относительным. Если он не полностью определен, он
     относится к каталогу, указанному параметром пути plugin_dir, который по умолчанию
     равен /usr/lib/sudo. Другими словами:

           Plugin sudoers_policy sudoers.so

     эквивалентно:

           Plugin sudoers_policy /usr/lib/sudo/sudoers.so

     Если плагин был статически скомпилирован в двоичный файл sudo, а не установлен как
     динамический общий объект, путь должен быть указан без начального каталога, так как
     он фактически не существует в файловой системе. Например:

           Plugin sudoers_policy sudoers.so

     Начиная с sudo 1.8.5, любые дополнительные параметры после пути передаются в качестве
     аргументов функции открытия плагина. Например, чтобы переопределить режим файла
     sudoers по умолчанию во время компиляции:

           Plugin sudoers_policy sudoers.so sudoers_mode=0440

     Один и тот же динамический общий объект может содержать несколько плагинов, каждый из
     которых имеет свое имя символа. Файл должен принадлежать uid 0 и доступен для записи
     только его владельцу. Из-за неоднозначностей, возникающих из составных политик, может
     быть указан только один плагин политики. Это ограничение не распространяется на
     плагины ввода/вывода.

     Если файл sudo.conf отсутствует или не содержит строк плагина, плагин sudoers будет
     использоваться в качестве политики безопасности по умолчанию и для ведения журнала
     I/O (если он включен политикой). Это эквивалентно следующему:

           Plugin sudoers_policy sudoers.so
           Plugin sudoers_io sudoers.so

     Для получения дополнительной информации об архитектуре подключаемого модуля sudo
     см. Руководство sudo_plugin(8).

   Path настройки
     Строка Path состоит из ключевого слова Path, за которым следует имя
     устанавливаемого пути и его значение. Например:

           Path noexec /usr/lib/sudo/sudo_noexec.so
           Path askpass /usr/X11R6/bin/ssh-askpass

     Если путь не указан, функции, использующие указанный параметр, будут отключены.
     Отключение настроек Path поддерживается только в версии sudo 1.8.16 и выше.

     В файле /etc/sudo.conf могут быть установлены следующие пути, не зависящие от
     подключаемых модулей:

     askpass   Полный путь к вспомогательной программе, используемой для чтения пароля
               пользователя, когда терминал недоступен. Это может быть в том случае, когда
               sudo выполняется из графического (в отличие от текстового) приложения.
               Программа, заданная askpass, должна отобразить переданный ей аргумент в
               виде приглашения и записать пароль пользователя в стандартный вывод.
               Значение askpass может быть переопределено переменной
               окружения SUDO_ASKPASS.

     noexec    Полный путь к общей библиотеке, содержащей фиктивные версии функций
               библиотеки execl(), execle(), execlp(), exect(), execv(), execve(),
               execvP(), execvp(), execvpe(), fexecve(), popen(), posix_spawn(),
               posix_spawnp(), и system(), которые просто возвращают ошибку. Это
               используется для реализации функциональности noexec в системах, которые
               поддерживают LD_PRELOAD или его эквивалент. Значение по умолчанию:
               /usr/lib/sudo/sudo_noexec.so.

     plugin_dir
               Каталог по умолчанию для использования при поиске плагинов, которые
               указаны без полного пути. Значением по умолчанию является /usr/lib/sudo.

     sesh      Полный путь к бинарному файлу sesh. Этот параметр используется только тогда,
               когда sudo создается с поддержкой SELinux. Значением по умолчанию
               является /usr/lib/sudo/sesh.

   Другие настройки
     Файл sudo.conf также поддерживает следующие настройки интерфейса:

     disable_coredump
               Основные дампы самой sudo по умолчанию отключены, чтобы предотвратить
               раскрытие потенциально конфиденциальной информации. Чтобы помочь в отладке
               сбоев sudo, вы можете включить дамп ядра, установив для “disable_coredump”
               значение false в sudo.conf следующим образом:

                     Set disable_coredump false

               Все современные операционные системы накладывают ограничения на дамп ядра
               из процессов setuid, таких как sudo, поэтому эту опцию можно включить без
               ущерба для безопасности. Чтобы получить файл ядра sudo, вам, вероятно,
               потребуется включить дамп ядра для процессов setuid. В системах BSD и Linux
               это выполняется с помощью команды sysctl. В Solaris команда coreadm
               используется для настройки поведения дампа ядра.

               Этот параметр доступен только в версии sudo 1.8.4 и выше.

     group_source
               sudo передает список групп вызывающего пользователя в плагины политики и
               ввода/вывода. В большинстве систем существует верхний предел количества
               групп, к которым может одновременно принадлежать пользователь (обычно 16
               для совместимости с NFS). На системах работающих с утилитой getconf(1):
                     getconf NGROUPS_MAX
               вернет максимальное количество групп.

               Однако все еще возможно быть членом большего числа групп - они просто не
               будут включены в список групп, возвращаемый ядром для пользователя. Начиная
               с версии 1.8.7 sudo, если список групп ядра пользователя содержит
               максимальное количество записей, sudo будет напрямую обращаться к базе
               данных групп, чтобы определить список групп. Это позволяет политике
               безопасности выполнять сопоставление по имени группы, даже если пользователь
               является членом более чем максимального количества групп.

               Параметр group_source позволяет администратору изменить это поведение
               по умолчанию. Поддерживаемые значения для group_source:

               static    Используйте статический список групп, который возвращает ядро.
                         Извлечение списка групп таким способом выполняется очень быстро,
                         но к нему применяется верхний предел, как описано выше. Это
                         “static” в том смысле, что он не отражает изменения в базе данных
                         группы, сделанные после входа пользователя в систему. Это было
                         поведение по умолчанию до sudo 1.8.7.

               dynamic   Всегда запрашивайте базу данных группы напрямую. Это “dynamic”
                         в том смысле, что изменения, внесенные в базу данных группы после
                         входа пользователя, будут отражены в списке групп. В некоторых
                         системах запросы к базе данных группы для всех групп пользователей
                         могут занимать много времени при запросе к базе данных группы на
                         основе сети. Большинство операционных систем обеспечивают
                         эффективный метод выполнения таких запросов. В настоящее время
                         sudo поддерживает эффективные групповые запросы на AIX, BSD,
                         HP-UX, Linux и Solaris.

               adaptive  Запросите базу данных групп только в том случае, если в
                         статическом списке групп, возвращаемом ядром, содержится
                         максимальное количество записей. Это поведение по умолчанию в
                         sudo 1.8.7 и выше.

               Например, чтобы заставить sudo использовать статический список групп
               ядра только для пользователя:

                     Set group_source static

               Этот параметр доступен только в версии sudo 1.8.7 и выше.

     max_groups
               Максимальное количество групп пользователей для извлечения из базы
               данных групп. Значения меньше единицы будут игнорироваться. Этот параметр
               используется только при непосредственном обращении к базе данных группы.
               Он предназначен для использования в системах, где невозможно определить,
               когда массив, который должен быть заполнен записями группы, недостаточно
               велик. По умолчанию sudo выделяет в четыре раза максимальное количество
               групп в системе (см. Выше) и повторяет попытку, удвоив это число в случае
               сбоя запроса к базе данных групп. Однако некоторые системы просто возвращают
               столько записей, сколько уместится, и не указывают на ошибку при недостатке
               места.

               Этот параметр доступен только в версии sudo 1.8.7 и выше.

     probe_interfaces
               По умолчанию sudo будет проверять сетевые интерфейсы системы и передавать
               адрес IP каждого включенного интерфейса в плагин политики. Это позволяет
               плагину соответствовать правилам на основе адреса IP без необходимости
               запрашивать DNS. В системах Linux с большим количеством виртуальных
               интерфейсов это может занять немалое количество времени. Если сопоставление
               на основе IP не требуется, зондирование сетевого интерфейса можно отключить
               следующим образом:

                     Set probe_interfaces false

               Этот параметр доступен только в версии sudo 1.8.10 и выше.

   Debug flags
     Версии sudo 1.8.4 и выше поддерживают гибкую инфраструктуру отладки, которая может
     помочь отследить, что sudo делает внутри, если есть проблема.

     Строка Debug состоит из ключевого слова Debug, за которым следует имя программы (или
     плагина) для отладки (sudo, visudo, sudoreplay, sudoers), имя файла отладки и
     разделенный запятыми список флагов отладки. Синтаксис флага отладки, используемый sudo
     и плагином sudoers, является subsystem@@priority, но плагин может использовать
     другой формат, если он не содержит запятую (‘,’).

     Например:

           Debug sudo /var/log/sudo_debug all@warn,plugin@info

     будет регистрировать все операторы отладки на уровне предупреждения и выше, в
     дополнение к тем на уровне информации для подсистемы плагинов.

     Начиная с sudo 1.8.12, для каждой программы может быть указано несколько записей
     отладки. Более старые версии sudo поддерживают только одну запись отладки для каждой
     программы. Специфичные для плагина записи отладки также поддерживаются, начиная с
     sudo 1.8.12, и соответствуют либо базовому имени загружаемого плагина (например,
     sudoers.so), либо полному имени пути плагина. Ранее плагин sudoers имел ту же запись
     отладки, что и внешний интерфейс sudo, и не мог настраиваться отдельно.

     Поддерживаются следующие приоритеты в порядке уменьшения серьезности: crit, err,
     warn, notice, diag, info, trace и debug. Каждый приоритет, если он указан, также
     включает в себя все приоритеты выше его. Например, приоритет notice будет включать в
     себя отладочные сообщения, зарегистрированные в notice и выше.

     Трассировка и отладка приоритетов также включают в себя трассировку вызова
     функции, которая регистрирует, когда функция вводится и когда она возвращается.
     Например, следующая трассировка для функции get_user_groups(), расположенной
     в src/sudo.c:

           sudo[123] -> get_user_groups @ src/sudo.c:385
           sudo[123] <- get_user_groups @ src/sudo.c:429 := groups=10,0,5

     Когда функция введена, обозначенная стрелкой вправо ‘->’, программа, процесс ID,
     функция, исходный файл и номер строки регистрируются. Когда функция возвращается,
     обозначенная левой стрелкой ‘<-’, та же информация регистрируется вместе с
     возвращаемым значением. В этом случае возвращаемое значение является строкой.

     Следующие подсистемы используются интерфейсом sudo:

     all         соответствует каждой подсистеме

     args        обработка аргументов командной строки

     conv        пользовательский разговор

     edit        sudoedit

     event       подсистема событий

     exec        выполнение команды

     main        основная функция sudo

     netif       обработка сетевого интерфейса

     pcomm       общение с плагином

     plugin      конфигурация плагина

     pty         псевдо-tty связанный код

     selinux     Обработка, специфичная для SELinux

     util        вспомогательные функции

     utmp        обработка utmp

     Плагин sudoers(5) включает поддержку дополнительных подсистем.

FILES
     /etc/sudo.conf            конфигурация внешнего интерфейса sudo

EXAMPLES
     #
     # Default /etc/sudo.conf file
     #
     # Format:
     #   Plugin plugin_name plugin_path plugin_options ...
     #   Path askpass /path/to/askpass
     #   Path noexec /path/to/sudo_noexec.so
     #   Debug sudo /var/log/sudo_debug all@warn
     #   Set disable_coredump true
     #
     # plugin_path является относительным к /usr/lib/sudo,
     # если не указан полностью.
     # plugin_name соответствует глобальному символу в плагине,
     # который содержит структуру интерфейса плагина.
     # plugin_options необязательны.
     #
     # Плагин sudoers используется по умолчанию, если отсутствуют строки плагина.
     Plugin sudoers_policy sudoers.so
     Plugin sudoers_io sudoers.so

     #
     # Sudo askpass:
     #
     # Может быть указана вспомогательная программа askpass для предоставления
     # графического запроса пароля для поддержки "sudo -A". Sudo не поставляется
     # с собственной программой askpass, но может использовать obpass OpenSSH.
     #
     # Использование askpass от OpenSSH
     #Path askpass /usr/X11R6/bin/ssh-askpass
     #
     # Использование askpass от Gnome OpenSSHUse
     #Path askpass /usr/libexec/openssh/gnome-ssh-askpass

     #
     # Sudo noexec:
     #
     # Путь к общей библиотеке, содержащей фиктивные версии библиотечных функций execv(),
     # execve() и fexecve(), которые просто возвращают ошибку. Это используется для
     # реализации функциональности "noexec" в системах, которые поддерживают C<LD_PRELOAD>
     # или его эквивалент. Скомпилированное значение обычно достаточно и должно быть
     # изменено, только если вы переименуете или переместите файл sudo_noexec.so.
     #
     #Path noexec /usr/lib/sudo/sudo_noexec.so

     #
     # Core dumps:
     #
     # По умолчанию sudo отключает дампы ядра во время выполнения (они повторно включаются
     # для запускаемой команды). Чтобы помочь в отладке проблем sudo, вы можете включить
     # дамп ядра, установив для "disable_coredump" значение false.
     #
     #Set disable_coredump false

     #
     # User groups:
     #
     # Sudo передает список групп пользователей в плагин политики. Если пользователь
     # является членом максимального числа групп (обычно 16), sudo будет запрашивать базу
     # данных групп напрямую, чтобы убедиться, что включил полный список групп.
     #
     # В некоторых системах это может быть дорого, поэтому поведение настраивается.
     # Параметр "group_source" имеет три возможных значения:
     #   static   - использовать список групп пользователей, возвращаемых ядром.
     #   dynamic  - запросить базу данных групп, чтобы найти список групп.
     #   adaptive - если пользователь меньше максимального количества групп.
     #              используйте список ядра, иначе запросите базу данных группы.
     #
     #Set group_source static

SEE ALSO
     sudoers(5), sudo(8), sudo_plugin(8)

HISTORY
     See the HISTORY file in the sudo distribution (https://www.sudo.ws/his‐
     tory.html) for a brief history of sudo.

AUTHORS
     Many people have worked on sudo over the years; this version consists of
     code written primarily by:

           Todd C. Miller

     See the CONTRIBUTORS file in the sudo distribution
     (https://www.sudo.ws/contributors.html) for an exhaustive list of people
     who have contributed to sudo.

BUGS
     If you feel you have found a bug in sudo, please submit a bug report at
     https://bugzilla.sudo.ws/

SUPPORT
     Limited free support is available via the sudo-users mailing list, see
     https://www.sudo.ws/mailman/listinfo/sudo-users to subscribe or search
     the archives.

DISCLAIMER
     sudo is provided “AS IS” and any express or implied warranties, includ‐
     ing, but not limited to, the implied warranties of merchantability and
     fitness for a particular purpose are disclaimed.  See the LICENSE file
     distributed with sudo or https://www.sudo.ws/license.html for complete
     details.

Sudo 1.8.16                    November 20, 2015                   Sudo 1.8.16
