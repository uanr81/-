SUDO(8)                         BSD System Manager's Manual                        SUDO(8)

NAME
     sudo, sudoedit — выполнить команду от имени другого пользователя

SYNOPSIS
     sudo -h | -K | -k | -V
     sudo -v [-AknS] [-a type] [-g group] [-h host] [-p prompt] [-u user]
     sudo -l [-AknS] [-a type] [-g group] [-h host] [-p prompt] [-U user] [-u user]
          [command]
     sudo [-AbEHnPS] [-a type] [-C num] [-c class] [-g group] [-h host] [-p prompt]
          [-r role] [-t type] [-u user] [VAR=value] [-i | -s] [command]
     sudoedit [-AknS] [-a type] [-C num] [-c class] [-g group] [-h host] [-p prompt]
          [-u user] file ...

DESCRIPTION
     sudo позволяет разрешенному пользователю выполнять команду от имени
     суперпользователя или другого пользователя, как указано в политике
     безопасности. Реальный (не эффективный) идентификатор вызывающего
     пользователя используется для определения имени пользователя,
     с которым запрашивается политика безопасности.

     sudo поддерживает архитектуру плагинов для политик безопасности и ведения
     журнала ввода/вывода. Сторонние разработчики могут разрабатывать и распространять
     свои собственные политики и плагины журналов ввода/вывода для бесперебойной
     работы с внешним интерфейсом sudo. Политика безопасности по умолчанию - sudoers,
     которая настраивается через файл /etc/sudoers или через LDAP. Смотрите раздел
     Плагины для получения дополнительной информации.

     Политика безопасности определяет, какие привилегии, если таковые имеются,
     пользователь должен запускать sudo. Политика может требовать, чтобы
     пользователи аутентифицировали себя с помощью пароля или другого механизма
     аутентификации. Если требуется аутентификация, sudo закроется, если
     пароль пользователя не будет введен в течение настраиваемого срока. Этот
     предел специфичен для политики; время ожидания запроса пароля по
     умолчанию для политики безопасности sudoers не ограничено.

     Политики безопасности могут поддерживать кэширование учетных данных,
     чтобы пользователь мог снова запускать sudo в течение некоторого времени
     без проверки подлинности. Политика sudoers кэширует учетные данные в течение
     15 минут, если они не переопределены в sudoers(5). Запустив sudo с опцией -v,
     пользователь может обновить кэшированные учетные данные, не выполняя команду.

     Когда вызывается как sudoedit, подразумевается -e option (описанный ниже).

     Политики безопасности могут регистрировать успешные и неудачные попытки
     использования sudo. Если подключаемый модуль ввода/вывода настроен, вход и
     выход работающей команды также могут быть зарегистрированы.

     Варианты следующие:

     -A, --askpass
                 Обычно, если sudo требует пароль, он будет читать его с терминала
                 пользователя. Если указана опция -A (askpass), выполняется (возможно,
                 графическая) вспомогательная программа, которая считывает пароль
                 пользователя и выводит пароль на стандартный вывод. Если переменная
                 окружения SUDO_ASKPASS установлена, она указывает путь к
                 вспомогательной программе. В противном случае, если sudo.conf(5)
                 содержит строку, определяющую программу askpass, будет использовано
                 это значение. Например:

                     # Путь к вспомогательной программе askpass
                     Path askpass /usr/X11R6/bin/ssh-askpass

                 Если программа askpass недоступна, sudo завершит работу с ошибкой.

     -b, --background
                 Запустите данную команду в фоновом режиме. Обратите внимание, что
                 невозможно использовать управление заданиями оболочки для управления
                 фоновыми процессами, запускаемыми sudo. Большинство интерактивных
                 команд не будут работать должным образом в фоновом режиме.

     -C num, --close-from=num
                 Закройте все файловые дескрипторы, большие или равные num, перед
                 выполнением команды. Значения меньше трех не допускаются. По умолчанию
                 sudo закроет все открытые дескрипторы файлов, кроме стандартного ввода,
                 стандартного вывода и стандартной ошибки при выполнении команды. Политика
                 безопасности может ограничивать возможность пользователя использовать эту
                 опцию. Политика sudoers разрешает использование опции -С только тогда,
                 когда администратор включил опцию closefrom_override.

     -E, --preserve-env
                 Указывает политике безопасности, что пользователь желает сохранить свои
                 существующие переменные среды. Политика безопасности может возвращать
                 ошибку, если у пользователя нет разрешения на сохранение среды.

     -e, --edit  Отредактируйте один или несколько файлов вместо выполнения команды.
                 Вместо имени пути строка "sudoedit" используется при обращении к
                 политике безопасности. Если пользователь авторизован политикой,
                 предпринимаются следующие шаги:

                 1.   Временные копии делаются из файлов, которые будут редактироваться с
                      владельцем, установленным для вызывающего пользователя.

                 2.   Редактор, указанный в политике, запускается для редактирования
                      временных файлов. Политика sudoers использует переменные
                      окружения SUDO_EDITOR, VISUAL и EDITOR (в указанном порядке).
                      Если ни один из параметров SUDO_EDITOR, VISUAL и EDITOR не
                      установлен, используется первая программа, указанная в
                      параметре редактора sudoers(5).

                 3.   Если они были изменены, временные файлы копируются обратно в исходное
                      местоположение, а временные версии удаляются.

                 Чтобы предотвратить редактирование неавторизованных файлов, применяются
                 следующие ограничения, если это явно не разрешено политикой безопасности:

                 ·   Символические ссылки не могут быть отредактированы (версия 1.8.15 и выше).

                 ·   Символьные ссылки вдоль пути, подлежащего редактированию, не выполняются,
                     когда родительский каталог доступен для записи вызывающему пользователю,
                     если только этот пользователь не является пользователем root
                     (версия 1.8.16 и выше).

                 ·   Файлы, расположенные в каталоге, доступном для записи вызывающему
                     пользователю, нельзя редактировать, если этот пользователь не является
                     пользователем root (версия 1.8.16 и выше).

                 Пользователи никогда не имеют права редактировать специальные файлы устройства.

                 Если указанный файл не существует, он будет создан. Обратите внимание,
                 что в отличие от большинства команд, запускаемых sudo, редактор
                 запускается с неизменной средой вызывающего пользователя. Если по
                 какой-то причине sudo не может обновить файл с его отредактированной
                 версией, пользователь получит предупреждение, и отредактированная
                 копия останется во временном файле.

     -g group, --group=group
                 Запустите команду с первичной группой, настроенной на группу, вместо
                 основной группы, указанной в записи базы данных паролей целевого
                 пользователя. Группа может быть либо именем группы, либо числовой
                 группой ID (GID) с префиксом ‘#’, обозначающим (e.g.  #0 for GID 0).
                 При запуске команды от имени GID многие оболочки требуют, чтобы ‘#’
                 экранировался с обратной косой чертой (‘\’). Если опция -u не
                 указана, команда будет запускаться от имени вызывающего пользователя.
                 В любом случае, первичная группа будет установлена ​​в группу.

     -H, --set-home
                 Запросите, чтобы в политике безопасности была задана переменная среды
                 HOME для домашнего каталога, указанного в записи базы данных паролей
                 целевого пользователя. В зависимости от политики это может быть
                 поведение по умолчанию.

     -h, --help  Вывести краткое справочное сообщение на стандартный вывод и выйти.

     -h host, --host=host
                 Запустите команду на указанном хосте, если плагин политики безопасности
                 поддерживает удаленные команды. Обратите внимание, что плагин sudoers в
                 настоящее время не поддерживает запуск удаленных команд. Это также
                 может использоваться в сочетании с опцией -l для перечисления
                 привилегий пользователя для удаленного хоста.

     -i, --login
                 Запустите оболочку, указанную в записи базы данных паролей целевого
                 пользователя, в качестве оболочки входа в систему. Это означает,
                 что специфичные для входа файлы ресурсов, такие как .profile или .login,
                 будут читаться оболочкой. Если указана команда, она передается в
                 оболочку для выполнения через параметр оболочки -c. Если команда не
                 указана, выполняется интерактивная оболочка. sudo пытается перейти в
                 домашний каталог этого пользователя перед запуском оболочки. Команда
                 запускается в среде, аналогичной той, которую пользователь получает при
                 входе в систему. В разделе «Командная среда» в руководстве sudoers(5)
                 рассказывается, как параметр -i влияет на среду, в которой выполняется
                 команда, когда политика sudoers в использовании.

     -K, --remove-timestamp
                 Аналогичен параметру -k, за исключением того, что он полностью удаляет
                 кэшированные учетные данные пользователя и не может использоваться вместе
                 с командой или другим параметром. Эта опция не требует пароля. Не все
                 политики безопасности поддерживают кэширование учетных данных.

     -k, --reset-timestamp
                 При использовании без команды делает недействительными кэшированные
                 учетные данные пользователя. Другими словами, при следующем запуске
                 sudo потребуется пароль. Эта опция не требует пароля и была
                 добавлена, чтобы позволить пользователю отзывать разрешения sudo
                 из файла .logout.

                 При использовании в сочетании с командой или параметром, который
                 может требовать пароль, этот параметр заставит sudo игнорировать
                 кэшированные учетные данные пользователя. В результате sudo
                 запросит пароль (если он требуется политикой безопасности) и не
                 будет обновлять кэшированные учетные данные пользователя.

                 Не все политики безопасности поддерживают кэширование учетных данных.

     -l, --list  Если команда не указана, перечислите разрешенные (и запрещенные)
                 команды для вызывающего пользователя (или пользователя, указанного
                 в опции -U) на текущем хосте. Более длинный формат списка
                 используется, если эта опция указана несколько раз, и политика
                 безопасности поддерживает подробный формат вывода.

                 Если команда указана и разрешена политикой безопасности, отображается
                 полный путь к команде вместе с аргументами командной строки. Если
                 команда указана, но не разрешена, sudo выйдет со значением состояния 1.

     -n, --non-interactive
                 Старайтесь не запрашивать у пользователя какой-либо ввод. Если для
                 запуска команды требуется пароль, sudo отобразит сообщение об
                 ошибке и завершит работу.

     -P, --preserve-groups
                 Сохраните вектор группы вызывающего пользователя без изменений. По
                 умолчанию политика sudoers инициализирует вектор группы в списке
                 групп, членом которых является целевой пользователь. Однако
                 действительная и эффективная группа IDs по-прежнему настроена
                 на соответствие целевому пользователю.

     -p prompt, --prompt=prompt
                 Используйте пользовательский запрос пароля с дополнительными
                 escape-последовательностями. Следующие процентные (‘%')
                 escape-последовательности поддерживаются политикой sudoers:

                 %H  расширение до имени хоста, включая имя домена (включен,
                     если имя хоста машины полностью определено или в
                     sudoers(5) установлена ​​опция fqdn)

                 %h  расширение до локального имени хоста без имени домена

                 %p  расширение до имени пользователя, чей пароль запрашивается
                     (учитывает флаги rootpw, targetpw и runaspw в sudoers(5))

                 %U  после расширения имени пользователя для входа в систему
                     будет выполняться команда (по умолчанию root, если
                     не указана опция -u)

                 %u  расширение до имени пользователя вызывающего пользователя

                 %%  два последовательных символа '%' сворачиваются в один символ '%'

                 Настраиваемое приглашение переопределит приглашение системного пароля
                 в системах, которые поддерживают PAM, если в sudoers не отключен
                 флаг passprompt_override.

     -r role, --role=role
                 Запустите команду с контекстом безопасности SELinux, который
                 включает указанное правило.

     -S, --stdin
                 Запишите подсказку к стандартной ошибке и прочитайте пароль
                 из стандартного ввода вместо использования терминального
                 устройства. За паролем должен следовать символ новой строки.

     -s, --shell
                 Запустите оболочку, указанную переменной среды SHELL, если она
                 установлена, или оболочку, указанную в записи базы данных паролей
                 вызывающего пользователя. Если указана команда, она передается в
                 оболочку для выполнения через параметр оболочки -c. Если
                 команда не указана, выполняется интерактивная оболочка.

     -t type, --type=type
                 Запустите команду с контекстом безопасности SELinux, который включает
                 указанный тип. Если тип не указан, тип по умолчанию является
                 производным от правила.

     -U user, --other-user=user
                 Используется вместе с опцией -l для перечисления привилегий для
                 пользователя, а не для вызывающего пользователя. Политика
                 безопасности может ограничивать перечисление привилегий других
                 пользователей. Политика sudoers позволяет только пользователю
                 root или пользователю с привилегией ALL на текущем хосте
                 использовать эту опцию.

     -u user, --user=user
                 Запустите команду как пользователь, отличный от целевого пользователя
                 по умолчанию (обычно root). Пользователь может быть либо именем
                 пользователя, либо числовым пользователем ID (UID) с префиксом ‘#’
                 (как  #0 for UID 0). Когда команды запускаются как UID, многие
                 оболочки требуют, чтобы символ '#' экранировался обратной косой
                 чертой ('\'). Некоторые политики безопасности могут ограничивать
                 UIDs теми, которые перечислены в базе данных паролей. Политика
                 sudoers разрешает использование UIDs, которого нет в базе паролей,
                 если не задана опция targetpw. Другие политики безопасности могут
                 не поддерживать это.

     -V, --version
                 Напечатайте строку версии sudo, а также строку версии плагина
                 политики безопасности и всех плагинов ввода/вывода. Если вызывающий
                 пользователь уже является пользователем root, опция -V отобразит
                 аргументы, переданные для настройки при сборке sudo, а плагины
                 могут отображать более подробную информацию, например параметры
                 по умолчанию.

     -v, --validate
                 Обновите кэшированные учетные данные пользователя, аутентифицируя
                 пользователя, если это необходимо. Для плагина sudoers это продлевает
                 время ожидания sudo еще на 15 минут по умолчанию, но не запускает
                 команду. Не все политики безопасности поддерживают кэшированные
                 учетные данные.

     --          Опция -- указывает, что sudo должен прекратить обработку аргументов
                 командной строки.

     Переменные окружения, которые должны быть установлены для команды, также могут
     передаваться в командной строке в виде VAR=value, как
     LD_LIBRARY_PATH=/usr/local/pkg/lib. Переменные, передаваемые в командной строке,
     подчиняются ограничениям, налагаемым плагином политики безопасности. Переменные
     субъекта политики sudoers передавались в командной строке с теми же ограничениями,
     что и обычные переменные среды, за одним важным исключением. Если в sudoers
     установлена ​​опция setenv, для запускаемой команды установлен тег SETENV или
     для команды выбрано ALL, пользователь может установить переменные, которые в
     противном случае были бы запрещены. Смотрите sudoers(5) для получения
     дополнительной информации.

COMMAND EXECUTION
     Когда sudo выполняет команду, политика безопасности определяет среду выполнения для
     команды. Как правило, реальный и эффективный пользователь и группа и идентификаторы
     устанавливаются так, чтобы соответствовать идентификаторам целевого пользователя,
     как указано в базе данных паролей, а вектор группы инициализируется на основе базы
     данных группы (если не указана опция -P).

     В политике безопасности могут быть указаны следующие параметры:

     ·   реальный и эффективный ID пользователя

     ·   реальный и эффективный ID группы

     ·   идентификаторы дополнительных групп

     ·   список среды

     ·   текущий рабочий каталог

     ·   маска режима создания файла (umask)

     ·   SELinux правило и тип

     ·   приоритет планирования (или хорошее значение)

   Process model
     Когда sudo запускает команду, она вызывает fork(2), устанавливает среду
     выполнения, как описано выше, и вызывает системный вызов execve в дочернем
     процессе. Основной процесс sudo ожидает завершения команды, затем передает
     статус завершения команды функции закрытия политики безопасности и завершает
     работу. Если подключаемый модуль ведения журнала ввода-вывода настроен или
     если политика безопасности явно запрашивает его, создается новый псевдо-терминал
     ('pty'), а второй процесс sudo используется для передачи сигналов управления
     заданиями между существующим pty пользователя и новый pty, в котором выполняется
     команда. Этот дополнительный процесс позволяет, например, приостановить и возобновить
     выполнение команды. Без этого команда была бы в том, что POSIX называет «потерянной
     группой процессов», и не получала бы никаких сигналов управления заданиями. В особом
     случае, если плагин политики не определяет функцию закрытия и pty не требуется, sudo
     выполнит команду напрямую, вместо того, чтобы сначала вызвать fork(2). Плагин
     политики sudoers будет определять функцию закрытия только тогда, когда включено
     ведение журнала ввода-вывода, требуется pty или включены параметры pam_session или
     pam_setcred. Обратите внимание, что pam_session и pam_setcred включены по умолчанию
     в системах, использующих PAM.

   Signal handling
     Когда команда запускается как дочерний элемент процесса sudo, sudo передает
     сигналы, которые она получает, команде. Сигналы SIGINT и SIGQUIT передаются только
     тогда, когда команда выполняется в новом pty или когда сигнал был отправлен
     пользовательским процессом, а не ядром. Это предотвращает получение команды SIGINT
     дважды каждый раз, когда пользователь вводит control-C. Некоторые сигналы, такие как
     SIGSTOP и SIGKILL, не могут быть перехвачены и, следовательно, не будут переданы
     команде. Как правило, SIGTSTP следует использовать вместо SIGSTOP, если вы хотите
     приостановить выполнение команды sudo.

     В особом случае sudo не будет передавать сигналы, отправленные командой, которую она
     запускает. Это предотвращает случайное убийство команды. В некоторых системах команда
     reboot(8) отправляет SIGTERM всем несистемным процессам, кроме себя, перед
     перезагрузкой системы. Это предотвращает передачу sudo сигнала SIGTERM, который он
     получил, обратно в reboot(8), который затем может завершиться до того, как система
     будет фактически перезагружена, оставив его в полуживом состоянии, аналогичном
     однопользовательскому режиму. Однако обратите внимание, что эта проверка применяется
     только к команде, запускаемой sudo, а не к любым другим процессам, которые может
     создать команда. В результате запуск сценария, который вызывает reboot(8) или
     shutdown(8) через sudo, может привести к тому, что система окажется в этом
     неопределенном состоянии, если только reboot(8) или shutdown(8) не будут запущены
     с использованием семейства функций exec() вместо system() (который вставляет
     оболочку между командой и вызывающим процессом).

     Если никакие подключаемые модули ведения журнала ввода-вывода не загружены, а
     подключаемый модуль политики не определил функцию close(), установил тайм-аут команды
     или потребовал, чтобы команда была запущена в новом pty, sudo может выполнить команду
     непосредственно вместо запуска ее как дочерний процесс ,

   Plugins
     Плагины могут быть указаны через директивы Plugin в файле sudo.conf(5). Они могут
     быть загружены как динамические общие объекты (в системах, которые их поддерживают)
     или скомпилированы непосредственно в двоичный файл sudo. Если файл sudo.conf(5)
     отсутствует или не содержит строк плагинов, sudo будет использовать традиционную
     политику безопасности sudoers и ведение журнала ввода-вывода. См. Руководство
     sudo.conf(5) для получения подробной информации о файле /etc/sudo.conf и руководство
     sudo_plugin(8) для получения дополнительной информации об архитектуре подключаемого
     модуля sudo.

EXIT VALUE
     После успешного выполнения команды статус выхода из sudo будет статусом завершения
     программы, которая была выполнена. Если команда прервана из-за получения сигнала,
     sudo отправит сам сигнал, который завершил команду.

     В противном случае sudo завершается со значением 1, если существует проблема
     конфигурации/разрешения или если sudo не может выполнить данную команду. В
     последнем случае строка ошибки печатается со стандартной ошибкой. Если sudo не
     может выполнить stat(2) одну или несколько записей в пользовательском PATH, в
     стандартную ошибку выводится сообщение об ошибке. (Если каталог не существует или
     если он на самом деле не является каталогом, запись игнорируется и ошибка не
     выводится.) Этого не должно происходить при нормальных обстоятельствах. Наиболее
     распространенная причина возврата “permission denied” к stat(2) - это если вы
     запускаете автомонтирование, и один из каталогов в вашем PATH находится на
     компьютере, который в данный момент недоступен.

SECURITY NOTES
     sudo пытается быть в безопасности при выполнении внешних команд.

     Чтобы предотвратить подделку команд, sudo проверяет "." and "" (оба обозначают
     текущий каталог) последним при поиске команды в PATH пользователя (если один
     или оба находятся в PATH). Однако обратите внимание, что фактическая переменная
     среды PATH не изменяется и передается без изменений в программу, которая
     выполняется sudo.

     Пользователям никогда не следует предоставлять привилегии sudo для выполнения
     файлов, доступных для записи пользователем или находящихся в каталоге, доступном
     для записи пользователем. Если пользователь может изменить или заменить команду,
     нет способа ограничить то, какие дополнительные команды он может выполнять.

     Обратите внимание, что sudo, как правило, регистрирует только команду, которую
     запускает явно. Если пользователь запускает такие команды, как sudo su или sudo
     sh, последующие команды, запускаемые из этой оболочки, не подпадают под политику
     безопасности sudo. То же самое верно для команд, которые предлагают экранирование
     оболочки (включая большинство редакторов). Если ведение журнала ввода/вывода
     включено, последующие команды будут регистрировать свои входные и/или выходные
     данные, но для этих команд не будет традиционных журналов. В связи с этим необходимо
     проявлять осторожность, предоставляя пользователям доступ к командам через sudo,
     чтобы убедиться, что команда случайно не дает пользователю эффективную корневую
     оболочку. Для получения дополнительной информации см. Раздел 'Предотвращение побегов
     оболочки' в sudoers(5).

     Чтобы предотвратить раскрытие потенциально конфиденциальной информации, sudo
     отключает дампы ядра по умолчанию во время выполнения (они повторно включаются для
     запускаемой команды). Эта историческая практика восходит к тому времени, когда
     большинство операционных систем позволяли процессам setuid по умолчанию выгружать
     ядро. Чтобы помочь в отладке сбоев sudo, вы можете включить дамп ядра, установив
     для “disable_coredump” значение false в файле sudo.conf(5) следующим образом:

           Set disable_coredump false

     См. Руководство sudo.conf(5) для получения дополнительной информации.

ENVIRONMENT
     В sudo используются следующие переменные окружения. Политика безопасности
     контролирует фактическое содержимое командной среды.

     EDITOR           Редактор по умолчанию для использования в режиме -e (sudoedit),
                      если не установлены ни SUDO_EDITOR, ни VISUAL.

     MAIL             Установите почтовую папку целевого пользователя, когда указана
                      опция -i или когда в sudoers включен env_reset (если только
                      MAIL отсутствует в списке env_keep).

     HOME             Устанавливается в домашний каталог целевого пользователя, когда
                      заданы параметры -i или -H, когда задан параметр -s и set_home
                      установлен в sudoers, когда always_set_home включен в sudoers
                      или когда env_reset включен в sudoers, а HOME нет в списке
                      env_keep.

     LOGNAME          Установите имя для входа в систему целевого пользователя, когда
                      указана опция -i, когда опция set_logname включена в sudoers
                      или когда опция env_reset включена в sudoers (если LOGNAME
                      не присутствует в списке env_keep).

     PATH             Может быть отменено политикой безопасности.

     SHELL            Используется для определения оболочки для запуска с опцией -s.

     SUDO_ASKPASS     Указывает путь к вспомогательной программе, используемой для
                      чтения пароля, если нет доступных терминалов или если указана
                      опция -A.

     SUDO_COMMAND     Установите команду, запускаемую sudo.

     SUDO_EDITOR      Редактор по умолчанию для использования в режиме -e (sudoedit).

     SUDO_GID         Установите для группы ID пользователя, который вызвал sudo.

     SUDO_PROMPT      Используется как запрос пароля по умолчанию.

     SUDO_PS1         Если установлено, для PS1 будет установлено значение
                      для запускаемой программы.

     SUDO_UID         Установите пользователю ID пользователя, который вызвал sudo.

     SUDO_USER        Установите логин пользователя, который вызвал sudo.

     USER             Установите то же значение, что и LOGNAME, как описано выше.

     USERNAME         То же, что и USER.

     VISUAL           Редактор по умолчанию для использования в режиме -e (sudoedit),
                      если SUDO_EDITOR не установлен.

FILES
     /etc/sudo.conf            конфигурация внешнего интерфейса sudo

EXAMPLES
     Примечание. В следующих примерах предполагается правильно настроенная
     политика безопасности.

     Чтобы получить список файлов нечитаемого каталога:

           $ sudo ls /usr/local/protected

     Чтобы отобразить домашний каталог пользователя yaz на компьютере, где
     файловая система, содержащая ~yaz, не экспортируется как root:

           $ sudo -u yaz ls ~yaz

     Чтобы отредактировать файл index.html как пользователь www:

           $ sudo -u www vi ~www/htdocs/index.html

     Чтобы просмотреть системные журналы, доступные только пользователю root
     и пользователям в группе adm:

           $ sudo -g adm view /var/log/syslog

     Чтобы запустить редактор как jim с другой основной группой:

           $ sudo -u jim -g audio vi ~jim/sound.txt

     Чтобы выключить машину:

           $ sudo shutdown -r +15 "quick reboot"

     Составить список использования каталогов в разделе /​​home. Обратите внимание,
     что это запускает команды в под-оболочке, чтобы заставить работать
     перенаправление компакт-дисков и файлов.

           $ sudo sh -c "cd /home ; du -s * | sort -rn > USAGE"

SEE ALSO
     su(1), stat(2), passwd(5), sudo.conf(5), sudoers(5), sudo_plugin(8), sudoreplay(8),
     visudo(8)

HISTORY
     Посмотрите файл HISTORY в дистрибутиве sudo (https://www.sudo.ws/history.html)
     для краткой истории sudo.

AUTHORS
     Многие люди работали над sudo на протяжении многих лет; эта версия состоит из
     кода, написанного в основном:

           Todd C. Miller

     See the CONTRIBUTORS file in the sudo distribution (https://www.sudo.ws/contribu‐
     tors.html) for an exhaustive list of people who have contributed to sudo.

CAVEATS
     Нет простого способа помешать пользователю получить корневую оболочку, если ему
     разрешено запускать произвольные команды через sudo. Кроме того, многие программы
     (такие как редакторы) позволяют пользователю запускать команды через экранированные
     оболочки, что позволяет избежать проверок sudo. Однако в большинстве систем можно
     предотвратить побег оболочки с помощью функции noexec плагина sudoers(5).

     Не имеет смысла запускать команду cd напрямую через sudo, как,

           $ sudo cd /usr/local/protected

     поскольку при выходе из команды родительский процесс (ваша оболочка) все равно
     останется прежним. Пожалуйста, смотрите раздел EXAMPLES для получения
     дополнительной информации.

     Запуск сценариев оболочки через sudo может выявить те же ошибки ядра, которые
     делают сценарии оболочки setuid небезопасными в некоторых операционных системах
     (если в вашей ОС есть каталог /dev/fd/, сценарии оболочки setuid обычно безопасны).

BUGS
     Если вы считаете, что обнаружили ошибку в sudo, отправьте отчет об ошибке по
     адресу https://bugzilla.sudo.ws/

SUPPORT
     Ограниченная бесплатная поддержка доступна через список рассылки sudo-users,
     см. Https://www.sudo.ws/mailman/listinfo/sudo-users для подписки или
     поиска в архивах.

DISCLAIMER
     sudo предоставляется “AS IS”, и любые явные или подразумеваемые гарантии,
     включая, помимо прочего, подразумеваемые гарантии товарной пригодности и
     пригодности для определенной цели, отклоняются. См. Файл LICENSE,
     распространяемый вместе с sudo или https://www.sudo.ws/license.html для
     получения полной информации.

Sudo 1.8.16                          January 19, 2016                          Sudo 1.8.16
